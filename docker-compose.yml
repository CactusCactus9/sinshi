version: '3'

services:
  db:
    image: postgres:13
    container_name: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - "5432:5432"
    networks:
      - app_network
    restart: on-failure

  web:
    build: ./backend
    container_name: backend
    environment:
      - DJANGO_SETTINGS_MODULE=project.settings
    volumes:
      - ./backend:/app
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      - db
      - redis
    networks:
      - app_network 
    restart: on-failure

  frontend:
    build: ./frontend
    container_name: frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - frontend_modules:/app/node_modules
    stdin_open: true
    tty: true
    networks:
      - app_network
    restart: on-failure

  adminer:
    image: adminer
    container_name: adminer
    ports:
      - '8080:8080'
    environment:
      - ADMINER_DEFAULT_SERVER=${DB_HOST}
    depends_on:
      - db
    networks:
      - app_network
    restart: on-failure

  redis:
    image: redis:alpine
    container_name: redis
    ports:
      - "6380:6379"
    networks:
      - app_network
    restart: on-failure

networks:
  app_network:
    driver: bridge

volumes:
  postgres_data:
  frontend_modules:

