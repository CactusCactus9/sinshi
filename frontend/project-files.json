{
  "timestamp": "2024-12-21T16:40:35.282Z",
  "fileCount": 85,
  "files": [
    {
      "path": "/Users/elliech/Desktop/testy/frontend/package.json",
      "content": "{\n  \"name\": \"frontend\",\n  \"version\": \"0.1.0\",\n  \"private\": true,\n  \"dependencies\": {\n    \"@react-icons/all-files\": \"^4.1.0\",\n    \"@testing-library/jest-dom\": \"^5.17.0\",\n    \"@testing-library/react\": \"^13.4.0\",\n    \"@testing-library/user-event\": \"^13.5.0\",\n    \"axios\": \"^1.7.7\",\n    \"js-cookie\": \"^3.0.5\",\n    \"react\": \"^18.2.0\",\n    \"react-dom\": \"^18.2.0\",\n    \"react-icons\": \"^5.3.0\",\n    \"react-router-dom\": \"^6.22.0\",\n    \"react-scripts\": \"5.0.1\",\n    \"web-vitals\": \"^2.1.4\"\n  },\n  \"devDependencies\": {\n    \"@babel/plugin-proposal-private-property-in-object\": \"^7.21.11\"\n  },\n  \"scripts\": {\n    \"start\": \"react-scripts start\",\n    \"build\": \"react-scripts build\",\n    \"test\": \"react-scripts test\",\n    \"eject\": \"react-scripts eject\"\n  },\n  \"eslintConfig\": {\n    \"extends\": [\n      \"react-app\",\n      \"react-app/jest\"\n    ]\n  },\n  \"browserslist\": {\n    \"production\": [\n      \">0.2%\",\n      \"not dead\",\n      \"not op_mini all\"\n    ],\n    \"development\": [\n      \"last 1 chrome version\",\n      \"last 1 firefox version\",\n      \"last 1 safari version\"\n    ]\n  }\n}"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/project-files.json",
      "content": ""
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/public/index.html",
      "content": "<!DOCTYPE html>\n<html lang=\"en\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <link rel=\"icon\" href=\"%PUBLIC_URL%/favicon.ico\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\" />\n    <meta name=\"theme-color\" content=\"#000000\" />\n    <meta\n      name=\"description\"\n      content=\"Web site created using create-react-app\"\n    />\n    <link rel=\"apple-touch-icon\" href=\"%PUBLIC_URL%/logo192.png\" />\n    <!--\n      manifest.json provides metadata used when your web app is installed on a\n      user's mobile device or desktop. See https://developers.google.com/web/fundamentals/web-app-manifest/\n    -->\n    <link rel=\"manifest\" href=\"%PUBLIC_URL%/manifest.json\" />\n    <!--\n      Notice the use of %PUBLIC_URL% in the tags above.\n      It will be replaced with the URL of the `public` folder during the build.\n      Only files inside the `public` folder can be referenced from the HTML.\n\n      Unlike \"/favicon.ico\" or \"favicon.ico\", \"%PUBLIC_URL%/favicon.ico\" will\n      work correctly both with client-side routing and a non-root public URL.\n      Learn how to configure a non-root public URL by running `npm run build`.\n    -->\n    <title>React App</title>\n  </head>\n  <body>\n    <noscript>You need to enable JavaScript to run this app.</noscript>\n    <div id=\"root\"></div>\n    <!--\n      This HTML file is a template.\n      If you open it directly in the browser, you will see an empty page.\n\n      You can add webfonts, meta tags, or analytics to this file.\n      The build step will place the bundled scripts into the <body> tag.\n\n      To begin the development, run `npm start` or `yarn start`.\n      To create a production bundle, use `npm run build` or `yarn build`.\n    -->\n  </body>\n</html>\n"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/public/manifest.json",
      "content": "{\n  \"short_name\": \"React App\",\n  \"name\": \"Create React App Sample\",\n  \"icons\": [\n    {\n      \"src\": \"favicon.ico\",\n      \"sizes\": \"64x64 32x32 24x24 16x16\",\n      \"type\": \"image/x-icon\"\n    },\n    {\n      \"src\": \"logo192.png\",\n      \"type\": \"image/png\",\n      \"sizes\": \"192x192\"\n    },\n    {\n      \"src\": \"logo512.png\",\n      \"type\": \"image/png\",\n      \"sizes\": \"512x512\"\n    }\n  ],\n  \"start_url\": \".\",\n  \"display\": \"standalone\",\n  \"theme_color\": \"#000000\",\n  \"background_color\": \"#ffffff\"\n}\n"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/scan-project.js",
      "content": "const fs = require('fs').promises;\nconst path = require('path');\n\nconst ignoreList = [\n  'node_modules',\n  '.git',\n  '.next',\n  'dist',\n  '.env',\n  'package-lock.json',\n  'yarn.lock',\n  '.DS_Store',\n  'coverage',\n  'build',\n  'project_structure.md',\n  'project_structure.js'\n];\n\nconst allowedExtensions = [\n  '.js',\n  '.jsx',\n  '.css',\n  '.html',\n  '.json'\n];\n\nasync function readFile(filePath) {\n  try {\n    const content = await fs.readFile(filePath, 'utf8');\n    return {\n      path: filePath,\n      content: content,\n    };\n  } catch (error) {\n    // For binary files, just store the path\n    if (error.code === 'ERR_INVALID_ARG_VALUE') {\n      return {\n        path: filePath,\n        content: '[binary file]'\n      };\n    }\n    console.error(`Error reading file ${filePath}:`, error);\n    return null;\n  }\n}\n\nasync function scanDirectory(dirPath) {\n  const results = [];\n\n  async function scan(currentPath) {\n    const entries = await fs.readdir(currentPath, { withFileTypes: true });\n    \n    for (const entry of entries) {\n      const fullPath = path.join(currentPath, entry.name);\n      const relativePath = path.relative(process.cwd(), fullPath);\n      \n      if (ignoreList.some(ignore => relativePath.includes(ignore))) {\n        continue;\n      }\n\n      if (entry.isDirectory()) {\n        await scan(fullPath);\n      } else {\n        const ext = path.extname(entry.name);\n        if (allowedExtensions.includes(ext)) {\n          const fileContent = await readFile(fullPath);\n          if (fileContent) {\n            results.push(fileContent);\n          }\n        }\n      }\n    }\n  }\n\n  await scan(dirPath);\n  return results;\n}\n\nasync function writeResults(results) {\n  const output = {\n    timestamp: new Date().toISOString(),\n    fileCount: results.length,\n    files: results\n  };\n\n  await fs.writeFile(\n    'project-files.json',\n    JSON.stringify(output, null, 2),\n    'utf8'\n  );\n}\n\nasync function main() {\n  try {\n    console.log('Starting project scan...');\n    const projectPath = process.cwd();\n    const results = await scanDirectory(projectPath);\n    console.log(`Found ${results.length} files. Writing results...`);\n    await writeResults(results);\n    console.log('Project scan complete! Results written to project-files.json');\n  } catch (error) {\n    console.error('Error scanning project:', error);\n    process.exit(1);\n  }\n}\n\nmain();\n"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/App.css",
      "content": ".app-container {\n  display: flex;\n  width: 1280px;\n  height: 1080px;\n  margin: 0 auto;\n  overflow: hidden;\n  /* border-radius: 4px; */\n}\n\n.page-content {\n  flex-grow: 1;\n  padding: 20px;\n  background-color: #3F4054;\n  min-height: 100vh;\n}\n"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/App.js",
      "content": "import React from 'react';\nimport { createBrowserRouter, RouterProvider, Outlet, Navigate } from 'react-router-dom';\nimport Navbar from './components/Navbar';\nimport Home from './pages/home/Home';\nimport Profile from './pages/profile/Profile';\nimport ProfileFriend from './pages/ProfileFriend/ProfileFriend';\nimport Chat from './pages/chat/Chat';\nimport Game from './pages/game/Game';\nimport Friends from './pages/friends/Friends';\nimport Settings from './pages/settings/Settings';\nimport Logout from './pages/logout/Logout';\nimport SignIn from './pages/signin/SignIn';\nimport SignUp from './pages/signin/SignUp';\nimport { useAuth } from './context/AuthContext';\nimport LoginCallback from './pages/signin/LoginCallback';\nimport OAuthTwoFactorVerification from './components/OAuthTwoFactorVerification';\nimport TwoFactorVerification from './components/TwoFactorVerification';\nimport { NotificationProvider } from './context/NotificationContext';\nimport Notifications from './components/Notifications';\n\nimport \"./App.css\"\n\nimport Local from './pages/game/Local';\nimport Online from './pages/game/RemoteGame';\nimport SingleLocal from './pages/game/SingleLocal';\nimport TournamentLocal from './pages/game/TournamentLocal';\nimport Tournament from './pages/game/Tournament';\nimport OnePlayerGame from './pages/game/OnePlayerGame';\nimport TwoPlayersGame from './pages/game/TwoPlayersGame';\nimport OnePlayerScore from './pages/game/Score1player';\nimport TwoPlayersScore from './pages/game/Score2players';\nimport TourFinalScore from './pages/game/TourFinalScore';\n\nconst AppContent = () => {\n  const { islog } = useAuth();\n\n  const router = createBrowserRouter([\n    {\n      path: \"/\",\n      element: islog ? <Navigate to=\"/home\" /> : <Outlet />,\n      children: [\n        { path: \"\", element: <SignIn /> },\n        { path: \"signIn\", element: <SignIn /> },\n        { path: \"signUp\", element: <SignUp /> },\n        { path: \"logincallback\", element: <LoginCallback /> },\n        { path: \"verify-2fa-oauth\", element: <OAuthTwoFactorVerification /> },\n        { path: \"verify-2fa\", element: <TwoFactorVerification /> },\n      ],\n      errorElement: <Navigate to=\"/\" />\n    },\n    {\n      path: \"/\",\n      element: islog ? (\n        <>\n          <Navbar />\n          <div className=\"page-content\">\n            <Outlet />\n          </div>\n        </>\n      ) : <Navigate to=\"/signIn\" />,\n      children: [\n        {\n          path: \"home/*\",\n          children: [\n            { path: \"\", element: <Home /> },\n            { path: \":userId\", element: <ProfileFriend /> },\n            { path: \"TournamentLocal\", element: <TournamentLocal /> },\n            { path: \"SoloPractice\", element: <OnePlayerGame /> },\n            { path: \"ChallengeAFriend\", element: <TwoPlayersGame /> },\n            { path: \"Online\", element: <Online /> },\n          ]\n        },\n        {\n          path: \"profile/*\",\n          children: [\n            { path: \"\", element: <Profile /> },\n            { path: \":userId\", element: <ProfileFriend /> },\n          ]\n        },\n        {\n          path: \"friends/*\",\n          children: [\n            { path: \"\", element: <Friends /> },\n            { path: \":userId\", element: <ProfileFriend /> },\n          ]\n        },\n        { path: \"chat\", element: <Chat /> },\n        {\n          path: \"game/*\",\n          children: [\n            { path: \"\", element: <Game /> },\n            {\n              path: \"Local/*\",\n              children: [\n                { path: \"\", element: <Local /> },\n                {\n                  path: \"SingleGame/*\",\n                  children: [\n                    { path: \"\", element: <SingleLocal /> },\n                    {\n                      path: \"SoloPractice/*\",\n                      children: [\n                        { path: \"\", element: <OnePlayerGame /> },\n                        { path: \"Score\", element: <OnePlayerScore /> },\n                      ]\n                    },\n                    {\n                      path: \"ChallengeAFriend/*\",\n                      children: [\n                        { path: \"\", element: <TwoPlayersGame /> },\n                        { path: \"Score\", element: <TwoPlayersScore /> },\n                      ]\n                    },\n                  ]\n                },\n                {\n                  path: \"TournamentLocal/*\",\n                  children: [\n                    { path: \"\", element: <TournamentLocal /> },\n                    {\n                      path: \"Tournament/*\",\n                      children: [\n                        { path: \"\", element: <Tournament /> },\n                        { path: \"Results\", element: <TourFinalScore /> },\n                      ]\n                    },\n                  ]\n                },\n              ]\n            },\n            {\n              path: \"Online/*\",\n              children: [\n                { path: \"\", element: <Online /> },\n              ]\n            },\n          ]\n        },\n        { path: \"settings\", element: <Settings /> },\n        { path: \"logout\", element: <Logout /> },\n        { path: \"logincallback\", element: <LoginCallback /> }\n      ],\n      errorElement: <Navigate to=\"/\" />\n    }\n  ], {\n    future: {\n      v7_relativeSplatPath: true\n    }\n  });\n\n  return (\n    <>\n      <Notifications />\n      <RouterProvider router={router} />\n    </>\n  );\n};\n\nconst App = () => {\n  return (\n    <NotificationProvider>\n      <div className=\"app-container\">\n        <AppContent />\n      </div>\n    </NotificationProvider>\n  );\n};\n\nexport default App;"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/App.test.js",
      "content": "import { render, screen } from '@testing-library/react';\nimport App from './App';\n\ntest('renders learn react link', () => {\n  render(<App />);\n  const linkElement = screen.getByText(/learn react/i);\n  expect(linkElement).toBeInTheDocument();\n});\n"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/components/Banner.css",
      "content": ".banner {\n    text-align: center;\n    margin: 20px 0;\n  }\n  \n  .banner-image {\n    width: 20%;\n    height: auto;\n    padding: 0 80%;\n  }\n  "
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/components/Banner.js",
      "content": "import React from 'react';\nimport './Banner.css';\n\nimport Image from '../images/banner.jpg';\n\nconst Banner = () => {\n  return (\n    <div className=\"banner\">\n      <img src={Image} alt=\"Banner\" className=\"banner-image\" />\n    </div>\n  );\n};\n\nexport default Banner;\n"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/components/Modal.css",
      "content": ".modal-overlay {\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n    background-color: rgba(0, 0, 0, 0.5);\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    z-index: 1000;\n  }\n  \n  .modal-content {\n    background-color: white;\n    padding: 20px;\n    border-radius: 8px;\n    position: relative;\n    max-width: 90%;\n    max-height: 90%;\n    overflow-y: auto;\n  }\n  \n  .modal-close {\n    position: absolute;\n    top: 10px;\n    right: 10px;\n    background: none;\n    border: none;\n    font-size: 24px;\n    cursor: pointer;\n  }"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/components/Modal.js",
      "content": "import React from 'react';\nimport './Modal.css';\n\nconst Modal = ({ isOpen, onClose, children }) => {\n  if (!isOpen) return null;\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal-content\">\n        <button className=\"modal-close\" onClick={onClose}>\n          &times;\n        </button>\n        {children}\n      </div>\n    </div>\n  );\n};\n\nexport default Modal;\n\n"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/components/Navbar.css",
      "content": ".navbar {\n    background: linear-gradient(#3F4054, #666C8B, #404155);\n    display: flex;\n    justify-content: flex-start;\n    align-items: flex-start;\n    padding:90px 10px;\n  }\n  \n  .nav-items {\n    list-style: none;\n    padding: 0;\n    margin: 0;\n  }\n  \n  .nav-item {\n    margin-bottom: 10px;\n  }\n  \n  .nav-item a {\n    font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n    color: white;\n    text-decoration: none;\n    font-size: 16px;\n    display: block;\n    padding: 10px;\n  }\n  \n  .nav-item a:hover,\n  .nav-item a.active{\n    color: #BBFC52;\n  }\n\n  .spacer {\n    margin-top: 500px; \n  }\n\n\n.hamburger {\n  display: none;\n  font-size: 24px;\n  color: white;\n  cursor: pointer;\n  margin-bottom: 10px;\n}\n\n\n\n\n.nav-icon {\nmargin-right: 4px;\n}\n\n.img-profile{\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  margin-left: 30%;\n  object-fit: cover;\n}\n\n.username{\n  margin-left: 35%;\n  color: white;\n  font-size: 15px;\n  font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}\n\n\n"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/components/Navbar.js",
      "content": "import React, { useState } from 'react';\nimport './Navbar.css';\nimport { Link, useLocation } from 'react-router-dom';\n\nimport { HiOutlineHome } from \"react-icons/hi2\";\nimport { IoPersonOutline } from \"react-icons/io5\";\nimport { PiPingPongLight } from \"react-icons/pi\";\nimport { IoPeopleOutline } from \"react-icons/io5\";\nimport { BsChatDots } from \"react-icons/bs\";\nimport { AiOutlineSetting } from \"react-icons/ai\";\nimport { TbLogout2 } from \"react-icons/tb\";\nimport { FaBars } from \"react-icons/fa\";\nimport { useAuth } from '../context/AuthContext';\n\nconst Navbar = () => {\n  const location = useLocation();\n  const { user } = useAuth();\n  \n  const [menuOpen, setMenuOpen] = useState(false);\n\n\n  const getIconStyle = (path) => ({\n    color: '#BBFC52',\n    fontSize: '20px',\n  });\n\n  return (\n    <nav className=\"navbar\">\n      <div className=\"hamburger\" onClick={() => setMenuOpen(!menuOpen)}>\n        <FaBars />\n      </div>\n      <ul className={`nav-items ${menuOpen ? 'open' : ''}`}>\n        <img src={user ? user.avatar : ''} alt='Banner' className='img-profile'/>\n        <p className='username'>{user ? user.username : \"name\" }</p>\n        <li className=\"nav-item\">\n          <Link to=\"/home\" className={location.pathname === '/home' ? 'active' : ''}>\n            <HiOutlineHome style={getIconStyle('/home')} /> Home\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link to=\"/profile\" className={location.pathname === '/profile' ? 'active' : ''}>\n            <IoPersonOutline style={getIconStyle('/profile')} /> Profile\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link to=\"/chat\" className={location.pathname === '/chat' ? 'active' : ''}>\n            <BsChatDots style={getIconStyle('/chat')} /> Chat\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link to=\"/game\" className={location.pathname === '/game' ? 'active' : ''}>\n            <PiPingPongLight style={getIconStyle('/game')} /> Game\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link to=\"/friends\" className={location.pathname === '/friends' ? 'active' : ''}>\n            <IoPeopleOutline style={getIconStyle('/friends')} /> Friends\n          </Link>\n        </li>\n        <div className=\"spacer\"></div>\n        <li className=\"nav-item\">\n          <Link to=\"/settings\" className={location.pathname === '/settings' ? 'active' : ''}>\n            <AiOutlineSetting style={getIconStyle('/settings')} /> Settings\n          </Link>\n        </li>\n        <li className=\"nav-item\">\n          <Link to=\"/logout\" className={location.pathname === '/logout' ? 'active' : ''}>\n            <TbLogout2 style={getIconStyle('/logout')} /> Logout\n          </Link>\n        </li>\n      </ul>\n    </nav>\n  );\n};\n\nexport default Navbar;"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/components/Notifications.css",
      "content": ".notifications-container {\n    position: fixed;\n    top: 20px;\n    right: 20px;\n    z-index: 1000;\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n  }\n  \n  .notification {\n    display: flex;\n    align-items: center;\n    padding: 12px 20px;\n    border-radius: 8px;\n    min-width: 300px;\n    max-width: 400px;\n    animation: slideIn 0.3s ease-in-out;\n    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n  }\n  \n  .notification.success {\n    background-color: #BBFC52;\n    color: #3F4054;\n  }\n  \n  .notification.error {\n    background-color: #E84172;\n    color: white;\n  }\n  \n  .notification.info {\n    background-color: #636987;\n    color: white;\n  }\n  \n  .notification.warning {\n    background-color: #FFA500;\n    color: white;\n  }\n  \n  .notification-icon {\n    font-size: 20px;\n    margin-right: 12px;\n  }\n  \n  .notification-message {\n    flex-grow: 1;\n    font-size: 14px;\n  }\n  \n  .notification-close {\n    background: none;\n    border: none;\n    color: inherit;\n    cursor: pointer;\n    padding: 4px;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    opacity: 0.8;\n    transition: opacity 0.2s;\n  }\n  \n  .notification-close:hover {\n    opacity: 1;\n  }\n  \n  @keyframes slideIn {\n    from {\n      transform: translateX(100%);\n      opacity: 0;\n    }\n    to {\n      transform: translateX(0);\n      opacity: 1;\n    }\n  }"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/components/Notifications.js",
      "content": "import React from 'react';\nimport { IoCheckmarkCircle, IoWarning, IoInformationCircle, IoClose } from \"react-icons/io5\";\nimport { useNotification } from '../context/NotificationContext';\nimport './Notifications.css';\n\nconst Notifications = () => {\n  const { notifications, removeNotification } = useNotification();\n\n  const getIcon = (type) => {\n    switch (type) {\n      case 'success':\n        return <IoCheckmarkCircle className=\"notification-icon\" />;\n      case 'error':\n        return <IoWarning className=\"notification-icon\" />;\n      case 'warning':\n        return <IoWarning className=\"notification-icon\" />;\n      default:\n        return <IoInformationCircle className=\"notification-icon\" />;\n    }\n  };\n\n  return (\n    <div className=\"notifications-container\">\n      {notifications.map(({ id, message, type }) => (\n        <div key={id} className={`notification ${type}`}>\n          {getIcon(type)}\n          <span className=\"notification-message\">{message}</span>\n          <button \n            onClick={() => removeNotification(id)}\n            className=\"notification-close\"\n          >\n            <IoClose />\n          </button>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default Notifications;"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/components/OAuthTwoFactorVerification.css",
      "content": "\n.auth-container {\n    min-height: 100vh;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: linear-gradient(135deg, #1a1a1a 0%, #2a2a2a 100%);\n  }\n  \n  .auth-box {\n    background: rgba(255, 255, 255, 0.1);\n    backdrop-filter: blur(10px);\n    padding: 2rem;\n    border-radius: 15px;\n    width: 100%;\n    max-width: 400px;\n    text-align: center;\n    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n  }\n  \n  .auth-box h2 {\n    color: #ffffff;\n    margin-bottom: 1rem;\n    font-size: 1.8rem;\n  }\n  \n  .auth-subtitle {\n    color: #b3b3b3;\n    margin-bottom: 2rem;\n  }\n  \n  .verification-inputs {\n    display: flex;\n    gap: 0.5rem;\n    justify-content: center;\n    margin-bottom: 2rem;\n  }\n  \n  .code-input {\n    width: 45px;\n    height: 45px;\n    border: 2px solid rgba(255, 255, 255, 0.2);\n    border-radius: 8px;\n    text-align: center;\n    font-size: 1.5rem;\n    background: rgba(255, 255, 255, 0.1);\n    color: #ffffff;\n    transition: all 0.3s ease;\n  }\n  \n  .code-input:focus {\n    border-color: #4a90e2;\n    outline: none;\n    background: rgba(255, 255, 255, 0.2);\n  }\n  \n  .auth-button {\n    width: 100%;\n    padding: 0.8rem;\n    border: none;\n    border-radius: 8px;\n    background: #4a90e2;\n    color: white;\n    font-size: 1rem;\n    cursor: pointer;\n    transition: background 0.3s ease;\n  }\n  \n  .auth-button:hover {\n    background: #357abd;\n  }\n  \n  .auth-error {\n    color: #ff4b4b;\n    margin-bottom: 1rem;\n    font-size: 0.9rem;\n  }\n"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/components/OAuthTwoFactorVerification.js",
      "content": "import React, { useState } from 'react';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { verify2FACode } from '../pages/signin/AuthUtils';\nimport { useAuth } from '../context/AuthContext';\nimport { useNotification } from '../context/NotificationContext';\nimport './TwoFactorAuth.css';\n\nconst OAuthTwoFactorVerification = () => {\n  const [code, setCode] = useState(['', '', '', '', '', '']);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { setIslog } = useAuth();\n  const { addNotification } = useNotification();\n  const inputRefs = Array(6).fill(0).map(() => React.createRef());\n\n  const userId = new URLSearchParams(location.search).get('user_id');\n\n  const handleChange = (index, value) => {\n    if (isNaN(value)) return;\n    \n    const newCode = [...code];\n    newCode[index] = value;\n    setCode(newCode);\n\n    if (value && index < 5) {\n      inputRefs[index + 1].current.focus();\n    }\n  };\n\n  const handleKeyDown = (index, e) => {\n    if (e.key === 'Backspace' && !code[index] && index > 0) {\n      inputRefs[index - 1].current.focus();\n    }\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    const verificationCode = code.join('');\n    try {\n      await verify2FACode(userId, verificationCode);\n      addNotification(\"OAuth 2FA verification successful\", \"success\");\n      setIslog(true);\n      navigate('/home');\n    } catch (err) {\n      addNotification(err.message || \"Invalid verification code\", \"error\");\n      setError(err.error || 'Invalid verification code');\n      setCode(['', '', '', '', '', '']);\n      inputRefs[0].current.focus();\n    }\n  };\n\n  return (\n    <div className=\"auth-container\">\n      <div className=\"auth-box\">\n        <h2>Two-Factor Authentication</h2>\n        <p className=\"auth-subtitle\">Enter the 6-digit code from your authenticator app</p>\n        \n        <form onSubmit={handleSubmit}>\n          <div className=\"verification-inputs\">\n            {code.map((digit, index) => (\n              <input\n                key={index}\n                ref={inputRefs[index]}\n                type=\"text\"\n                maxLength=\"1\"\n                value={digit}\n                onChange={(e) => handleChange(index, e.target.value)}\n                onKeyDown={(e) => handleKeyDown(index, e)}\n                className=\"code-input\"\n              />\n            ))}\n          </div>\n          \n          {error && <div className=\"auth-error\">{error}</div>}\n          \n          <button type=\"submit\" className=\"auth-button\">\n            Verify\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default OAuthTwoFactorVerification;"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/components/TwoFactorAuth.css",
      "content": ".status-message {\n    margin: 10px 0;\n    padding: 8px 12px;\n    border-radius: 8px;\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}\n  \n.status-message.error {\n    background-color: rgba(232, 65, 114, 0.1);\n    color: #E84172;\n    border: 1px solid #E84172;\n}\n  \n.status-message.success {\n    background-color: rgba(187, 252, 82, 0.1);\n    color: #BBFC52;\n    border: 1px solid #BBFC52;\n}\n  \n.status-icon {\n    font-size: 18px;\n}\n  \n.verification-input.error {\n    border-color: #E84172;\n    background-color: rgba(232, 65, 114, 0.1);\n}\n  \n.button-group {\n    display: flex;\n    gap: 10px;\n    justify-content: center;\n    margin-top: 15px;\n}\n  \n.loading {\n    opacity: 0.7;\n    cursor: not-allowed;\n}\n  \n.auth-container {\n    min-height: 100vh;\n    min-width: 100vw;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background: linear-gradient(135deg, #1a1a1a 0%, #2a2a2a 100%);\n    position: fixed;\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n}\n  \n.auth-box {\n    background: rgba(255, 255, 255, 0.1);\n    backdrop-filter: blur(10px);\n    padding: 2rem;\n    border-radius: 15px;\n    width: 100%;\n    max-width: 400px;\n    text-align: center;\n    box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);\n}\n  \n.auth-box h2 {\n    color: #ffffff;\n    margin-bottom: 1rem;\n    font-size: 1.8rem;\n}\n  \n.auth-subtitle {\n    color: #b3b3b3;\n    margin-bottom: 2rem;\n}\n  \n.verification-inputs {\n    display: flex;\n    gap: 0.5rem;\n    justify-content: center;\n    margin-bottom: 2rem;\n}\n  \n.code-input {\n    width: 45px;\n    height: 45px;\n    border: 2px solid rgba(255, 255, 255, 0.2);\n    border-radius: 8px;\n    text-align: center;\n    font-size: 1.5rem;\n    background: rgba(255, 255, 255, 0.1);\n    color: #ffffff;\n    transition: all 0.3s ease;\n}\n  \n.code-input:focus {\n    border-color: #E84172;\n    outline: none;\n    background: rgba(255, 255, 255, 0.2);\n}\n  \n.code-input.error {\n    border-color: #E84172;\n    background-color: rgba(232, 65, 114, 0.1);\n}\n  \n.auth-button {\n    width: 100%;\n    padding: 0.8rem;\n    border: none;\n    border-radius: 8px;\n    background: #E84172;\n    color: white;\n    font-size: 1rem;\n    cursor: pointer;\n    transition: background 0.3s ease;\n}\n  \n.auth-button:hover {\n    background: #d13861;\n}\n  \n.auth-button:disabled {\n    opacity: 0.7;\n    cursor: not-allowed;\n}\n  \n.auth-error {\n    margin: 10px 0;\n    padding: 8px 12px;\n    border-radius: 8px;\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    background-color: rgba(232, 65, 114, 0.1);\n    color: #E84172;\n    border: 1px solid #E84172;\n    font-size: 0.9rem;\n}\n  \n.auth-success {\n    margin: 10px 0;\n    padding: 8px 12px;\n    border-radius: 8px;\n    display: flex;\n    align-items: center;\n    gap: 8px;\n    background-color: rgba(187, 252, 82, 0.1);\n    color: #BBFC52;\n    border: 1px solid #BBFC52;\n    font-size: 0.9rem;\n}\n\n/* New styles for the updated TwoFactorAuth component */\n.security-section {\n    padding: 2rem;\n    background: rgba(255, 255, 255, 0.1);\n    border-radius: 15px;\n    max-width: 500px;\n    margin: 0 auto;\n}\n\n.security-header {\n    display: flex;\n    align-items: center;\n    gap: 1rem;\n    margin-bottom: 1.5rem;\n}\n\n.security-icon {\n    font-size: 24px;\n    color: #E84172;\n}\n\n.security-header h3 {\n    color: #ffffff;\n    margin: 0;\n    font-size: 1.5rem;\n}\n\n.two-fa-status {\n    margin-bottom: 1.5rem;\n    text-align: center;\n}\n\n.two-fa-status p {\n    color: #ffffff;\n    font-size: 1.1rem;\n    margin: 0;\n}\n\n.enabled-text {\n    color: #BBFC52;\n    font-weight: bold;\n}\n\n.disabled-text {\n    color: #E84172;\n    font-weight: bold;\n}\n\n.two-fa-toggle {\n    width: 100%;\n    padding: 1rem;\n    border: none;\n    border-radius: 8px;\n    background: #E84172;\n    color: white;\n    font-size: 1rem;\n    cursor: pointer;\n    transition: all 0.3s ease;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    gap: 0.5rem;\n    margin-top: 1rem;\n}\n\n.two-fa-toggle:hover {\n    background: #d13861;\n    transform: translateY(-1px);\n}\n\n.two-fa-toggle:disabled {\n    opacity: 0.7;\n    cursor: not-allowed;\n    transform: none;\n}\n\n.qr-section {\n    text-align: center;\n    padding: 1.5rem;\n}\n\n.qr-section h4 {\n    color: #ffffff;\n    margin-bottom: 1.5rem;\n}\n\n.qr-container {\n    background: white;\n    padding: 1rem;\n    border-radius: 8px;\n    margin-bottom: 1.5rem;\n    display: inline-block;\n}\n\n.qr-code {\n    max-width: 200px;\n    height: auto;\n}\n\n.verification-section {\n    margin-top: 1.5rem;\n}\n\n.verification-input {\n    width: 200px;\n    padding: 0.8rem;\n    border: 2px solid rgba(255, 255, 255, 0.2);\n    border-radius: 8px;\n    background: rgba(255, 255, 255, 0.1);\n    color: #ffffff;\n    text-align: center;\n    font-size: 1.2rem;\n    letter-spacing: 4px;\n    margin-bottom: 1rem;\n}\n\n.verification-input:focus {\n    outline: none;\n    border-color: #E84172;\n}\n\n.verify-button {\n    background: #BBFC52;\n    color: #1a1a1a;\n    border: none;\n    padding: 0.8rem 2rem;\n    border-radius: 8px;\n    font-weight: bold;\n    cursor: pointer;\n    transition: background 0.3s ease;\n}\n\n.verify-button:hover {\n    background: #a8e648;\n}\n\n.verify-button:disabled {\n    opacity: 0.7;\n    cursor: not-allowed;\n}\n\n.cancel-button {\n    background: transparent;\n    color: #ffffff;\n    border: 1px solid #ffffff;\n    padding: 0.8rem 2rem;\n    border-radius: 8px;\n    cursor: pointer;\n    transition: all 0.3s ease;\n}\n\n.cancel-button:hover {\n    background: rgba(255, 255, 255, 0.1);\n}\n\n.cancel-button:disabled {\n    opacity: 0.7;\n    cursor: not-allowed;\n}"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/components/TwoFactorAuth.js",
      "content": "import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { IoShieldCheckmarkOutline } from \"react-icons/io5\";\nimport { IoAlertCircle } from \"react-icons/io5\";\nimport { IoCheckmarkCircle } from \"react-icons/io5\";\nimport Modal from './Modal';\nimport './TwoFactorAuth.css';\n\n\nconst TwoFactorAuth = () => {\n  const [loading, setLoading] = useState(false);\n  const [is2FAEnabled, setIs2FAEnabled] = useState(false);\n  const [showQR, setShowQR] = useState(false);\n  const [qrCode, setQrCode] = useState('');\n  const [verificationCode, setVerificationCode] = useState('');\n  const [error2FA, setError2FA] = useState('');\n  const [success, setSuccess] = useState('');\n\n  useEffect(() => {\n    check2FAStatus();\n  }, []);\n\n  const check2FAStatus = async () => {\n    try {\n      const response = await axios.get('http://localhost:8000/api/2fa/status/', {\n        withCredentials: true,\n        headers: { 'Content-Type': 'application/json' }\n      });\n      \n      setIs2FAEnabled(response.data.is_enabled);\n    } catch (error) {\n      console.error('Failed to fetch 2FA status:', error);\n    }\n  };\n\n  const handleError = (message) => {\n    setError2FA(message);\n    setTimeout(() => setError2FA(''), 5000);\n  };\n\n  const handleSuccess = (message) => {\n    setSuccess(message);\n    setTimeout(() => setSuccess(''), 3000);\n  };\n\n  const enable2FA = async () => {\n    try {\n      setLoading(true);\n      setError2FA('');\n      const response = await axios.post('http://localhost:8000/api/2fa/enable/', {}, {\n        withCredentials: true,\n        headers: { 'Content-Type': 'application/json' }\n      });\n      \n      if (response.data.qr_code) {\n        setQrCode(response.data.qr_code);\n        setShowQR(true);\n      }\n    } catch (error) {\n      handleError('Failed to enable 2FA. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const verify2FA = async () => {\n    if (verificationCode.length !== 6) {\n      handleError('Please enter a 6-digit code');\n      return;\n    }\n\n    try {\n      setLoading(true);\n      const response = await axios.post('http://localhost:8000/api/2fa/verify/', \n        { code: verificationCode },\n        {\n          withCredentials: true,\n          headers: { 'Content-Type': 'application/json' }\n        }\n      );\n      \n      if (response.data.success) {\n        handleSuccess('2FA enabled successfully!');\n        setIs2FAEnabled(true);\n        setShowQR(false);\n        setVerificationCode('');\n      }\n    } catch (error) {\n      handleError('Invalid verification code. Please try again.');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const disable2FA = async () => {\n    try {\n      setLoading(true);\n      const response = await axios.post('http://localhost:8000/api/2fa/disable/', {}, {\n        withCredentials: true,\n        headers: { 'Content-Type': 'application/json' }\n      });\n\n      if (response.data.success) {\n        setIs2FAEnabled(false);\n        handleSuccess('2FA disabled successfully!');\n      }\n    } catch (error) {\n      handleError('Failed to disable 2FA');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <div className=\"security-section\">\n      <div className=\"security-header\">\n        <IoShieldCheckmarkOutline className=\"security-icon\" />\n        <h3>Two-Factor Authentication</h3>\n      </div>\n\n      <div className=\"two-fa-status\">\n        <p>Status: <span className={is2FAEnabled ? 'enabled-text' : 'disabled-text'}>\n          {is2FAEnabled ? 'Enabled' : 'Disabled'}\n        </span></p>\n      </div>\n\n      {success && (\n        <div className=\"status-message success\">\n          <IoCheckmarkCircle className=\"status-icon\" />\n          {success}\n        </div>\n      )}\n      \n      <button \n        className={`two-fa-toggle ${is2FAEnabled ? 'enabled' : ''} ${loading ? 'loading' : ''}`}\n        onClick={is2FAEnabled ? disable2FA : enable2FA}\n        disabled={loading}\n      >\n        <IoShieldCheckmarkOutline />\n        {is2FAEnabled ? 'Disable 2FA' : 'Enable 2FA'}\n      </button>\n\n      <Modal isOpen={showQR} onClose={() => !loading && setShowQR(false)}>\n        <div className=\"qr-section\">\n          <h4>Scan QR code with authenticator app</h4>\n          {qrCode && (\n            <div className=\"qr-container\">\n              <img \n                src={`data:image/png;base64,${qrCode}`} \n                alt=\"2FA QR Code\" \n                className=\"qr-code\"\n              />\n            </div>\n          )}\n          <div className=\"verification-section\">\n            <input\n              type=\"text\"\n              placeholder=\"Enter 6-digit code\"\n              maxLength=\"6\"\n              value={verificationCode}\n              onChange={(e) => setVerificationCode(e.target.value.replace(/\\D/g, ''))}\n              className={`verification-input ${error2FA ? 'error' : ''}`}\n              autoFocus\n              disabled={loading}\n            />\n            {error2FA && (\n              <div className=\"status-message error\">\n                <IoAlertCircle className=\"status-icon\" />\n                {error2FA}\n              </div>\n            )}\n            <div className=\"button-group\">\n              <button \n                className={`verify-button ${loading ? 'loading' : ''}`}\n                onClick={verify2FA}\n                disabled={loading || verificationCode.length !== 6}\n              >\n                Verify\n              </button>\n              <button \n                className=\"cancel-button\"\n                onClick={() => {\n                  setShowQR(false);\n                  setVerificationCode('');\n                  setError2FA('');\n                }}\n                disabled={loading}\n              >\n                Cancel\n              </button>\n            </div>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default TwoFactorAuth;"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/components/TwoFactorVerification.js",
      "content": "import React, { useState } from 'react';\n// import axios from 'axios';\nimport { useNavigate, useLocation } from 'react-router-dom';\nimport { verify2FACode } from '../pages/signin/AuthUtils';\nimport { useAuth } from '../context/AuthContext';\nimport { useNotification } from '../context/NotificationContext';\nimport './TwoFactorAuth.css';\n\nconst TwoFactorVerification = () => {\n  const [code, setCode] = useState(['', '', '', '', '', '']);\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { setIslog} = useAuth();\n  const { addNotification } = useNotification();\n  const inputRefs = Array(6).fill(0).map(() => React.createRef());\n\n  const userId = new URLSearchParams(location.search).get('user_id');\n\n  const handleChange = (index, value) => {\n    if (isNaN(value)) return;\n    \n    const newCode = [...code];\n    newCode[index] = value;\n    setCode(newCode);\n\n    if (value && index < 5) {\n      inputRefs[index + 1].current.focus();\n    }\n  };\n\n  const handleKeyDown = (index, e) => {\n    if (e.key === 'Backspace' && !code[index] && index > 0) {\n      inputRefs[index - 1].current.focus();\n    }\n  };\n\n  const handleSubmit = async (e) => \n    {\n    e.preventDefault();\n    const verificationCode = code.join('');\n    try \n    {\n      await verify2FACode(userId, verificationCode);\n      addNotification(\"2FA verification successful\", \"success\");\n      setIslog(true);\n      navigate('/home');\n    } catch (err) \n    {\n      addNotification(err.message || \"Invalid verification code\", \"error\");\n      setError(err.message || 'Invalid verification code');\n      setCode(['', '', '', '', '', '']);\n      inputRefs[0].current.focus();\n    }\n  };\n\n  return (\n    <div className=\"auth-container\">\n      <div className=\"auth-box\">\n        <h2>Two-Factor Authentication</h2>\n        <p className=\"auth-subtitle\">Enter the 6-digit code from your authenticator app</p>\n        \n        <form onSubmit={handleSubmit}>\n          <div className=\"verification-inputs\">\n            {code.map((digit, index) => (\n              <input\n                key={index}\n                ref={inputRefs[index]}\n                type=\"text\"\n                maxLength=\"1\"\n                value={digit}\n                onChange={(e) => handleChange(index, e.target.value)}\n                onKeyDown={(e) => handleKeyDown(index, e)}\n                className=\"code-input\"\n              />\n            ))}\n          </div>\n          \n          {error && <div className=\"auth-error\">{error}</div>}\n          \n          <button type=\"submit\" className=\"auth-button\">\n            Verify\n          </button>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default TwoFactorVerification;"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/context/AuthContext.js",
      "content": "import React, { createContext, useContext, useState, useEffect } from 'react';\nimport axios from 'axios';\n\nconst AuthContext = createContext();\n\naxios.defaults.withCredentials = true;\naxios.defaults.baseURL = 'http://localhost:8000/api';\n\nexport const AuthProvider = ({ children }) => {\n  const [islog, setIslog] = useState(false);\n  const [user, setUser] = useState(null);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    const interceptor = axios.interceptors.response.use(\n      response => response,\n      error => {\n        if (error.response?.status === 401) {\n          setIslog(false);\n          setUser(null);\n        }\n        return Promise.reject(error);\n      }\n    );\n\n    return () => axios.interceptors.response.eject(interceptor);\n  }, []);\n\n  const checkAuthStatus = async () => {\n    try {\n      const authResponse = await axios.get('/islogged/');\n      if (authResponse.status === 200) {\n        setIslog(true);\n        try {\n          const userResponse = await axios.get('/infoUser/');\n          setUser(userResponse.data);\n        } catch (error) {\n          console.error('Failed to fetch user info:', error);\n          setUser(null);\n        }\n      }\n    } catch (error) {\n      console.error('Authentication check failed:', error);\n      setIslog(false);\n      setUser(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const login = async (email, password) => {\n    try {\n      const loginResponse = await axios.post('/login/', { email, password });\n      \n      if (loginResponse.data.requires2FA) {\n        return loginResponse.data;\n      }\n      \n      setIslog(true);\n      const userResponse = await axios.get('/infoUser/');\n      setUser(userResponse.data);\n      return loginResponse.data;\n    } catch (error) {\n      console.error('Login error:', error);\n      setIslog(false);\n      setUser(null);\n      throw error;\n    }\n  };\n\n  useEffect(() => {\n    checkAuthStatus();\n  }, []);\n\n  if (loading) return null;\n\n  return (\n    <AuthContext.Provider value={{ \n      user,\n      setUser,\n      islog, \n      setIslog,\n      login,\n      logout: async () => {\n        try {\n          await axios.post('/logout/');\n        } finally {\n          setIslog(false);\n          setUser(null);\n        }\n      }\n    }}>\n      {children}\n    </AuthContext.Provider>\n  );\n};\n\nexport const useAuth = () => {\n  const context = useContext(AuthContext);\n  if (!context) throw new Error('useAuth must be used within AuthProvider');\n  return context;\n};"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/context/NotificationContext.js",
      "content": "import React, { createContext, useContext, useState, useCallback } from 'react';\n\nconst NotificationContext = createContext();\n\nexport const NotificationProvider = ({ children }) => {\n  const [notifications, setNotifications] = useState([]);\n\n  const removeNotification = useCallback((id) => {\n    setNotifications(prev => prev.filter(notification => notification.id !== id));\n  }, []);\n\n  const addNotification = useCallback((message, type = 'info', duration = 5000) => {\n    const id = Date.now();\n    setNotifications(prev => [...prev, { id, message, type }]);\n\n    if (duration) {\n      setTimeout(() => {\n        removeNotification(id);\n      }, duration);\n    }\n  }, [removeNotification]);\n\n  const value = {\n    notifications,\n    addNotification,\n    removeNotification\n  };\n\n  return (\n    <NotificationContext.Provider value={value}>\n      {children}\n    </NotificationContext.Provider>\n  );\n};\n\nexport const useNotification = () => {\n  const context = useContext(NotificationContext);\n  if (!context) {\n    throw new Error('useNotification must be used within a NotificationProvider');\n  }\n  return context;\n};"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/index.css",
      "content": "body {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\n"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/index.js",
      "content": "import React from 'react';\nimport ReactDOM from 'react-dom/client'; // Import the new `createRoot` API\nimport App from './App';\nimport \"./index.css\"\nimport { AuthProvider } from './context/AuthContext'; // Ensure AuthProvider is imported correctly\n\nconst rootElement = document.getElementById('root');\n\nconst root = ReactDOM.createRoot(rootElement);\n\nroot.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <App />\n    </AuthProvider>\n  </React.StrictMode>\n);\n"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/ProfileFriend/ProfileFriend.css",
      "content": ".friend-titles-profile{\n    font-size: 20px;\n    color: white;\n    font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}\n\n.friend-titles-profile-hi,\n.friend-titles-profile-ach{\n    margin-left: 70px;\n    font-size: 20px;\n    color: white;\n    font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}\n\n.friend-title-profile{\n  padding-left: 90px;\n  font-size: 20px;\n  color: white;\n  font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}\n\n.friend-content-profile {\n  max-width: 1200px;\n  margin-left: 60px;\n}\n\n\n.friend-info-profile {\n  margin-left: 90px;\n  width: 800px;\n  background-color: #636987;\n  height: 200px;\n  border-radius: 17px;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.3);\n  margin-top: 20px;\n}\n\n\n.friend-infos {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 40px;\n}\n\n\n.friend-info-group {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n}\n\n.friend-info-friends,\n.friend-info-history,\n.friend-info-achievement {\n  width: 300px;\n  max-width: 300px;\n  height: 400px;\n  background-color: #636987;\n  border-radius: 17px;\n  margin-top: 10px;\n  margin-left: 70px;\n}\n\n.friend-profile-photo{\n  width: 80px;\n  height: 80px;\n  border-radius: 50%;\n  object-fit: cover;\n  margin-top: 30px;\n  margin-left: 150px;\n\n}\n\n.friend-user-name{\n  display: flex;\n}\n\n.friend-name-status{\n  align-items: center;\n  gap: 8px;\n  color: white;\n  margin-top: 50px;\n  margin-left: 30px;\n  font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}\n\n.friend-status {\n  display: flex;\n  align-items: center;\n  color: #d3d3d3;\n  gap: 4px;\n}\n\n.friend-status-icon {\n  font-size: 12px;\n}\n\n.friend-level{\n  padding-left: 80px;\n}\n\n.friend-level-bar {    \n  margin-top: 20px;\n  margin-left: 17px;\n  width: 560px;\n  height: 27px;\n  background-color: #d3d3d3;\n  border-radius: 17px;\n}\n\n.friend-level-fill {\n  height: 100%;\n  background-color: #D8FD62;\n  border-radius: 17px;\n}\n\n.friend-my-level{\n  padding-top: 6px;\n  padding-left: 8px;\n  color: #636987;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}\n\n.friend-add-friend{\n  margin-top: 30px;\n  margin-left: 160px;\n  width: 90px;\n  background-color: #BBFC52;\n  height: 26px;\n  border-radius: 15px;\n  border: 0.5px solid rgb(242, 219, 219);\n  cursor: pointer;\n}\n\n.friend-add-friend:hover{\n  background-color: #A9DB4C;\n  border-color: #3F4054;\n}\n\n.friend-text-add-friend{\n  padding-top: 4px;\n  color: rgb(98, 89, 89);\n  padding-left: 9px;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n\n}\n.friend-block{\n  margin-top: 30px;\n  margin-left: 40px;\n  width: 90px;\n  background-color: #E84172;\n  height: 26px;\n  border-radius: 15px;\n  border: 0.5px solid rgb(242, 219, 219);\n  cursor: pointer;\n}\n\n.friend-block:hover{\n  background-color: #d1406c;\n  border-color: #4c0419;\n}\n\n.friend-text-block{\n  padding-top: 4px;\n  color: rgb(242, 219, 219);\n  padding-left: 14px;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n\n}\n\n.friend-friends-list {\n  list-style: none;\n  padding: 10px;\n  margin: 0;\n  max-height: 350px;\n  overflow-y: auto;\n  color: white;\n  font-size: 16px;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}\n\n.friend-friend-item {\n  display: flex;\n  align-items: center;\n  padding: 8px;\n  margin-bottom: 8px;\n}\n\n.friend-friend-photo {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  margin-right: 10px;\n  object-fit: cover;\n}\n\n.friend-friend-details {\n  display: flex;\n  flex-direction: column;\n  margin-left: 10px;\n  flex: 1;\n}\n\n.friend-friend-name {\n  color: white;\n}\n\n.friend-friend-message{\n  color: #d3d3d3;\n  font-size: 14px;\n  margin-top: 4px;\n}\n\n.friend-friend-icons {\n  display: flex;\n  gap: 5px;\n  margin-top: 5px;\n  margin-left: 10px;\n  margin-left: auto; \n}\n\n.friend-icon-add{\n  color: #D8FD62;\n  font-size: 18px;\n  cursor: pointer;\n}\n\n.friend-icon-profile{\n  color: #BBFC52;\n  font-size: 15px;\n  cursor: pointer;\n}\n\n.friend-icon-profile:hover{\n  /* font-size: 16px; */\n  color: #A9DB4C;\n}\n\n.friend-icon-add:hover{\n  /* font-size: 20px; */\n  color: #A9DB4C;\n}\n.friend-achievement-list {\n  list-style: none;\n  padding: 10px;\n  margin: 0;\n  max-height: 360px;\n  overflow-y: auto;\n  color: white;\n  font-size: 16px;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}\n\n.friend-history-list {\n  list-style: none;\n  padding: 10px;\n  margin: 0;\n  max-height: 350px;\n  overflow-y: auto;\n  color: white;\n  font-size: 16px;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}\n\n.friend-history-item {\n  display: flex;\n  justify-content: space-between;\n  padding: 8px;\n}\n\n.friend-history-profile {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  margin-right: 10px;\n  object-fit: cover;\n  margin-top: 2px;\n  \n}\n\n.friend-history-result {\n  padding-top: 15px;\n  color: #BBFC52;\n  flex-basis: 20%;\n}\n\n.friend-history-level {\n  padding-top: 15px;\n  color: white;\n}\n\n\n/* .friend-achievement-list {\n  list-style-type: none;\n  padding: 0;\n} */\n\n/* .friend-achievement-item {\n  padding-left: 20px;\n  display: flex;\n  align-items: center;\n  margin: 10px 0;\n} */\n\n.friend-achievement-item,\n.friend-history-item {\n    display: flex;\n    align-items: center;\n    padding: 10px;\n    margin-bottom: 8px;\n    background-color: #505468;\n    border-radius: 10px;\n}\n\n.friend-achievement-icon {\n  font-size: 24px;\n  color: #D8FD62;\n  margin-right: 10px;\n}\n\n.friend-achievement-details {\n  display: flex;\n  flex-direction: column;\n}\n\n.friend-achievement-title {\n  /* list-style: none; */\n  padding: 10px;\n  margin: 0;\n  /* max-height: 350px; */\n  overflow-y: auto;\n  color: white;\n  font-size: 16px;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}\n\n.friend-achievement-description {\n  color: #d3d3d3;\n  font-size: 14px;\n  margin-top: 4px;\n}\n\n\n\n.friend-text-all-friends,\n.friend-text-all-achievement{\n  color: rgb(242, 219, 219);\n  padding-left: 13px;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}\n\n\n"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/ProfileFriend/ProfileFriend.js",
      "content": "import React \nfrom 'react';\nimport Banner from '../../components/Banner';\nimport './ProfileFriend.css';\nimport Profileimg from './profile.jpg';\nimport { useParams } from 'react-router-dom';\nimport axios from 'axios';\nimport { useEffect , useState} from 'react';\n// import Imgp from './imgp.jpg';\n \n// import { IoPersonOutline } from \"react-icons/io5\";\n// import { BsChatDots } from \"react-icons/bs\";\nimport { IoEllipse } from \"react-icons/io5\";\n\nimport { FaMedal, FaTrophy, FaStar } from 'react-icons/fa';\n// import { IoMdAdd } from \"react-icons/io\";\n\nconst ProfileFriend = () => {\n\n    const gameHistory = [\n      { id: 1, img: Profileimg, result: 'Win', level: '5.00'},\n      { id: 2, img: Profileimg, result: 'Lose', level: '4.50'},\n      { id: 3, img: Profileimg, result: 'Win', level: '5.00'},\n      { id: 4, img: Profileimg, result: 'Lose', level: '3.80'},\n      { id: 5, img: Profileimg, result: 'Win', level: '4.20'},\n      { id: 5, img: Profileimg, result: 'Win', level: '4.20'}\n    ];\n\n    const achievements = [\n      { id: 1, icon: <FaMedal />, title: 'First Win', description: 'Won your first game!' },\n      { id: 2, icon: <FaTrophy />, title: 'Level 10', description: 'Reached level 10.' },\n      { id: 3, icon: <FaStar />, title: 'MVP', description: 'Awarded Most Valuable Player in 3 games.' },\n      { id: 4, icon: <FaMedal />, title: '10 Games Played', description: 'Participated in 10 games.' },\n      { id: 5, icon: <FaMedal />, title: '10 Games Played', description: 'Participated in 10 games.' }\n    ];\n    axios.defaults.withCredentials = true;\n    const [friendDetails, setFriendDetails] = useState('');\n\n  // const navigate = useNavigate();\n\n  // const handleAddFriendClick = () => {\n  //   // navigate('/settings');\n  // }\n  // const handleBlockClick = () => {\n  //   // navigate('/settings');\n  // }\n\n  // const handleAddClick = () => {\n  //   // navigate('/Add');\n  // };\n\n\n  // const handleFriendsClick = () => {\n  //   navigate('/friends');\n  // };\n  // const handleAllAchievementsClick = () => {\n  //    window.location.href = '/achievements';\n  // };\n\n  // const fetchFriendDetails = async () => {\n  //     try {\n  //         const response = await axios.get(`http://localhost:8000/frienduser/${userId}/`, {\n  //         });\n  //         setFriendDetails(response.data);\n  //     } catch (error) {\n  //         console.error('Error fetching friend details:', error);\n  //         // setError(error);\n  //     }\n  // };\n  // fetchFriendDetails();\n  const { userId } = useParams();\n  useEffect(() => {\n    axios.get(`http://localhost:8000/friends/frienduser/${userId}/`)\n            .then((response) => {\n                setFriendDetails(response.data);\n                console.log(\"-----------------------\");\n                console.log(response.data);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n\n}, [userId]);\n  return (\n    <div>\n      <Banner />\n      <div className=\"friend-content-profile\">\n          <h1 className='friend-title-profile'>Profile</h1>\n            <div className=\"friend-info-profile\">\n              <div className=\"friend-user-name\"> \n                <img src={friendDetails ? friendDetails.avatar : ''} alt='Profileimg' className=\"friend-profile-photo\"/>\n                <div className=\"friend-name-status\">\n                  {friendDetails ? friendDetails.username : ''}\n                  <div className=\"friend-status\">\n                    <IoEllipse \n                      style={{ \n                        color: friendDetails && friendDetails.status === 'Online' ? '#BBFC52' : '#E84172' \n                      }} \n                      className=\"friend-status-icon\" \n                    />\n                  <span>{friendDetails ? friendDetails.status : ''}</span>\n                  </div>\n                </div>\n              </div>\n              <div className=\"friend-level\">\n                <div className=\"friend-level-bar\">\n                <div className=\"friend-level-fill\" style={{ width: '70%' }}> <div className=\"friend-my-level\">lvl: 3.70 </div></div>\n              </div>\n            </div>\n            </div>\n        <div className=\"friend-infos\">\n          {/* <div className=\"friend-info-group\">\n            <p className='friend-titles-profile'>Friends</p>\n            <div className=\"friend-info-friends\">\n              <ul className=\"friend-friends-list\">\n              {friends.map(friend => (\n                  <li key={friend.id} className=\"friend-friend-item\">\n                    <img src={friend.image} alt={friend.name} className=\"friend-friend-photo\" />\n                    <div className=\"friend-friend-details\">\n                      <span className=\"friend-friend-name\">{friend.name}</span>\n                      <span className=\"friend-friend-message\">{friend.message}</span>\n                    </div>\n                    <div className=\"friend-friend-icons\">\n                        <Link className=\"friend-icon-profile\" to={`/profile/${friend.id}`}>{friend.profile}</Link>\n                        <span className=\"friend-icon-add\" onClick={handleAddClick}>{friend.add}</span>\n                    </div>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div> */}\n          <div className=\"friend-info-group\">\n            <h1 className='friend-titles-profile-hi'>History</h1>\n            <div className=\"friend-info-history\">\n              <ul className=\"friend-history-list\">\n                {gameHistory.map(game => (\n                  <li key={game.id} className=\"friend-history-item\">\n                    <img src={game.img} alt=\"Game History\" className=\"friend-history-profile\" />\n                    <span\n                      className=\"friend-history-result\"\n                      style={{ color: game.result === 'Win' ? '#D8FD62' : '#E84172' }}>\n                      {game.result}\n                    </span>\n                    <span className=\"friend-history-level\">Level: {game.level}</span>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n          <div className=\"friend-info-group\">\n            <h1 className='friend-titles-profile-ach'>Achievement</h1>\n            <div className=\"friend-info-achievement\">\n              <ul className=\"friend-achievement-list\">\n                  {achievements.map(achievement => (\n                    <li key={achievement.id} className=\"friend-achievement-item\">\n                      <span className=\"friend-achievement-icon\">{achievement.icon}</span>\n                      <div className=\"friend-achievement-details\">\n                        <span className=\"friend-achievement-title\">{achievement.title}</span>\n                        <span className=\"friend-achievement-description\">{achievement.description}</span>\n                      </div>\n                    </li>\n                  ))}\n                </ul>\n                {/* <div className=\"friend-all-achievement-button\" onClick={handleAllAchievementsClick}><div className=\"friend-text-all-achievement\">All Achievement</div></div> */}\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </div>\n  );\n};\n\nexport default ProfileFriend;\n"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/chat/Chat.css",
      "content": ".chat-container {\n    display: flex;\n    height: 100%;\n  }\n  \n  .chat-list {\n    flex: 1;\n    background-color: #636987ce;\n    color: white;\n    padding: 20px;\n    border-radius: 10px;\n  }\n  \n  .chat-list .search-bar input {\n    width: 100%;\n    padding: 10px;\n    border-radius: 5px;\n    margin-bottom: 20px;\n  }\n  \n  .chat-room-item {\n    margin: 10px 0;\n    padding: 15px;\n    border-radius: 5px;\n    background-color: #57606f;\n    cursor: pointer;\n  }\n  \n  .chat-room-item:hover {\n    background-color: #747d8c;\n  }\n  \n  .chat-detail {\n    flex: 2;\n    display: flex;\n    flex-direction: column;\n  }\n  \n  .messages {\n    flex: 1;\n    padding: 20px;\n    overflow-y: auto;\n    background-color: #fff;\n  }\n  \n  .message {\n    margin-bottom: 15px;\n    padding: 10px;\n    border-radius: 5px;\n    background-color: #f1f1f1;\n  }\n  \n  .message.own {\n    background-color: #cce5ff;\n    align-self: flex-end;\n  }\n  \n  .input-area {\n    display: flex;\n    padding: 10px;\n  }\n  \n  .input-area input {\n    flex: 1;\n    padding: 10px;\n    margin-right: 10px;\n  }\n  \n  .input-area button {\n    padding: 10px 20px;\n    background-color: #4caf50;\n    color: white;\n    border: none;\n    border-radius: 5px;\n  }\n\n  .user-info{\n    padding: 20px;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        border-bottom: 1px solid #dddddd35;\n  }\n  \n  "
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/chat/Chat.js",
      "content": "import React, { useState, useEffect } from \"react\";\nimport ChatList from \"./ChatList\";\nimport ChatDetail from \"./ChatDetail\";\nimport UserInfo from \"./UserInfo\";\nimport \"./Chat.css\";\n\nconst Chat = () => {\n  const [selectedRoom, setSelectedRoom] = useState(null);\n  const [selectedParticipant, setSelectedParticipant] = useState(null);\n\n  // Load initial chat room\n  useEffect(() => {\n    const fetchInitialRoom = async () => {\n      try {\n        const response = await fetch(\"http://localhost:8000/api/chat/rooms/\", {\n          credentials: \"include\",\n        });\n        const rooms = await response.json();\n        if (rooms.length > 0) {\n          setSelectedRoom(rooms[0].id);\n          setSelectedParticipant(rooms[0].participant_name || rooms[0].participant_email);\n        }\n      } catch (err) {\n        console.error(\"Failed to load initial chat room:\", err);\n      }\n    };\n    fetchInitialRoom();\n  }, []);\n\n  return (\n    <div className=\"chat-container\">\n      <div className=\"chat-list\">\n        <ChatList\n          onSelectRoom={(roomId, participantName) => {\n            setSelectedRoom(roomId);\n            setSelectedParticipant(participantName);\n          }}\n        />\n      </div>\n      <div className=\"chat-detail\">\n        {selectedRoom ? (\n          <ChatDetail roomId={selectedRoom} participantName={selectedParticipant} />\n        ) : (\n          <p className=\"no-room-selected\">Please select a chat room to start chatting.</p>\n        )}\n      </div>\n      <div className=\"user-info\">\n        <UserInfo\n          participantName={selectedParticipant}\n          participantStatus=\"Active\"\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/chat/ChatApi.js",
      "content": "const API_BASE_URL = \"http://localhost:8000/api\";\n\n// Helper function for API requests\nasync function fetchFromAPI(endpoint, method = \"GET\", body = null) {\n  const headers = {\n    \"Content-Type\": \"application/json\",\n  };\n\n  let response = await fetch(`${API_BASE_URL}${endpoint}`, {\n    method,\n    headers,\n    body: body ? JSON.stringify(body) : null,\n    credentials: \"include\", // Ensure cookies are sent\n  });\n\n  // Handle 401 (Unauthorized) errors\n  if (response.status === 401) {\n    console.warn(\"Unauthorized! Please ensure you are logged in.\");\n    return null;\n  }\n\n  if (!response.ok) {\n    const error = await response.json();\n    throw new Error(error.detail || \"Something went wrong\");\n  }\n\n  return response.json();\n}\n\n// Fetch chat rooms\nexport async function getChatRooms() {\n  return fetchFromAPI(\"/chat/rooms/\");\n}\n\n// Fetch messages for a specific room\nexport async function getMessages(roomId) {\n  return fetchFromAPI(`/chat/rooms/${roomId}/messages/`);\n}\n\n// Send a message to a chat room\nexport async function sendMessage(roomId, content) {\n  return fetchFromAPI(`/chat/rooms/${roomId}/messages/`, \"POST\", {\n    content,\n    message_type: \"text\",\n  });\n}\n"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/chat/ChatDetail.css",
      "content": ".chat {\n    display: flex;\n    flex-direction: column;\n    height: 100%;\n    flex: 2;\n    background-color: #3F4054; /* Darker background */\n    color: white; /* White text for contrast */\n    border-left: 1px solid rgba(200, 200, 200, 0.5);\n    border-right: 1px solid rgba(200, 200, 200, 0.5);\n  }\n  \n  /* -------- HEADER SECTION -------- */\n/* -------- HEADER SECTION -------- */\n.chat-header {\n    padding: 20px;\n    display: flex;\n    align-items: center;\n    border-bottom: 1px solid rgba(200, 200, 200, 0.5);\n  }\n  \n  .user-info {\n    display: flex;\n    align-items: center;\n    gap: 15px;\n  \n    img {\n      width: 50px;\n      height: 50px;\n      border-radius: 50%;\n      object-fit: cover;\n    }\n  \n    .texts {\n      display: flex;\n      flex-direction: column;\n      gap: 5px;\n  \n      span {\n        font-size: 18px;\n        font-weight: bold;\n        color: white; /* Adjust based on theme */\n      }\n  \n      p {\n        font-size: 14px;\n        color: rgba(200, 200, 200, 0.8);\n      }\n    }\n  }\n  \n  \n  /* -------- MESSAGES SECTION -------- */\n  .chat-messages {\n    flex: 1;\n    overflow-y: auto;\n    padding: 20px;\n  \n    .message {\n      display: flex;\n      gap: 10px;\n      margin-bottom: 15px;\n      max-width: 70%;\n      padding: 15px;\n      border-radius: 10px;\n      background-color: #636987;\n  \n      img {\n        width: 30px;\n        height: 30px;\n        border-radius: 50%;\n      }\n  \n      .message-texts {\n        display: flex;\n        flex-direction: column;\n        gap: 5px;\n  \n        p {\n          margin: 0;\n        }\n  \n        span {\n          font-size: 12px;\n          color: #ccc;\n          text-align: right;\n        }\n      }\n  \n      &.own {\n        align-self: flex-end;\n        background-color: #BBFC52;\n  \n        .message-texts span {\n          text-align: left;\n        }\n      }\n    }\n  }\n  \n  /* -------- INPUT SECTION -------- */\n  .chat-input {\n    display: flex;\n    align-items: center;\n    padding: 20px;\n    gap: 20px;\n    border-top: 1px solid rgba(200, 200, 200, 0.5);\n    background-color: rgba(63, 64, 84, 0.8);\n  \n    input {\n      flex: 1;\n      padding: 15px;\n      border-radius: 10px;\n      background-color: rgba(52, 68, 99, 0.5);\n      border: none;\n      outline: none;\n      color: white;\n      font-size: 16px;\n    }\n  \n    .send-button {\n      background-color: #E84172;\n      color: white;\n      padding: 10px 20px;\n      border: none;\n      border-radius: 5px;\n      cursor: pointer;\n  \n      &:hover {\n        background-color: rgba(232, 65, 114, 0.8);\n      }\n    }\n  }\n  "
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/chat/ChatDetail.js",
      "content": "\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport avatarImage from \"../../images/avatar.png\";\nimport \"./ChatDetail.css\";\n\nconst ChatDetail = ({ roomId, participantName }) => {\n  const [messages, setMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState(\"\");\n\n  // Fetch messages when roomId changes\n  useEffect(() => {\n    const fetchMessages = async () => {\n      try {\n        const response = await axios.get(\n          `http://localhost:8000/api/chat/rooms/${roomId}/messages/`,\n          { withCredentials: true }\n        );\n        setMessages(response.data);\n      } catch (err) {\n        console.error(\"Failed to fetch messages:\", err);\n      }\n    };\n\n    if (roomId) fetchMessages();\n  }, [roomId]);\n\n  // Handle sending a new message\n  const handleSendMessage = async () => {\n    if (!newMessage.trim()) return;\n\n    try {\n      const response = await axios.post(\n        `http://localhost:8000/api/chat/rooms/${roomId}/messages/`,\n        { content: newMessage, message_type: \"text\" },\n        { withCredentials: true }\n      );\n      setMessages((prev) => [...prev, response.data]);\n      setNewMessage(\"\");\n    } catch (err) {\n      console.error(\"Failed to send message:\", err);\n    }\n  };\n\n  return (\n    <div className=\"chat\">\n    {/* Top Section: User Info */}\n    <div className=\"chat-header\">\n      <div className=\"user-info\">\n        <img src={avatarImage} alt=\"Participant Avatar\" />\n        <div className=\"texts\">\n          <span>{participantName || \"Unknown User\"}</span>\n          <p>Status: Active</p>\n        </div>\n      </div>\n    </div>\n\n\n      {/* Center Section: Messages */}\n      <div className=\"chat-messages\">\n        {messages.map((msg) => (\n          <div\n            key={msg.id}\n            className={`message ${msg.sender_username === \"You\" ? \"own\" : \"\"}`}\n          >\n            <img src={avatarImage} alt=\"User Avatar\" />\n            <div className=\"message-texts\">\n              <p>{msg.content}</p>\n              <span>{new Date(msg.created_at).toLocaleTimeString()}</span>\n            </div>\n          </div>\n        ))}\n      </div>\n\n      {/* Bottom Section: Input */}\n      <div className=\"chat-input\">\n        <input\n          type=\"text\"\n          placeholder=\"Type a message...\"\n          value={newMessage}\n          onChange={(e) => setNewMessage(e.target.value)}\n        />\n        <button className=\"send-button\" onClick={handleSendMessage}>\n          Send\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatDetail;\n\n\n\n// colors green #BBFC52; rose #E84172; light backround colo #636987;\n// darker #3F4054;"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/chat/ChatList.css",
      "content": "\n.chatList {\n    flex: 1;\n    overflow-y: auto;\n  }\n  \n  .search {\n    display: flex;\n    align-items: center;\n    gap: 20px;\n    padding: 20px;\n  }\n  \n  .searchBar {\n    flex: 1;\n    background-color: rgba(52, 68, 99, 0.5);\n    display: flex;\n    align-items: center;\n    gap: 20px;\n    border-radius: 10px;\n    padding: 6px;\n  }\n  \n  .searchBar input {\n    background-color: transparent;\n    border: none;\n    outline: none;\n    color: white;\n    flex: 1;\n  }\n  \n  .searchBar img {\n    width: 20px;\n    height: 20px;\n  }\n  \n  .add {\n    width: 36px;\n    height: 36px;\n    background-color: rgba(52, 68, 99, 0.5);\n    padding: 10px;\n    border-radius: 10px;\n    cursor: pointer;\n  }\n  \n  .room-list {\n    display: flex;\n    flex-direction: column;\n    gap: 10px;\n    padding: 10px 10px;\n  }\n  \n  \n  .item{\n    display: flex;\n    align-items: center;\n    gap: 20px;\n    padding: 20px;\n    cursor: pointer;\n    border-bottom: 1px solid#dddddd35;;\n\n    img{\n        width: 50px;\n        height: 50px;\n        border-radius: 50%;\n        object-fit: cover;\n    }\n    .texts{\n        display: flex;\n        flex-direction: column;\n        gap: 10px;\n\n        span{\n            font-weight: 500;\n        }\n        p{\n            font-size: 14px;\n            font-weight: 300;\n        }\n    }\n}\n  .no-rooms {\n    text-align: center;\n    color: rgba(200, 200, 200, 0.8);\n    margin-top: 20px;\n  }\n  "
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/chat/ChatList.js",
      "content": "import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport \"./ChatList.css\";\nimport searchIcon from \"../../images/search.png\"; // Assuming there's a search icon\nimport avatar from \"../../images/avatar.png\"; // Assuming a placeholder avatar\n\nconst ChatList = ({ onSelectRoom }) => {\n  const [chatRooms, setChatRooms] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [activeRoomId, setActiveRoomId] = useState(null);\n\n  // Fetch chat rooms when the component loads\n  useEffect(() => {\n    const fetchChatRooms = async () => {\n      try {\n        const response = await axios.get(\"http://localhost:8000/api/chat/rooms/\", {\n          withCredentials: true,\n        });\n        setChatRooms(response.data);\n      } catch (err) {\n        console.error(\"Failed to fetch chat rooms:\", err);\n      }\n    };\n\n    fetchChatRooms();\n  }, []);\n\n  // Filter chat rooms based on the search query\n  const filteredRooms = chatRooms.filter((room) =>\n    (room.participant_name || room.participant_email)\n      ?.toLowerCase()\n      .includes(searchQuery.toLowerCase())\n  );\n\n  return (\n    <div className=\"chatList\">\n      {/* Search Section */}\n      <div className=\"search\">\n        <div className=\"searchBar\">\n          <img src={searchIcon} alt=\"Search\" />\n          <input\n            type=\"text\"\n            placeholder=\"Search chat rooms\"\n            value={searchQuery}\n            onChange={(e) => setSearchQuery(e.target.value)}\n          />\n        </div>\n      </div>\n\n      {/* Chat Room Items */}\n      <div className=\"room-list\">\n        {filteredRooms.length > 0 ? (\n          filteredRooms.map((room) => (\n            <div\n              key={room.id}\n              className={`item ${activeRoomId === room.id ? \"active\" : \"\"}`}\n              onClick={() => {\n                setActiveRoomId(room.id);\n                onSelectRoom(room.id, room.participant_name || room.participant_email);\n              }}\n            >\n              <img src={avatar} alt=\"Participant Avatar\" />\n              <div className=\"texts\">\n                <span>{room.participant_name || room.participant_email}</span>\n                <p>{room.last_message || \"No messages yet\"}</p>\n              </div>\n            </div>\n          ))\n        ) : (\n          <p className=\"no-rooms\">No chat rooms found.</p>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default ChatList;\n"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/chat/UserInfo.css",
      "content": "/* Main UserInfo Wrapper */\n.user-info {\n    padding: 30px 20px;\n    background-color: #636987ce;\n    border-radius: 10px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 20px;\n    color: white;\n  }\n  \n  /* User Details Section */\n  .user {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    gap: 10px;\n  \n    img {\n      width: 80px;\n      height: 80px;\n      border-radius: 50%;\n      object-fit: cover;\n    }\n  \n    h3 {\n      font-size: 18px;\n      margin: 0;\n      color: white;\n      \n    }\n  \n    .status {\n      font-size: 14px;\n      color: #28a745;\n      background-color: rgba(50, 205, 50, 0.2);\n      padding: 4px 10px;\n      border-radius: 4px;\n      \n    }\n  }\n  \n  /* User Actions Section */\n  .user-actions {\n    display: flex;\n    justify-content: space-around;\n    width: 100%;\n    gap: 20px;\n  \n    .action {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      gap: 5px;\n  \n      .action-icon {\n        width: 30px;\n        height: 0px;\n        padding: 5px;\n        border-radius: 50%;\n        background-color: rgba(255, 255, 255, 0.1);\n        cursor: pointer;\n        transition: background-color 0.3s ease;\n      }\n  \n      .action-icon:hover {\n        background-color: rgba(255, 255, 255, 0.3);\n      }\n  \n      span {\n        font-size: 12px;\n        color: white;\n        text-align: center;\n      }\n    }\n  }\n"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/chat/UserInfo.js",
      "content": "import React from \"react\";\nimport \"./UserInfo.css\";\nimport avatar from \"../../images/avatar.png\";\nimport chatIcon from \"../../images/chat-4-256.png\";\nimport pingPongIcon from \"../../images/ping-pong-256.png\";\nimport deleteIcon from \"../../images/delete-256.png\";\n\nconst UserInfo = ({ participantName, participantStatus }) => {\n  return (\n    <div className=\"user-info\">\n      {/* User Section */}\n      <div className=\"user\">\n        <img src={avatar} alt=\"Participant Avatar\" />\n        <div className=\"texts\">\n          <h3>{participantName || \"Unknown User\"}</h3>\n          <p className=\"status\">{participantStatus || \"Active\"}</p>\n        </div>\n      </div>\n\n      {/* User Actions Section */}\n      <div className=\"user-actions\">\n        <div className=\"action\">\n          <img\n            src={chatIcon}\n            alt=\"contact\"\n            className=\"action-icon\"\n            onClick={() => console.log(\"Block User clicked\")}\n          />\n          <span>Contact</span>\n        </div>\n        <div className=\"action\">\n          <img\n            src={pingPongIcon}\n            alt=\"Invite to Game\"\n            className=\"action-icon\"\n            onClick={() => console.log(\"Invite to Game clicked\")}\n          />\n          <span>Invite</span>\n        </div>\n        <div className=\"action\">\n          <img\n            src={deleteIcon}\n            alt=\"Delete Chat\"\n            className=\"action-icon\"\n            onClick={() => console.log(\"Delete Chat clicked\")}\n          />\n          <span>Delete</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default UserInfo;\n"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/friends/Friends.css",
      "content": ".f-friends-page {\n  margin-top: 70px;\n  /* margin-left: 10px; */\n  display: flex;\n  gap: 50px;\n}\n\n.f-friends-section, \n.f-all-users-section, \n.f-requests-section, \n.f-invitations-section {\n  margin-top: 20px;\n  width: 500px;\n  height: 630px;\n  background-color: #636987;\n  border-radius: 17px;\n  overflow: hidden;\n}\n\n.f-friends-list, \n.f-all-users-list, \n.f-requests-list, \n.f-invitations-list {\n  list-style: none;\n  padding: 8px;\n  max-height: 580px;\n  overflow-y: auto;\n  color: white;\n  font-size: 16px;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}\n\n.f-friend-item, \n.f-all-users-item, \n.f-requests-item, \n.f-invitation-item {\n  display: flex;\n  align-items: center;\n  height: 70px;\n  width: 300px;\n  padding: 10px;\n  margin-bottom: 8px;\n  margin-left: 75px;\n  background-color: #505468;\n  border-radius: 10px;\n}\n.f-friend-item{\n  height: 50px;\n}\n.f-invitation-item{\n  height: 85px;\n}\n\n.f-friend-photo, \n.f-all-users-photo, \n.f-requests-photo, \n.f-invitation-photo {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n}\n\n.f-all-users-photo, \n.f-requests-photo{\n  margin-left: 25px;\n}\n.f-invitation-photo{\n  margin-left: 20px;\n}\n\n.f-friend-details,\n.f-all-users-details {\n  display: flex;\n  flex-direction: column;\n  margin-left: 10px;\n  flex: 1;\n}\n.f-invitation-photo{\n  margin-bottom: 35px;\n}\n\n.f-cancel-friend-button{\n  width: 90px;\n  font-size: 15px;\n  color: rgb(223, 209, 209);\n  background-color: #E84172;\n  padding: 4px 8px;\n  margin-left: 105px;\n  text-align: center;\n  border: 0.5px solid rgb(144, 131, 131);\n  border-radius: 12px;\n  cursor: pointer;\n  margin-top: 8px;\n  margin-bottom: 10px;\n}\n\n.f-cancel-friend-button:hover {\n  background-color: #d1406c;;\n  border-color: #3F4054;\n}\n\n.f-add-friend-button {\n  width: 90px;\n  font-size: 15px;\n  color: rgb(98, 89, 89);\n  background-color: #BBFC52;\n  padding: 4px 8px;\n  margin-left: 105px;\n  text-align: center;\n  border: 0.5px solid rgb(189, 187, 187);\n  border-radius: 12px;\n  cursor: pointer;\n  margin-top: 8px;\n  margin-bottom: 10px;\n}\n\n.f-add-friend-button:hover {\n  background-color: #A9DB4C;\n  border-color: #3F4054;\n}\n\n.f-invitation-details {\n  margin-left: 10px;\n  margin-bottom: 10px;\n}\n\n.f-friends-titles {\n  padding-bottom: 15px;\n  padding-right: 220px;\n  font-size: 20px;\n  color: white;\n  text-align: center;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n  border-bottom: 1px solid #4C4F5C;\n}\n\n.f-icon {\n  margin-right: 8px;\n  color: #BBFC52;\n  font-size: 16px;\n  cursor: pointer;\n}\n\n.f-icon:hover {\n  color: #A9DB4C;\n}\n\n.f-invitation-buttons {\n  display: flex;\n  margin-top: 10px;\n  cursor: pointer;\n}\n\n.f-accept-button {\n  width: 80px;\n  color: rgb(98, 89, 89);\n  background-color: #BBFC52;\n  padding: 4px 8px;\n  text-align: center;\n  border: 0.5px solid rgb(189, 187, 187);\n  border-radius: 12px;\n  cursor: pointer;\n}\n\n.f-accept-button:hover {\n  background-color: #A9DB4C;\n  border-color: #3F4054;\n}\n\n.f-cancel-button {\n  width: 80px;\n  margin-left: 20px;\n  color: #3F4054;\n  background-color: #E84172;\n  padding: 4px 8px;\n  text-align: center;\n  border: 0.5px solid #24252c;\n  border-radius: 12px;\n  cursor: pointer;\n}\n\n.f-cancel-button:hover {\n  background-color: #d1406c;\n  border-color: #3F4054;;\n}\n\n.f-invitation-message {\n  color: #d3d3d3;\n  font-size: 14px;\n}\n\n.f-invitation-icon {\n  font-size: 18px;\n  color: #BBFC52;\n  cursor: pointer;\n  margin-left: auto;\n}\n\n.f-invitation-icon:hover {\n  color: #A9DB4C;\n}\n\n\n.f-all-users-name,\n.f-requests-name{\n  padding-top: 20px;\n}\n\n.f-all-users-photo,\n.f-requests-photo\n{\n  margin-bottom: 18px;\n}\n\n\n\n.f-requests-photo {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n}\n\n.f-requests-details {\n  display: flex;\n  flex-direction: column;\n  margin-left: 10px;\n  flex: 1;\n}\n\n.f-requests-name {\n  font-size: 16px;\n  color: white;\n}\n\n.f-friends-page {\n  margin-top: 70px;\n  display: flex;\n  justify-content: center;\n  width: 100%;\n}\n\n.f-section-toggle-container {\n  width: 100%;\n  max-width: 1200px;\n  padding: 0 50px;\n}\n\n.f-section-toggle-buttons {\n  display: flex;\n  justify-content: center;\n  gap: 20px;\n  margin-bottom: 20px;\n}\n\n.f-toggle-button {\n  padding: 10px 19px;\n  background-color: #505468;\n  font-size: 20px;\n  color: white;\n  border: none;\n  border-radius: 17px;\n  cursor: pointer;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}\n\n.f-toggle-button.active {\n  background-color: #BBFC52;\n  color: #3F4054;\n}\n\n.f-toggle-button:hover {\n  background-color: #636987;\n}\n\n.f-section-content {\n  display: flex;\n  justify-content: center;\n}\n\n.f-friend-status-icon{\n  font-size: 11px;\n}\n\n.f-friend-status{\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n  color: #d3d3d3;\n  font-size: 14px;\n  margin-top: 2px;\n}"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/friends/Friends.js",
      "content": "import React, { useState, useEffect } from 'react';\nimport './Friends.css';\nimport Banner from '../../components/Banner';\nimport { IoPersonOutline } from \"react-icons/io5\";\nimport { BsChatDots } from \"react-icons/bs\";\nimport { useNavigate } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { IoEllipse } from \"react-icons/io5\";\n// import { IoEllipseOutline } from \"react-icons/io5\";\n\n\nimport axios from 'axios';\n\nconst Friends = () => {\n    const [activeSection, setActiveSection] = useState('friends');\n    const [allSuggestions, setAllSuggestions] = useState([]);\n    const [allRequests, setAllRequests] = useState([]);\n    const [allFriends, setAllFriends] = useState([]);\n    const [invitations, setInvitations] = useState([]);\n    const [pending, setPending] = useState({});\n    \n    axios.defaults.withCredentials = true;\n    const navigate = useNavigate();\n\n    useEffect(() => {\n        axios.get('http://localhost:8000/friends/allsuggestions/')\n            .then((response) => {\n                setAllSuggestions(response.data);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }, [pending]);\n    \n    useEffect(() => {\n        axios.get('http://localhost:8000/friends/allfriends/')\n            .then((response) => {\n                setAllFriends(response.data);\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    }, [pending]);\n    \n    useEffect(() => {\n        axios.get('http://localhost:8000/friends/invitations/')\n        .then((response) => {\n            setInvitations(response.data);\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n    }, [pending]);\n  \n    useEffect(() => {\n        axios.get('http://localhost:8000/friends/requestssend/')\n        .then((response) => {\n            setAllRequests(response.data);\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n    }, [pending]);\n\n    const handleChatClick = (friend) => {\n        navigate('/chat');\n    };\n\n    const handleAcceptInvitation = (userId) => {\n        axios.post(`http://localhost:8000/friends/accept/${userId}/`)\n            .then(() => {\n                setPending((prevState) => ({ ...prevState, [userId]: false }));\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    const handleCancelInvitation = (userId) => {\n        axios.post(`http://localhost:8000/friends/declinereceveid/${userId}/`)\n            .then(() => {\n                setPending((prevState) => ({ ...prevState, [userId]: false }));\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    const handleAddFriend = (userId) => {\n        axios.post(`http://localhost:8000/friends/send/${userId}/`)\n            .then(() => {\n                setPending((prevState) => ({ ...prevState, [userId]: true }));\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n\n    const handleCancelRequest = (userId) => {\n        axios.post(`http://localhost:8000/friends/declinesend/${userId}/`)\n        .then(() => {\n            setPending((prevState) => ({ ...prevState, [userId]: false }));\n        })\n        .catch((err) => {\n            console.log(err);\n        });\n    };\n\n    return (\n        <div>\n            <Banner />\n            <div className=\"f-friends-page\">\n                <div className=\"f-section-toggle-container\">\n                    <div className=\"f-section-toggle-buttons\">\n                        <button \n                            className={`f-toggle-button ${activeSection === 'friends' ? 'active' : ''}`}\n                            onClick={() => setActiveSection('friends')}\n                        >\n                            All Friends\n                        </button>\n                        <button \n                            className={`f-toggle-button ${activeSection === 'invitations' ? 'active' : ''}`}\n                            onClick={() => setActiveSection('invitations')}\n                        >\n                            Invitations\n                        </button>\n                        <button \n                            className={`f-toggle-button ${activeSection === 'suggestions' ? 'active' : ''}`}\n                            onClick={() => setActiveSection('suggestions')}\n                        >\n                            Suggestions\n                        </button>\n                        <button \n                            className={`f-toggle-button ${activeSection === 'requests' ? 'active' : ''}`}\n                            onClick={() => setActiveSection('requests')}\n                        >\n                            Requests\n                        </button>\n                    </div>\n\n                    {activeSection === 'friends' && (\n                        <div className=\"f-section-content\">\n                            <div className=\"f-friends-section\">\n                                <ul className=\"f-friends-list\">\n                                    {allFriends.map(friend => (\n                                        <li key={friend.id} className=\"f-friend-item\">\n                                            <img src={friend.avatar} alt={friend.name} className=\"f-friend-photo\" />\n                                            <div className=\"f-friend-details\">\n                                                <span className=\"f-friend-name\">{friend.username}</span>\n                                                <div className='f-friend-status'>\n                                                <IoEllipse \n                                                  style={{ \n                                                    color: friend.status === 'Online' ? '#BBFC52' : '#E84172' \n                                                  }} \n                                                  className=\"f-friend-status-icon\" \n                                                />\n                                                  <span>{friend.status}</span>\n                                                </div>\n                                            </div>\n                                            <div className=\"f-friend-icons\">\n                                                <Link className=\"f-icon\" to={`/friends/${friend.id}`}><IoPersonOutline /></Link>\n                                                <Link className=\"f-icon\" onClick={() => handleChatClick(friend)}><BsChatDots /></Link>\n                                            </div>\n                                        </li>\n                                    ))}\n                                </ul>\n                            </div>\n                        </div>\n                    )}\n\n                    {activeSection === 'invitations' && (\n                        <div className=\"f-section-content\">\n                            <div className=\"f-invitations-section\">\n                                <ul className=\"f-invitations-list\">\n                                    {invitations.map(invite => (\n                                        <li key={invite.id} className=\"f-invitation-item\">\n                                            <img src={invite.sender.avatar} alt={invite.name} className=\"f-invitation-photo\" />\n                                            <div className=\"f-invitation-details\">\n                                                <div><span className=\"f-invitation-name\">{invite.sender.username}</span></div>\n                                                <div><span className=\"f-invitation-message\">Wants to be friends</span></div>\n                                                <div className=\"f-invitation-buttons\">\n                                                    <div onClick={() => handleAcceptInvitation(invite.sender.id)} className=\"f-accept-button\">Accept</div>\n                                                    <div onClick={() => handleCancelInvitation(invite.sender.id)} className=\"f-cancel-button\">Cancel</div>\n                                                </div>\n                                            </div>\n                                        </li>\n                                    ))}\n                                </ul>\n                            </div>\n                        </div>\n                    )}\n\n                    {activeSection === 'suggestions' && (\n                        <div className=\"f-section-content\">\n                            <div className=\"f-all-users-section\">\n                                <ul className=\"f-all-users-list\">\n                                    {allSuggestions.map(user => (\n                                        <li key={user.id} className=\"f-all-users-item\">\n                                            <img src={user.avatar} alt={user.avatar} className=\"f-all-users-photo\" />\n                                            <div className=\"f-all-users-details\">\n                                                <span className=\"f-all-users-name\">{user.username}</span>\n                                                <div\n                                                    onClick={() => handleAddFriend(user.id)}\n                                                    className=\"f-add-friend-button\"\n                                                >\n                                                    Add friend\n                                                </div>\n                                            </div>\n                                        </li>\n                                    ))}\n                                </ul>\n                            </div>\n                        </div>\n                    )}\n\n                    {activeSection === 'requests' && (\n                        <div className=\"f-section-content\">\n                            <div className=\"f-requests-section\">\n                                <ul className=\"f-requests-list\">\n                                    {allRequests.map(user => (\n                                        <li key={user.receiver.id} className=\"f-requests-item\">\n                                            <img src={user.receiver.avatar} alt={user.receiver.avatar} className=\"f-requests-photo\" />\n                                            <div className=\"f-requests-details\">\n                                                <span className=\"f-requests-name\">{user.receiver.username}</span>\n                                                <div\n                                                    onClick={() => handleCancelRequest(user.receiver.id)}\n                                                    className=\"f-cancel-friend-button\"\n                                                >\n                                                    Cancel\n                                                </div>\n                                            </div>\n                                        </li>\n                                    ))}\n                                </ul>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Friends;\n"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/game/FirstPage.css",
      "content": ".First-page-background {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    /* height: 100vh; */\n    /* width: 95vw; */\n    background-color: #3F4054;\n    padding-top: 50px;\n}\n.Ban {\n    display: flex;\n    flex-direction: row;\n    justify-items: right;\n    margin-top: 50px;\n    margin-right: -10px;\n    background-color: #3F4054;\n}\n\n.PongFirstPage {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-grow: 1;\n    width: 100%;\n}\n\n.GameMode {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    margin: 100px;\n}\n\n.Mode {\n    display: flex;\n    align-items: center;\n    margin: 8px;\n    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\n    color: white;\n}\n\n.Dot {\n    width: 14px;\n    height: 14px;\n    border-radius: 50%;\n    margin-right: 8px;\n    vertical-align: middle;\n}\n\n.LocalDot {\n    background-color: rgb(223, 55, 114);\n}\n\n.OnlineDot {\n    background-color: rgb(32, 208, 85);\n}\n\n.Start-game {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .START {\n    background-color: #b2ff00;\n    border-radius: 20px;\n    padding: 10px, 40px;\n    border: none;\n    padding: 10px 40px;\n    cursor: pointer;\n    \n  }\n  .radio-group {\n    display: flex;\n    flex-direction: column;\n    gap: 20px;\n    margin: 20px 0;\n  }\n  \n  /* Radio option styling */\n  .radio-option {\n    display: flex;\n    align-items: center;\n    font-size: 18px;\n    cursor: pointer;\n    gap: 10px;\n  }\n  \n  /* Hide the native radio button */\n  .radio-option input[type=\"radio\"] {\n    display: none;\n  }\n  \n  /* Custom radio button */\n  .custom-radio {\n    width: 20px;\n    height: 20px;\n    background-color: #b2ff00;\n    border-radius: 50%;\n    position: relative;\n  }\n  \n  /* Selected radio button (black inner circle) */\n  .radio-option input[type=\"radio\"]:checked + .custom-radio::after {\n    content: \"\";\n    width: 12px;\n    height: 12px;\n    background-color: black; /* Black circle when selected */\n    border-radius: 50%;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/game/FirstPage.js",
      "content": "import \"./FirstPage.css\";\nimport Banner from '../../components/Banner';\nimport PongSimulator from \"./PongSimulator\";\nimport { GiPingPongBat } from \"react-icons/gi\";\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\n\nfunction FirstPage() {\n    const [gameMode, setGameMode] = useState(\"\");\n\n    const navigate = useNavigate();\n    const handleStart = () =>{\n        navigate('/FirstPage');\n    }\n\n    const handleChange = (e) => {\n        setGameMode(e.target.value);\n        console.log(e.target.value);\n    };\n\n    return (\n        \n        <div>\n            <Banner />\n            <div className=\"First-page-background\">\n                <div className=\"PongFirstPage\"><PongSimulator /></div>\n                \n                <div className=\"radio-group\">\n                    <label className=\"radio-option\">\n                    <input\n                        type=\"radio\"\n                        name=\"gameMode\"\n                        value=\"Local\"\n                        checked={game === \"Local\"}\n                        onChange={handleChange}\n                    />\n                    <span className=\"custom-radio\"></span>\n                    Local\n                    </label>\n\n                    <label className=\"radio-option\">\n                    <input\n                        type=\"radio\"\n                        name=\"gameMode\"\n                        value=\"Online\"\n                        checked={gameMode === \"Online\"}\n                        onChange={handleChange}\n                    />\n                    <span className=\"custom-radio\"></span>\n                    Online\n                    </label>\n        </div>\n\n                {/* Start Game Button */}\n                <div className=\"Start-game\">\n                    <button className=\"START\" onClick={handleStart}><GiPingPongBat /> START</button>\n                </div>\n            </div>\n                </div>\n    );\n}\n\nexport default FirstPage;\n"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/game/FourVsFour.css",
      "content": ".FourVsFour-background {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  height: 100vh;\n  width: 95vw;\n  background: linear-gradient(110deg, #2f2e47 50%, #535379 50%);\n}\n\n\n.FourVsFour-container {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: right;\n  flex: 1;\n  padding: 20px;\n}\n\n.FourVsFour-icon {\n  width: 80px;\n  height: 80px;\n  background-color: #c4c4c4;\n  border-radius: 50%;\n  margin-bottom: 10px;\n}\n\n.FourName {\n  justify-content: center;\n  align-items: center;\n  font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n  color: #c4c4c4;\n}\n\n.FourS {\n  font-size: 9em;\n  font-weight: bold;\n  font-family:  'Montserrat', sans-serif;\n  color: #2f2e47;\n  position: relative; /* or absolute/fixed depending on your layout */\n  transform: translate(30px, -19px);\n}\n\n.FourV {\n  font-size: 9em;\n  font-weight: bold;\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\n  color: #535379;\n  margin: 0 20px;\n  transform: translate(-31px,90px);\n}\n.FourVsFour-button {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  justify-content: center;\n  transform: translate(-11px, 90px);\n}\n\n.FourVsFour-b {\n  bottom: 20px;\n  width: 200px;\n  padding: 10px 20px;\n  background-color: #b2ff00;\n  border: none;\n  border-radius: 20px;\n  cursor: pointer;\n}\n\n.Play {\n  font-size: 18px;\n  font-weight: bold;\n  color: #33384b;\n  padding: 10px;\n}"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/game/FourVsFour.js",
      "content": "import \"./FourVsFour.css\"\nimport { GiPingPongBat } from \"react-icons/gi\";\n\nfunction FourVsFour() {\n    return (\n        <div className=\"FourVsFour-background\">\n            <div className=\"FourVsFour-container\">\n                <div className=\"FourVsFour-container\">\n                    <div className=\"FourVsFour-icon\"></div>\n                    <p className=\"FourName\">Name</p>\n                </div>\n                <div className=\"FourVsFour-container\">\n                    <div className=\"FourVsFour-icon\"></div>\n                    <p className=\"FourName\">Name</p>\n                </div>\n            </div>\n            <div className=\"FourVsFour-container\">\n                <span className=\"FourV\">V</span>\n                <span className=\"FourS\">S</span>\n                <div className=\"FourVsFour-button\">\n                    <button className=\"FourVsFour-b\"> <GiPingPongBat /> <span className=\"Play\">PLAY</span></button>\n                </div>\n            </div>\n            <div className=\"FourVsFour-container\">\n                <div className=\"FourVsFour-container\">\n                    <div className=\"FourVsFour-icon\"></div>\n                    <p className=\"FourName\">Name</p>\n                </div>\n                <div className=\"FourVsFour-container\">\n                    <div className=\"FourVsFour-icon\"></div>\n                    <p className=\"FourName\">Name</p>\n                </div>\n            </div>\n        </div>\n    );\n}\nexport default FourVsFour;"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/game/Game.css",
      "content": ".Game-page-container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: row;\n    height: 100%; \n    width: 100%;\n} \n\n.other_elements{\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  background-color: #636987;\n  width: 400px;\n  height: 310px;\n  position:relative;\n  margin-left: 5px;\n  color: #D5CFCF;\n\n}\n\n.Separator-line{\n  border: 0;\n  width: 350px;\n  border-top: 5px solid #3F4054;\n  border-radius: 4px 0 0 4px;\n  margin: 30px 0 30px auto;\n}\n\n/* .GameMode {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    margin: 100px;\n} */\n\n/* .Mode {\n    display: flex;\n    align-items: center;\n    margin: 8px;\n    font-family: 'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\n    color: white;\n} */\n\n/* .Dot {\n    width: 14px;\n    height: 14px;\n    border-radius: 50%;\n    margin-right: 8px;\n    vertical-align: middle;\n    background-color: #b2ff00;\n} */\n\n\n  /* .START { */\n    /* padding: 10px, 40px; */\n    /* border: none; */\n    /* padding: 10px 40px; */\n    \n  /* } */\n  .radio-group {\n    display: flex;\n    align-items: flex-start;\n    justify-content: center;\n    flex-direction: column;\n    margin:0 auto 0 auto;\n    /* gap: 20px; */\n  }\n  \n  /* Radio option styling */\n  .radio-option {\n    display: flex;\n    /* font-size: ; */\n    align-items: center;\n    font-size: 16px;\n    cursor: pointer;\n    gap: 10px;\n    margin-bottom: 10px;\n\n  }\n  \n  /* Hide the native radio button */\n  .radio-option input[type=\"radio\"] {\n    display: none;\n  }\n  \n  /* Custom radio button */\n  .custom-radio {\n    width: 15px;\n    height: 15px;\n    background-color: #3F4054;\n    border: 2px solid #D5CFCF;\n    border-radius: 50%;\n    position: relative;\n  }\n  \n  /* Selected radio button (black inner circle) */\n  .radio-option input[type=\"radio\"]:checked + .custom-radio::after {\n    content: \"\";\n    width: 10px;\n    height: 10px;\n    background-color:  #b2ff00; /* Black circle when selected */\n    border-radius: 50%;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n  }\n\n  .custom-radio:hover{\n    border-color: white;\n    color: #b2ff00;\n  }\n\n  .link{\n    border: none;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: row;\n    background-color: #3F4054;\n    border-radius: 20px;\n    margin: 0 auto 0 auto;\n    width: 100px;\n    height: 30px;\n    cursor: pointer;\n    text-decoration: none;\n    font-weight: bold;\n    font-size: 16px;\n    color: #D5CFCF;\n  }\n  \n  .link svg{\n    height: 18px;\n    width: 18px;\n    color: #D5CFCF;\n    margin-right: 5px;\n  }\n  \n  .link:hover svg{\n    color: white;\n  }\n  \n  .link:hover{ \n    color: white;\n  }\n  \n  /* .Start-button {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  } */\n  /* .link svg:hover{\n    border: 2px solid #b2ff00;\n    color: #b2ff00;\n  } */\n  /* .Start-button:hover{\n    background-color: #b2ff00;\n    color : #3F4054;\n  }  */\n\n  \n  /* .link{\n    border: none;\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: row;\n    background-color: #3F4054;\n    border-radius: 20px;\n    margin: 0 auto 0 auto;\n    width: 100px;\n    height: 30px;\n    cursor: pointer;\n    text-decoration: none;\n    color: #D5CFCF;\n    font-weight: bold;\n  } */\n  \n  /* .Start-.link:hover{\n    background-color: #b2ff00;\n    color : #3F4054;\n  }  */\n  \n  \n  /* .link:hover{ \n    border: 2px solid #b2ff00;\n  }  */\n  \n  /* .link svg{\n    height: 18px;\n    width: 18px;\n    color: #D5CFCF;\n    margin-right: 5px;\n  } */\n"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/game/Game.js",
      "content": "\nimport React, { useState } from \"react\";\n// import \"./FirstPage.css\";\n// import Banner from '../../components/Banner';\nimport PongSimulator from \"./PongSimulator\";\nimport { GiPingPongBat } from \"react-icons/gi\";\n// import { useNavigate } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport './Game.css'\nimport axios from 'axios'\n\nconst Game = () => {\n  const [gameMode, setGameMode] = useState(\"\");\n\n    // const navigate = useNavigate();\n    // const handleStart = () =>{\n    //     navigate('/Local');\n    // }\n\n    const handleChange = (e) => {\n        setGameMode(e.target.value);\n        // console.log(e.target.value);\n    };\n\n    const handleSubmit = () => {\n        axios({\n            method: 'post',\n            url: \"http://localhost:8000/game/create/\",\n            data: {\n                mode: gameMode,\n            }\n        })\n        .then(response => console.log(response.data))\n        .catch(error => console.log(error));\n    }\n    return (\n        \n        <div className=\"Game-page-container\">\n\n            <div className=\"pongSimulator\"><PongSimulator /></div>\n\n            <div className=\"other_elements\">\n                <div className=\"radio-group\">\n                    <label className=\"radio-option\">\n                    <input\n                        type=\"radio\"\n                        name=\"gameMode\"\n                        value=\"Local\"\n                        checked={gameMode === \"Local\"}\n                        onChange={handleChange}\n                    />\n                    <span className=\"custom-radio\"></span>\n                    Local\n                    </label>\n\n                    <label className=\"radio-option\">\n                    <input\n                        type=\"radio\"\n                        name=\"gameMode\"\n                        value=\"Online\"\n                        checked={gameMode === \"Online\"}\n                        onChange={handleChange}\n                    />\n                    <span className=\"custom-radio\"></span>\n                    Online\n                    </label>\n                </div>\n                    <hr className=\"Separator-line\"></hr>\n                <div className=\"Start-button\">\n                  {gameMode ? (\n                        <Link  className=\"link\" to={`/game/${gameMode}`} onClick= {handleSubmit()}>\n                                <GiPingPongBat/> START\n                        </Link>\n                    ) : (\n                        <button className=\"link\" >\n                            <GiPingPongBat/> START\n                        </button>\n                    )}\n                </div>\n                    {/* <Link className=\"START\" to={`/game/${gameMode}`}><GiPingPongBat /> START</Link> */}\n\n            </div>\n                \n        </div>\n    );\n};\n\nexport default Game;\n"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/game/Local.css",
      "content": ".menu-background {\r\n    display : flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    width: 100%;\r\n    height: 100%;\r\n    /* height: 100vh;\r\n    width: 95vw;\r\n    background-color: #2f2e47; */\r\n}\r\n\r\n\r\n.menu-container {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    flex-direction: column;\r\n    width: 300px;\r\n    height: 300px;\r\n    /* padding: 40px; */\r\n    /* text-align: center; */\r\n    background-color: #636987;\r\n    border-radius: 8px;\r\n}\r\n\r\n/* .logo {\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: 24px;\r\n    color: white;\r\n    font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif ;\r\n} */\r\n\r\n/* .o {\r\n    width: 0.8em;\r\n    height: 0.8em;\r\n    background-color: white;\r\n    border-radius: 50%;\r\n    display: inline-block;\r\n}\r\n.g{\r\n    font-size: 35px;\r\n    color: rgb(216, 253, 98)\r\n} */\r\n\r\n/* .menu-buttons {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n\r\n} */\r\n\r\n.local-button {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    /* padding: 12px 24px;GOES ALONG WITH BUTTONS TO ADJUST TO TEXT */\r\n    background-color:#3F4054;\r\n    border:2px solid #D5CFCF;\r\n    border-radius: 8px;\r\n    /* font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif; */\r\n    margin: 20px auto;\r\n    width: 180px;\r\n    height: 40px;\r\n    cursor: pointer;\r\n    padding-left: 14px;\r\n    color: #D5CFCF;\r\n    font-size: 16px;\r\n    text-decoration: none;\r\n    text-align:justify;\r\n    font-weight: bold;\r\n}\r\n\r\n.local-title{\r\n    /* color: white;\r\n    text-decoration: none;\r\n    font-size: 16px; */\r\n    /* font-weight: bold; */\r\n    width: 80%;\r\n}\r\n.local-button svg{\r\n   margin-right: 10px;\r\n   color: #D5CFCF;\r\n   width: 15%;\r\n   font-size: 30px;\r\n} \r\n\r\n/* .button:hover {\r\n    border-color: #b2ff00;\r\n} */\r\n\r\n.local-button:hover svg{\r\n    color: #b2ff00;\r\n}\r\n\r\n.local-button:hover{\r\n    text-decoration: none;\r\n    border-color: #b2ff00;\r\n}"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/game/Local.js",
      "content": "import './Local.css';\r\n// import Banner from '../../components/Banner';\r\nimport { FiPlay } from \"react-icons/fi\";\r\nimport { Link } from \"react-router-dom\";\r\n// import Game from './Game';\r\n\r\n\r\nfunction Local() {\r\n  return (\r\n    <>\r\n    <div className='menu-background'>\r\n      {/* <div className=\"Ban_Local\"><Banner/></div> */}\r\n      <div className='menu-container'>\r\n        {/* <div className='logo'>\r\n          <p>\r\n            <sup>\r\n              <span>P</span>\r\n              <span className='o'></span>\r\n              <span>N</span>\r\n\r\n            </sup>\r\n            <span className='g'>G</span>\r\n            <span>AME</span>\r\n          </p>\r\n        </div> */}\r\n        {/* <div className='menu-buttons'> */}\r\n          <Link className='local-button' to={`/game/Local/SingleGame`}><FiPlay /><span className='local-title' >Single Game</span></Link>\r\n          <Link className='local-button' to={`/game/Local/TournamentLocal`}><FiPlay /><span className='local-title'>Tournament</span></Link>\r\n        {/* </div> */}\r\n      </div>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Local;\r\n"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/game/OnePlayerGame.js",
      "content": "import React, { useEffect, useRef } from 'react';\nimport \"./PongGame.css\"\nimport profile from \"./logo.png\"\n// import AdversariesBar from '../../AdversariesBar';\n// import { Link } from \"react-router-dom\";\nimport { useNavigate } from 'react-router-dom';\n\n\nconst OnePlayerGame = () => {\n    console.log(\"hfhfhfhf\");\n    const canvasRef = useRef(null);\n    \n    const ballRef = useRef({x: 0, y: 0, radius: 12, color: \"white\", speed: 9, velocityX: -9, velocityY: 9});\n    const netRef = useRef({x: 0, y: 0, w: 6, h: 12});\n    const botRef = useRef({x: 0, y: 0, w: 20, h: 120, color: \"#E84172\", score: 0});\n    const playerRef = useRef({x: 0, y: 0, w: 20, h: 120, color: \"#D8FD62\", score: 0});\n    const paddleMoveRef = useRef({up: false, down: false});\n    const isGameRunning = useRef(true);\n\n    const navigate = useNavigate();\n\n        useEffect(() => {\n        const canvas = canvasRef.current;\n        canvas.width = 1000;\n        canvas.height = 700;\n\n        const paddleMove = paddleMoveRef.current;\n    \n        const ball = ballRef.current;\n        ball.x = canvas.width/2;\n        ball.y = canvas.height/2;\n        \n        const bot = botRef.current;\n        bot.x = canvas.width - bot.w;\n        bot.y = canvas.height - bot.h;\n\n        const player = playerRef.current;\n\n        const net = netRef.current;\n        net.x = canvas.width/2 - net.w/2;\n        \n        const ctx = canvas.getContext(\"2d\");\n        const renderGame = () => {\n            //clear the canvas area before rendering\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n            \n            // draw table\n            ctx.fillStyle = \"#636987\";\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n            //draw the net\n            ctx.fillStyle = \"#D9D9D9\";\n            for (let i = 0; i < canvas.height; i += 20){\n                ctx.fillRect(net.x, net.y + i, net.w, net.h);\n            }\n            \n            //draw ball\n            ctx.beginPath();\n            ctx.fillStyle = ball.color;\n            ctx.arc(ball.x, ball.y, ball.radius, 0, Math.PI * 2, false);\n            ctx.fill();\n            ctx.closePath();\n\n            //draw player's paddle\n            ctx.fillStyle = player.color;\n            ctx.fillRect(player.x, player.y, player.w, player.h);\n            \n            //draw bot's paddle\n            ctx.fillStyle = bot.color;\n            ctx.fillRect(bot.x, bot.y, bot.w, bot.h);\n\n            //the score\n            ctx.fillStyle = \"white\";\n            ctx.font = \"60px rationale\";\n            ctx.fillText(player.score, canvas.width/4, canvas.height/5);\n            ctx.fillText(bot.score, canvas.width/4 * 3, canvas.height/5);\n        }\n        const checkCollision = (paddle, ball) => {\n            paddle.top = paddle.y;\n            paddle.bottom = paddle.y + paddle.h;\n            paddle.right = paddle.x + paddle.w;\n            paddle.left = paddle.x;\n\n            ball.top = ball.y - ball.radius;\n            ball.bottom = ball.y + ball.radius;\n            ball.right = ball.x + ball.radius;\n            ball.left = ball.x - ball.radius;\n  \n            return (ball.left <= paddle.right && ball.top <= paddle.bottom && ball.bottom >= paddle.top && ball.right >= paddle.left)\n        }\n        const setBall = () => {\n            ball.x = canvas.width/2;\n            ball.y = canvas.height/2;\n            ball.velocityX = -ball.velocityX;\n            ball.speed = 9;\n\n        }\n        const updateGame = () => {\n            ball.x += ball.velocityX;\n            ball.y += ball.velocityY;\n            \n            //check collision with top and bottom walls\n            if (ball.y + ball.radius > canvas.height || ball.y - ball.radius < 0)\n                ball.velocityY *= -1;\n            \n            //controle the bot's paddle\n            const newBotY = bot.y += (ball.y - (bot.y + bot.h/2)) * 0.1;//align the paddle's center with the ball //* 0.1 to be able to bet the computer/adversary so it won't be = to the ball's y \n            bot.y = (Math.max(0, Math.min(newBotY, canvas.height - bot.h)));\n            \n            const paddle = ((ball.x > canvas.width/2) ? bot : player);\n            if (checkCollision(paddle, ball)){\n                // let collidePoint = ball.y - paddle.y; //where does the ball hit the paddle; 50 if center, <50 if up and >50 if down\n                // let angleRad = (collidePoint < paddle.h/2) ? -Math.PI/4 : (collidePoint > paddle.h/2) ? Math.PI/4 : 0;\n                // if (ball.y + ball.radius > canvas.height || ball.y - ball.radius < 0)\n                //     angleRad = -angleRad;\n\n                //controle the ball when it hits the paddle's center when placed at the top or the buttom of the canvs \n                // angleRad = (ball.y+ball.radius >= canvas.height) ? -45 : (ball.y-ball.radius <= 0) ? 45 : angleRad;\n\n                let angleRad = (ball.y === (paddle.y + paddle.h/2)) ? 0 : ( ball.velocityY > 0) ? Math.PI/4 : -Math.PI/4;//move the ball to the opposite direction from which it come\n                const direction = (ball.x < canvas.width/2) ? 1 : -1;\n\n                ball.velocityX = (Math.cos(angleRad) * ball.speed) * direction;\n                ball.velocityY = Math.sin(angleRad) * ball.speed;\n                ball.speed += 0.1;\n            }\n\n            if (ball.x - ball.radius <= 0){\n                bot.score++;\n                setBall();\n            }\n            else if (ball.x + ball.radius >= canvas.width){\n                player.score++;\n                setBall();\n            }\n            if (player.score === 5 || bot.score === 5)\n                isGameRunning.current = false;\n        }\n        \n            const game = () => {\n                renderGame();\n                updateGame();\n                if (isGameRunning.current === false){\n                    setTimeout(() => {\n                        setBall();\n                        ctx.fillStyle = \"white\";\n                        ctx.font = \"90px rationale\";\n                        if (player.score === 5)\n                            ctx.fillText(\"WIN!\", canvas.width / 8, canvas.height / 2);\n                        else\n                            ctx.fillText(\"WIN!\", (canvas.width/8)*5, canvas.height / 2);\n                    }, 2000);\n                    navigate(`/game/Local/SingleGame/SoloPractice/Score`, \n                    {state:{ player1:\"YOU\" , player2:\"BOT\", player1Score:player.score, player2Score:bot.score }});\n                }\n            }\n            const handleKeyDown = (event) => {\n                if (event.key === 'ArrowDown' || event.key === 's' || event.key === 'S')\n                    paddleMove.down = true;\n                if (event.key === 'ArrowUp' || event.key === 'w' || event.key === 'W')\n                    paddleMove.up = true;\n            };\n            const handleKeyUp = (event) => {\n                if (event.key === 'ArrowDown' || event.key === 's' || event.key === 'S')\n                    paddleMove.down = false;\n                if (event.key === 'ArrowUp' || event.key === 'w' || event.key === 'W')\n                    paddleMove.up = false;\n            };\n            window.addEventListener('keydown', handleKeyDown);\n            window.addEventListener('keyup', handleKeyUp);\n\n            const movePaddle = (event) => {\n                if (paddleMove.up){\n                    playerRef.current.y = Math.max(0, playerRef.current.y - 10);\n                }\n                else if (paddleMove.down){\n                    playerRef.current.y = Math.min(canvasRef.current.height - playerRef.current.h, playerRef.current.y + 10);\n                }\n            }\n            const gameInterval = setInterval(game, 1000 / 60);\n            const keyPressInterval = setInterval(movePaddle, 1000 / 60);\n            return () => {\n                clearInterval(gameInterval);\n                clearInterval(keyPressInterval);\n            };\n        });\n    return (\n      <div className='game_container'>\n        <div className='adversaries'>\n                <div className='player1'>\n                    {/* <div className='player1-info'> */}\n                        {/* <img src={profile} alt=\"\"></img> */}\n                        <span className=\"p-img\"><img src={profile} alt=\"\"></img></span>\n                        <span className=\"p-name1\">YOU</span>\n                        <span className=\"V\">V</span>\n                    {/* </div> */}\n                </div>\n                <div className='player2'>\n                    {/* <div className='player2-info'> */}\n                        <span className=\"S\">S</span>\n                        <span className=\"p-name2\">BOT</span>\n                        <span className=\"p-img\"><img src={profile} alt=\"\"></img></span>\n                        {/* <img src={profile} alt=\"\"></img> */}\n                    {/* </div> */}\n                </div>\n            </div>\n          {/* <AdversariesBar className=\"adversariesBar\"></AdversariesBar> */}\n            <canvas ref={canvasRef}></canvas>\n      </div>\n    )\n} \n\nexport default OnePlayerGame\n\n\n\n\n// const OnePlayerGame = () => {\n//     const canvasRef = useRef(null);\n//     const canvasW = 1000;\n//     const canvasH = 700;\n    \n//     const [ball, setBall] = useState({x: canvasW/2, y: canvasH/2, radius: 12, color: \"white\", speed: 9, velocityX: -9, velocityY: 9});\n//     const net = {w: 6, h: 12, x: canvasW/2, y: canvasW/2 - 6/2};\n//     const [bot, setBot] = useState({w: 20, h: 120, color: \"#E84172\", score: 0, x: canvasW - 20, y: canvasH - 120});\n//     const [player, setPlayer] = useState({x: 0, y: 0, w: 20, h: 120, color: \"#D8FD62\", score: 0});\n//     const paddleMove = {up: false, down: false};\n//     const end = useRef(false);\n    \n//     const navigate = useNavigate();\n\n//     const renderGame = (ctx, canvas) => {\n//         //clear the canvas area before rendering\n//         // ctx.clearRect(0, 0, canvas.width, canvas.height);\n        \n//         // draw table\n//         ctx.fillStyle = \"#636987\";\n//         ctx.fillRect(0, 0, canvas.width, canvas.height);\n        \n//         //draw the net\n//         ctx.fillStyle = \"#D9D9D9\";\n//         for (let i = 0; i < canvas.height; i += 20){\n//             ctx.fillRect(net.x, net.y + i, net.w, net.h);\n//         }\n        \n//         //draw ball\n//         ctx.beginPath();\n//         ctx.fillStyle = ball.color;\n//         ctx.arc(ball.x, ball.y, ball.radius, 0, Math.PI * 2, false);\n//         ctx.fill();\n//         ctx.closePath();\n        \n//         //draw player's paddle\n//         ctx.fillStyle = player.color;\n//         ctx.fillRect(player.x, player.y, player.w, player.h);\n        \n//         //draw bot's paddle\n//         ctx.fillStyle = bot.color;\n//         ctx.fillRect(bot.x, bot.y, bot.w, bot.h);\n        \n//         //the score\n//         ctx.fillStyle = \"white\";\n//             ctx.font = \"60px rationale\";\n//             ctx.fillText(player.score, canvas.width/4, canvas.height/5);\n//             ctx.fillText(bot.score, canvas.width/4 * 3, canvas.height/5);\n//         }\n        \n//         const checkCollision = (paddle, ball) => {\n//             paddle.top = paddle.y;\n//             paddle.bottom = paddle.y + paddle.h;\n            \n//             paddle.right = paddle.x + paddle.w;\n//             paddle.left = paddle.x;\n\n//             ball.top = ball.y - ball.radius;\n//             ball.bottom = ball.y + ball.radius;\n//             ball.right = ball.x + ball.radius;\n//             ball.left = ball.x - ball.radius;\n  \n//             return (ball.left <= paddle.right && ball.top <= paddle.bottom && ball.bottom >= paddle.top && ball.right >= paddle.left)\n//         }\n\n//         const resetBallPos = (canvas) =>{\n//             setBall((prev) => ({\n//                 ...prev, \n//                 x: canvas.width/2,\n//                 y: canvas.height/2,\n//                 velocityX: -prev.velocityX,\n//                 speed: 9\n//             }))\n//         }\n\n//         const updateGame = (ctx, canvas) => {\n//             if (end.current)\n//                 return;\n//             setBall((prev) => ({\n//                 ...prev, \n//                 x: prev.x + prev.velocityX,\n//                 y: prev.y + prev.velocityY\n//             }))\n            \n//             //check collision with top and bottom walls\n//             if (ball.y + ball.radius > canvas.height || ball.y - ball.radius < 0)\n//                 setBall((prev) => ({...prev, velocityY: prev.velocityX * -1}))\n            \n//             //controle the bot's paddle\n//             const newBotY = bot.y += (ball.y - (bot.y + bot.h/2)) * 0.1;//align the paddle's center with the ball //* 0.1 to be able to bet the computer/adversary so it won't be = to the ball's y \n//             setBot((prev) => ({...prev, y: (Math.max(0, Math.min(newBotY, canvas.height - prev.h)))}))\n            \n//             const paddle = ((ball.x > canvas.width/2) ? bot : player);\n//             if (checkCollision(paddle, ball)){\n//                 let angleRad = (ball.y === (paddle.y + paddle.h/2)) ? 0 : ( ball.velocityY > 0) ? Math.PI/4 : -Math.PI/4;//move the ball to the opposite direction from which it come\n//                 const direction = (ball.x < canvas.width/2) ? 1 : -1;\n                \n//                 setBall((prev) => ({\n//                     ...prev, \n//                     velocityX: (Math.cos(angleRad) * prev.speed) * direction,\n//                     velocityY: Math.sin(angleRad) * prev.speed,\n//                     speed: prev.speed + 0.1\n//                 }))\n//             }\n\n//             if (ball.x - ball.radius <= 0){\n//                 setBot((prev) => ({...prev, score: prev.score++}))\n//                 resetBallPos(canvas);\n//             }\n//             else if (ball.x + ball.radius >= canvas.width){\n//                 setPlayer((prev) => ({...prev, score: prev.score++}))\n//                 resetBallPos(canvas);\n//             }\n//             if (player.score === 5 || bot.score === 5){\n//                 end.current = true;\n//                 setBall((prev) => ({\n//                     ...prev, \n//                     x: canvas.width/2,\n//                     y: canvas.height/2,\n//                 }))\n//                 setTimeout(() => {\n//                     //win message\n//                     ctx.font = \"90px rationale\";\n//                     if (player.score === 5)\n//                         ctx.fillText(\"WIN!\", canvas.width / 8, canvas.height / 2);\n//                     else\n//                         ctx.fillText(\"WIN!\", (canvas.width/8)*5, canvas.height / 2);\n//                     renderGame(ctx, canvas);\n//                     navigate(`/game/Local/SingleGame/SoloPractice/Score`, \n//                     {state:{ player1:\"YOU\" , player2:\"BOT\", player1Score:player.score, player2Score:bot.score }});\n//                 }, 2000);\n//             }\n//         }\n//         const game = (ctx, canvas) => {\n//             renderGame(ctx, canvas);\n//             updateGame(ctx, canvas);\n//         }\n//         useEffect(() => {\n//             const canvas = canvasRef.current;\n//             if (!canvas)\n//                     return;\n//             canvas.width = canvasW;\n//             canvas.height = canvasH;\n//             const ctx = canvas.getContext(\"2d\");\n            \n//             const handleKeyDown = (event) => {\n//                 if (event.key === 'ArrowDown' || event.key === 's' || event.key === 'S')\n//                     paddleMove.down = true;\n//                 if (event.key === 'ArrowUp' || event.key === 'w' || event.key === 'W')\n//                     paddleMove.up = true;\n//             };\n//             const handleKeyUp = (event) => {\n//                 if (event.key === 'ArrowDown' || event.key === 's' || event.key === 'S')\n//                     paddleMove.down = false;\n//                 if (event.key === 'ArrowUp' || event.key === 'w' || event.key === 'W')\n//                     paddleMove.up = false;\n//             };\n//             window.addEventListener('keydown', handleKeyDown);\n//             window.addEventListener('keyup', handleKeyUp);\n            \n//             const movePaddle = (event) => {\n//                 if (paddleMove.up)\n//                     setPlayer((prev) => ({...prev, y: Math.max(0, prev.y - 10)}))\n//                 else if (paddleMove.down)\n//                     setPlayer((prev) => ({...prev, y: Math.min(canvas.height - player.h, prev.y + 10)}))\n//             }\n//             const gameInterval = setInterval(() => game(ctx, canvas), 1000 / 60);\n//             const keyPressInterval = setInterval(movePaddle, 1000 / 60);\n//             return () => {\n//                 clearInterval(gameInterval);\n//                 clearInterval(keyPressInterval);\n//             };\n//         });\n//     return (\n//       <div className='game_container'>\n//         <div className='adversaries'>\n//                 <div className='player1'>\n//                     {/* <div className='player1-info'> */}\n//                         {/* <img src={profile} alt=\"\"></img> */}\n//                         <span className=\"p-img\"><img src={profile} alt=\"\"></img></span>\n//                         <span className=\"p-name1\">YOU</span>\n//                         <span className=\"V\">V</span>\n//                     {/* </div> */}\n//                 </div>\n//                 <div className='player2'>\n//                     {/* <div className='player2-info'> */}\n//                         <span className=\"S\">S</span>\n//                         <span className=\"p-name2\">BOT</span>\n//                         <span className=\"p-img\"><img src={profile} alt=\"\"></img></span>\n//                         {/* <img src={profile} alt=\"\"></img> */}\n//                     {/* </div> */}\n//                 </div>\n//             </div>\n//           {/* <AdversariesBar className=\"adversariesBar\"></AdversariesBar> */}\n//             <canvas ref={canvasRef} ></canvas>\n//       </div>\n//     )\n// } \n\n// export default OnePlayerGame\n"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/game/OneVsOne.css",
      "content": "\r\n.onevsone-background {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 100vh;\r\n    width: 95vw;\r\n    background: linear-gradient(110deg, #2f2e47 50%, #535379 50%);\r\n  }\r\n  \r\n  .onevsone-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: right;\r\n    flex: 1;\r\n    padding: 20px;\r\n  }\r\n  \r\n  .onevsone-icon {\r\n    width: 80px;\r\n    height: 80px;\r\n    background-color: #c4c4c4; /* Light gray */\r\n    border-radius: 50%;\r\n    margin-bottom: 10px;\r\n    border: 2px, solid, black;\r\n  }\r\n  \r\n  .onevsone-name {\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: 1em;\r\n    font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\r\n    font-weight: bold;\r\n    color: #b2ff00;\r\n  }\r\n  \r\n  .OneV {\r\n    font-size: 9em;\r\n    font-weight: bold;\r\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n    color: #535379;\r\n    margin: 0 20px;\r\n    transform: translate(-31px,90px);\r\n  }\r\n  .OneS {\r\n    font-size: 9em;\r\n    font-weight: bold;\r\n    font-family:  'Montserrat', sans-serif;\r\n    color: #2f2e47;\r\n    position: relative; /* or absolute/fixed depending on your layout */\r\n    transform: translate(30px, -19px);\r\n  }\r\n  \r\n  .onevsone-button {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: flex-end;\r\n    justify-content: center;\r\n    transform: translate(-11px, 90px);\r\n  }\r\n  \r\n  .onevsone-b {\r\n    bottom: 20px;\r\n    width: 200px;\r\n    padding: 10px 20px;\r\n    background-color: #b2ff00;\r\n    border: none;\r\n    border-radius: 20px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .OnePlay {\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    color: #33384b;\r\n    padding: 10px;\r\n  }"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/game/OneVsOne.js",
      "content": "import React from \"react\";\r\nimport \"./OneVsOne.css\";\r\nimport { GiPingPongBat } from \"react-icons/gi\";\r\n\r\nfunction OneVsOne() {\r\n  return (\r\n    <div className=\"onevsone-background\">\r\n      <div className=\"onevsone-container\">\r\n        <div className=\"onevsone-icon\"></div>\r\n        <p className=\"onevsone-name\">xxxx</p>\r\n      </div>\r\n      <div className=\"onevsone-container\">\r\n      <span class=\"OneV\">V</span>\r\n      <span class=\"OneS\">S</span>\r\n    <div className=\"onevsone-button\">\r\n      <button className=\"onevsone-b\"><GiPingPongBat /><span className=\"Play\">PLAY</span></button>\r\n    </div>\r\n\r\n      </div>\r\n      <div className=\"onevsone-container\">\r\n        <div className=\"onevsone-icon\"></div>\r\n        <p className=\"onevsone-name\">Friends</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OneVsOne;"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/game/Online.css",
      "content": "\n\n.online-background {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    background-color: #3F4054;\n    height: 100vh;\n    width: 100vw;\n\n}\n\n.online-container {\n    width: 300px;\n    height: 500px;\n    border: none;\n    background-color: white;\n}\n\n.add {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: flex-start;\n    width: 280px;\n    height: 50px;\n    border: none;\n    background-color: #535379;\n    color: white;\n    font-weight: bold;\n    padding-left: 20px;\n}\n\n.users {\n    display: flex;\n    flex-wrap: wrap;\n    flex-direction: column;\n    /* justify-content: left; */\n    /* align-items; */\n}\n.line {\n    display: flex;\n    flex-direction: row;\n    justify-content: flex-start;\n    align-items: center;\n}\n.square {\n    width: 50px;\n    height: 50px;\n    background-color: #535379;\n    margin: 15px;\n    border-radius: 10px;\n}\n\n.friend-name {\n    font-weight: bold;\n}\n\n.add-friend {\n    color: #535379;\n    margin-left: 89px;\n    font-weight: bold;\n    font-size: 50px;\n}\n\n.invite {\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    width: 300px;\n    height: 50px;\n    border: none;\n    background-color: #BBFC52;\n    margin-top: 200px;\n    \n}\n\n.send-invite {\n    color: #3F4054;\n    font-weight: bold;\n    padding: 12px;\n\n}"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/game/Online.js",
      "content": "import './Online.css'\n// import Banner from '../../components/Banner';\nimport { IoAddOutline } from \"react-icons/io5\";\n\n\nfunction Online() {\n    return (\n        <div className='online-background'>\n            <div className='online-container'>\n                <div className='add'>Add Friends</div>\n                <div className='users'>\n                    <div className='line'>\n                        <div className='square'></div>\n                        <div className='friend-name'>margot</div>\n                        <div className='add-friend'><IoAddOutline /></div>\n                    </div>\n                    <div className='line'>\n                        <div className='square'></div>\n                        <div className='friend-name'>margot</div>\n                        <div className='add-friend'><IoAddOutline /></div>\n                    </div>\n                    <div className='line'>\n                        <div className='square'></div>\n                        <div className='friend-name'>margot</div>\n                        <div className='add-friend'><IoAddOutline /></div>\n                    </div>\n                </div>\n                <div className='invite'><span className='send-invite'>Send Invitations</span></div>\n            </div>\n        </div>\n    );\n}\nexport default Online;"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/game/PongGame.css",
      "content": "@import url('https://fonts.googleapis.com/css2?family=Rationale&display=swap');\n\n.game_container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    height: 100%;\n    width: 100%;\n    font-family: \"Rationale\";\n    color: #3F4054;\n    margin: 0;\n    /* background-color: blue; */\n  }\n  \n  .adversaries{\n    display: flex;\n    justify-content:center;\n    align-items: center;\n    flex-direction: row;\n    width: 1000px;\n    height: 80px;\n    margin: 0;\n    /* margin-top: 80px; */\n    margin-bottom: 30px;\n  } \n  .player1, .player2{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: row;\n    width: 50%;\n    height: 100%;\n  }\n\n  .player1{\n    background-color: #D8FD62;\n  }\n\n  .player2{\n    background-color: #E84172;\n  }\n\n.p-img{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 20%;\n    height: 100%;\n    /* background-color: rgb(252, 0, 185); */\n}\n\n.p-img img{\n  width: 60px;\n  height: 60px;\n  border-radius: 8px;\n}\n\n.p-name1, .p-name2{\n    display: flex;\n    align-items: center;\n    width: 70%;\n    /* background-color: blueviolet; */\n    height: 100%;\n    font-size: 20px;\n    font-weight: bold;\n  }\n  \n.p-name1{\n  justify-content:baseline;\n}\n.p-name2{\n  justify-content: end;\n}\n\n.V, .S{\n    display: flex;\n    align-items: center;\n    width: 10%;\n    height: 100%;\n    /* background-color: red; */\n    padding-left: 0;\n    font-size: 40px;\n    font-weight: bold;\n  }\n  \n  .V{\n    justify-content:end;\n    color: #E84172;\n  }\n\n  .S{\n    justify-content:baseline;\n    color: #b2ff00;\n}\n\n\n/* .adversaries h4{\n  width: 10%;\n} */\n  \n   /* .adversaries h4{\n    font-size: 50px;\n    font-weight: 100;\n  } */\n  \n  /* .adversaries img{\n    width: 60px;\n    height: 60px;\n    border-radius: 15%;\n  } */\n  \n  /*.player2{\n    padding: 10px;\n    padding-left: 0;\n    display:flex;\n    justify-content: space-between;\n    align-items: center;\n    flex: 1;\n    background-color: rgb(232, 65, 114);\n    height: 100%;\n  }\n  \n  .player1{\n    padding: 10px;\n    padding-right: 0;\n    display:flex;\n    justify-content: space-between;\n    align-items: center;\n    flex:1;\n    height: 100%;\n    background-color: rgb(216, 253, 98);\n  }\n  \n  .player1-info, .player2-info{\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    height: 100%;\n  }\n  \n  .player1-info img{\n    margin-right: 15px;\n  }\n  \n  .player2-info img{\n    margin-left: 15px;\n  }\n\n  .player2 h4{\n    color: rgb(216, 253, 98);;\n  }\n  \n  .player1 h4{\n    color: rgb(232, 65, 114);\n  } */\n\n\n"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/game/PongSimulator.css",
      "content": "body{\n    display: flex;\n    width: 100vw;\n    height: 100vh;\n    align-items: center;\n    justify-content: center;\n}\n.container {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: #636987;\n    width: 400px;\n    height: 310px;\n    position: relative;\n}\n.net {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 5px; /*line thickness */\n    height: 100%; /*line height */\n    background: repeating-linear-gradient(\n        #D5CFCF 0,\n        #D5CFCF 10px, /*length of each dash*/\n      transparent 10px,\n      transparent 20px /*space between dashes */\n      );\n}\n.paddle4bot{\n    background-color: #E84172;\n    width: 15px;\n    height: 70px;\n    position: absolute;\n    top: 0;\n    left: 0;\n    animation: movePaddleBot 1s infinite alternate;\n}\n.paddle4player{\n    background-color:#b2ff00;\n    width: 15px;\n    height: 70px;\n    position: absolute;\n    bottom: 0;\n    right: 0;\n    animation: movePaddlePlayer 1s infinite alternate;\n}\n.ball{\n    background-color: white;\n    width: 20px;\n    height: 20px;\n    border-radius: 50%;\n    position: absolute;\n    animation: moveBall 4s infinite alternate linear;\n    }\n    @keyframes moveBall {\n        0% {\n            top: 0px;\n            left: 20px;\n        }\n        50% {\n            top: 270px; /*adjust to control vertical movement */\n            left: 370px;\n        }\n        100% {\n            top: 0;\n            left: 20px;\n        }\n    }\n@keyframes movePaddleBot {\nfrom {top: 0px;}\nto {top: 240px;}\n}\n@keyframes movePaddlePlayer {\nfrom {top: 240px;}\nto {top: 0px;}\n}"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/game/PongSimulator.js",
      "content": "import React from 'react'\nimport \"./PongSimulator.css\"\n\nconst PongSimulator = () => {\n  return (\n    <div class=\"container\">\n        <div className=\"net\"></div>\n        <div className=\"paddle4bot\"></div>\n        <div className=\"paddle4player\"></div>\n        <div className=\"ball\"></div>\n    </div>\n  )\n}\n\nexport default PongSimulator"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/game/RemoteGame.js",
      "content": "import React, { useEffect, useRef } from 'react';\nimport \"./PongGame.css\"\n// import { Navigate } from 'react-router-dom';\n// import AdversariesBar from './AdversariesBar';\nimport { useNavigate } from 'react-router-dom';\n\nconst Online = () => {\n    const canvasRef = useRef(null);\n\n\n    const ballRef = useRef({x: 0, y: 0, radius: 15, color: \"white\", speed: 9, velocityX: 9, velocityY: 9});\n    const netRef = useRef({ x: 0, y: 0, w: 6, h: 12 });\n    const rightPlayerRef = useRef({ x: 0, y: 0, w: 20, h: 120, color: \"#E84172\", score: 0 });\n    const leftPlayerRef = useRef({ x: 0, y: 0, w: 20, h: 120, color: \"#D8FD62\", score: 0 });\n\n    const lPaddleMoveRef = useRef({ up: false, down: false });\n    const rPaddleMoveRef = useRef({ up: false, down: false });\n    // const isrunningGame = useRef(true);\n    const wsRef = useRef(null); // WebSocket reference\n    const navigate = useNavigate();\n\n    useEffect(() => {\n\n        const canvas = canvasRef.current;\n        canvas.width = 1000;\n        canvas.height = 700;\n\n        const lPaddleMove = lPaddleMoveRef.current;\n        const rPaddleMove = rPaddleMoveRef.current;\n\n        const ball = ballRef.current;\n        ball.x = canvas.width/2;\n        ball.y = canvas.height/2;\n\n        const bot = rightPlayerRef.current;\n        bot.x = canvas.width - bot.w;\n        bot.y = canvas.height - bot.h;\n\n        const playerL = leftPlayerRef.current;\n        const playerR = rightPlayerRef.current;\n        const net = netRef.current;\n        net.x = canvas.width / 2 - net.w / 2;\n\n        // Setup WebSocket\n        //wsRef is s useRef hook that hols a reference to ws instance\n        wsRef.current = new WebSocket('ws://127.0.0.1:8000/ws/game/'); // Replace with server address\n\n        wsRef.current.onopen = () => {\n            console.log(\"WebSocket connected9999999999\");\n        };\n\n        wsRef.current.onmessage = (message) => {\n            // Parse the JSON string into an object\n\n            // Example: data = { leftPlayer: { y: 50 }, rightPlayer: { y: 100 } }\n\n            const data = JSON.parse(message.data);\n\n            if (data.ball) {\n                if (ball.x !== data.ball.x || ball.y !== data.ball.y) {\n                    ball.x = data.ball.x;\n                    ball.y = data.ball.y;\n                }\n            }\n            if (data.leftPlayer) {\n                leftPlayerRef.current.y = data.leftPlayer.y;\n                leftPlayerRef.current.score = data.leftPlayer.score;\n            }\n            if (data.rightPlayer) {\n                rightPlayerRef.current.y = data.rightPlayer.y;\n                rightPlayerRef.current.score = data.rightPlayer.score;\n            }\n            if (data.winner)\n                if (data.winner === \"leftPlayer\" || data.winner === \"rightPlayer\"){\n                    navigate(`/game/Local/SingleGame/SoloPractice/Score`);\n                }\n            console.log('score right', rightPlayerRef.current.score);\n            console.log('score left', leftPlayerRef.current.score);\n        };\n\n        wsRef.current.onclose = () => {\n            console.log(\"WebSocket disconnected\");\n        };\n\n        const renderGame = () => {\n            const ctx = canvas.getContext(\"2d\");\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n            // Draw table\n            ctx.fillStyle = \"#636987\";\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n            // Draw the net\n            ctx.fillStyle = \"#D9D9D9\";\n            for (let i = 0; i < canvas.height; i += 20) {\n                ctx.fillRect(net.x, net.y + i, net.w, net.h);\n            }\n\n            //draw ball\n            ctx.beginPath();\n            ctx.fillStyle = ball.color;\n            ctx.arc(ball.x, ball.y, ball.radius, 0, Math.PI * 2, false);\n            ctx.fill();\n            ctx.closePath();\n            // Draw paddles\n            ctx.fillStyle = leftPlayerRef.current.color;\n            ctx.fillRect(playerL.x, playerL.y, playerL.w, playerL.h);\n\n            ctx.fillStyle = rightPlayerRef.current.color;\n            ctx.fillRect(playerR.x, playerR.y, playerR.w, playerR.h);\n\n            //Draw score\n            ctx.fillStyle = \"white\";\n            ctx.font = \"60px rationale\";\n            ctx.fillText(playerL.score, canvas.width/4, canvas.height/5);\n            ctx.fillText(playerR.score, canvas.width/4 * 3, canvas.height/5);\n\n        };\n        \n        const handleKeyDown = (event) => {\n            if (event.key === 'ArrowDown')\n                rPaddleMove.down = true;\n            if (event.key === 'ArrowUp')\n                rPaddleMove.up = true;\n            if (event.key === 's' || event.key === 'S')\n                lPaddleMove.down = true;\n            if (event.key === 'w' || event.key === 'W')\n                lPaddleMove.up = true;\n\n        };\n        const handleKeyUp = (event) => {\n            if (event.key === 'ArrowDown')\n                rPaddleMove.down = false;\n            if (event.key === 'ArrowUp')\n                rPaddleMove.up = false;\n            if (event.key === 's' || event.key === 'S')\n                lPaddleMove.down = false;\n            if (event.key === 'w' || event.key === 'W')\n                lPaddleMove.up = false;\n        };\n        window.addEventListener('keydown', handleKeyDown);\n        window.addEventListener('keyup', handleKeyUp);\n\n        const movePaddle = () => {\n            if (lPaddleMove.up) {\n                playerL.y = Math.max(0, playerL.y - 15);\n            }\n            if (lPaddleMove.down) {\n                playerL.y = Math.min(canvas.height - playerL.h, playerL.y + 15);\n            }\n\n            if (rPaddleMove.up) {\n                playerR.y = Math.max(0, playerR.y - 15);\n            }\n            if (rPaddleMove.down) {\n                playerR.y = Math.min(canvas.height - playerR.h, playerR.y + 15);\n            }\n\n            // Send paddle movement to server\n            //?. to make sure wsRef isnt null or undefined\n            wsRef.current?.send(\n                JSON.stringify({\n                    //The client sends data as a JSON string\n                    //leftPlayer is an object and y is its property\n                    // {\n                    //     \"leftPlayer\": { \"y\": 50 },\n                    //     \"rightPlayer\": { \"y\": 100 }\n                    // }\n                    leftPlayer: { y: playerL.y, score: playerL.score},\n                    rightPlayer: { y: playerR.y, score: playerR.score}\n                })\n            );\n        };\n\n        const gameInterval = setInterval(renderGame, 1000 / 60);\n        const keyPressInterval = setInterval(movePaddle, 1000 / 60);\n        return () => {\n            clearInterval(gameInterval);\n            clearInterval(keyPressInterval);\n            window.removeEventListener('keydown', handleKeyDown);\n            window.removeEventListener('keyup', handleKeyUp);\n            \n        };\n    });\n\n    return (\n        <div className='game_container'>\n            <canvas ref={canvasRef}></canvas>\n        </div>\n    );\n};\n\n\nexport default Online;"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/game/Score.css",
      "content": "@import url('https://fonts.googleapis.com/css2?family=Rationale&display=swap');\n\n.Restart-background {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    /* align-items: center;\n    height: 100vh;\n    width: 95vw;\n    background-color: #2f2e47; */\n    font-family: \"Rationale\";\n    color: white;\n    width: 100%;\n    height: 100%;\n}\n\n.score-elements{\n    /* background-color: white; */\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    /* box-sizing: border-box; */\n    width: 540px;\n    height: 540px;\n}\n/* .timer {\n    display: flex;\n    color:white;\n    font-size: 100px;\n    margin-bottom: 20px;\n    font-family:'Lucida Sans', 'Lucida Sans Regular', 'Lucida Grande', 'Lucida Sans Unicode', Geneva, Verdana, sans-serif;\n    transform: translate(0px, -110px);\n} */\n\n.Scores {\n    display: flex;\n    justify-items: center;\n    align-items: center;\n    flex-direction: row;\n    width: 100%;\n    height: 260px;\n    gap: 20px;\n    margin-bottom: 20px;\n}\n\n.rectangle-container {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: none;\n    height: 100%;\n    width: 260px;\n    background-image: linear-gradient(to bottom right, #D8FD62, #D8FD62, white, #636987, #636987);\n    /* border-color: palevioletred; */\n    /* border-color: linear-gradient(110deg, #2f2e47 50%, #535379 50%); */\n}\n.Rectangle {\n    background-color: #3F4054;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    border: none;\n    height: 98%;\n    width: 98%;\n    box-sizing: border-box;\n    /* border-color: palevioletred; */\n    /* border-color: linear-gradient(110deg, #2f2e47 50%, #535379 50%); */\n}\n.result {\n    font-size: 150px;\n    /* font-weight: bold; */\n    /* color: white; */\n}\n.bar {\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: row;\n    background-color: #636987;\n    width: 100%;\n    height: 60px;\n    border-radius: 0 0 80px 80px;\n    /* padding-top: 0; */\n}\n\n.right-text, .left-text{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    width: 50%;\n    color: white;\n    font-size: 25px;\n    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n    /* transform: translate(-125%); */\n}\n\n\n.Restart-vs {\n    width: 39px;\n    height: 48px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: unset;\n    font-size: 40px;\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    position: relative;\n}\n\n.Rest-V {\n    color: #3F4054;\n    font-weight: bold;\n    top: -6px; /*position v a bit above the s */\n    left: -3px; /*adjust the horizontal position */\n    z-index: 2; /*makes sure V is in front of S */\n    position: absolute;\n    margin-bottom: 30px;\n}\n\n.Rest-S {\n    color: #D5CFCF;\n    font-weight: bold;\n    top: 2px; /* slightly lower than the V */\n    left: 12px; /*adjust horizontal position */\n    z-index: 1;\n    position: absolute;\n    margin-bottom: 10px;\n}\n\n/* .Restart-b {\n    display: flex;\n    align-items: center;\n    justify-content: center; */\n    /* transform: translate(-11px, 80px); */\n    /* border: none;\n    width: 80px;\n    height: 30px;\n    background-color: #D5CFCF;;\n    border-radius: 20px;\n    margin-top: 20px;\n} */\n\n.Restart-b svg{\n    margin-top: 30px;\n    color: #D5CFCF;\n    font-size: 35px;\n    cursor: pointer;\n}\n\n.Restart-b:hover svg{\n    color: #b2ff00;\n}\n\n\n\n\n/* .rivalsContainer {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    position: relative;\n    width: 800px;\n    height: 600px;\n    background-image: linear-gradient(135deg, #D8FD62, #D8FD62, white, #636987);\n    margin-top: 300px;\n\n}\n\n.innerBackground{\n    width: 792px;\n    height: 592px;\n    background-color: #3F4054;\n} */"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/game/Score1player.js",
      "content": "import \"./Score.css\"\n// import { GiPingPongBat } from \"react-icons/gi\";\nimport { MdOutlineRestartAlt } from \"react-icons/md\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nfunction OnePlayerScoreScore() {\n    const { state } = useLocation();\n    const { player1, player2, player1Score, player2Score } = state;\n    return (\n        <div className=\"Restart-background\">\n            <div className=\"score-elements\">\n                {/* <div className=\"timer\">06 : 46</div> */}\n                <div className=\"Scores\">\n                    <div className=\"rectangle-container\">\n                        <div className=\"Rectangle\" >\n                            <div className=\"result\">{player1Score}</div>\n                        </div>\n                    </div>\n                    <div className=\"rectangle-container\">\n                        <div className=\"Rectangle\">\n                            <div className=\"result\">{player2Score}</div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"bar\">\n                    <div className=\"right-text\">{player1}</div>\n                    <div className=\"Restart-vs\">\n                        <span className=\"Rest-V\">V</span>\n                        <span className=\"Rest-S\">S</span>\n                    </div>\n                    <div className=\"left-text\">{player2}</div>\n                </div>\n                <div className=\"Restart-button\">\n                    <Link className=\"Restart-b\" to={`/game/Local/SingleGame/SoloPractice`}> <MdOutlineRestartAlt /> </Link>\n                </div>\n            </div>\n        </div>\n    );\n}\nexport default OnePlayerScoreScore;"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/game/Score2players.js",
      "content": "import \"./Score.css\"\n// import { GiPingPongBat } from \"react-icons/gi\";\nimport { MdOutlineRestartAlt } from \"react-icons/md\";\nimport { Link, useLocation } from \"react-router-dom\";\n\nfunction TwoPlayersScore() {\n    const { state } = useLocation();\n    const { player1, player2, player1Score, player2Score } = state;\n    return (\n        <div className=\"Restart-background\">\n            <div className=\"score-elements\">\n                {/* <div className=\"timer\">06 : 46</div> */}\n                <div className=\"Scores\">\n                    <div className=\"rectangle-container\">\n                        <div className=\"Rectangle\" >\n                            <div className=\"result\">{player1Score}</div>\n                        </div>\n                    </div>\n                    <div className=\"rectangle-container\">\n                        <div className=\"Rectangle\">\n                            <div className=\"result\">{player2Score}</div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"bar\">\n                    <div className=\"right-text\">{player1}</div>\n                    <div className=\"Restart-vs\">\n                        <span className=\"Rest-V\">V</span>\n                        <span className=\"Rest-S\">S</span>\n                    </div>\n                    <div className=\"left-text\">{player2}</div>\n                </div>\n                <div className=\"Restart-button\">\n                    <Link className=\"Restart-b\" to={`/game/Local/SingleGame/ChallengeAFriend`}> <MdOutlineRestartAlt /> </Link>\n                </div>\n            </div>\n        </div>\n    );\n}\nexport default TwoPlayersScore;"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/game/SingleLocal.css",
      "content": ".SingleLocal-background {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 100%;\n    height: 100%;\n    /* height: 100vh;\n    width: 95vw; */\n    /* background: linear-gradient(110deg, #2f2e47 50%, #535379 50%); */\n  }\n\n  .SingleLocal-container {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    flex-direction: column;\n    width: 300px;\n    height: 300px;\n    background-color: #636987;\n    border-radius: 8px;\n  }\n\n  .ch, .solo{\n    /* padding: 10px 20px; */\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    background-color: #3F4054;\n    border: 2px solid #D5CFCF;\n    border-radius: 8px;\n    /* margin-bottom: 90px; */\n    margin: 20px auto;\n    width: 185px;\n    height: 40px;\n    text-decoration: none;\n    color: #D5CFCF;\n    font-size: 16px;\n    font-weight: bold;\n    cursor: pointer;\n  }\n\n  .ch:hover, .solo:hover {\n    border-color: #b2ff00;\n  }\n\n  /* .SingleLocal-icon {\n    width: 80px;\n    height: 80px;\n    background-color: #c4c4c4;\n    border-radius: 50%;\n    margin-bottom: 10px;\n  } */\n  \n  /* .SingleLocal-name {\n    justify-content: center;\n    align-items: center;\n    font-size: 1em;\n    font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n    font-weight: bold;\n    color: #b2ff00;\n  } */\n\n  /* .b {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: flex-start;\n    gap: 200px;\n    transform: translate(20px, -60px);\n  } */\n  \n  \n  /* .solo {\n    width: 250px;\n    margin: 20px auto;\n    /* margin-top: 90px; */\n    /* padding: 10px 20px;\n    background-color: #b2ff00;\n    border: none;\n    border-radius: 20px;\n    font-weight: bold;\n    font-size: 18px;\n    cursor: pointer; */\n  /* }  */\n\n  /* .vs {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n  }  \n  \n  .Sv {\n    font-size: 9em;\n    font-weight: bold;\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    color: #535379;\n    margin: 0 20px;\n    transform: translate(16px, 2px);\n  } */\n  /* .Ss {\n    font-size: 9em;\n    font-weight: bold;\n    font-family:  'Montserrat', sans-serif;\n    color: #2f2e47;\n    position: relative; /* or absolute/fixed depending on your layout */\n    /* transform: translate(-39px, 59px);\n  }  */\n\n  /* .SingleLocal-button {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transform: translate(-11px, 1px);\n  } */\n/*   \n  .SingleLocal-b {\n    position: absolute;\n    bottom: 20px;\n    width: 200px;\n    padding: 10px 20px;\n    background-color: #b2ff00;\n    border: none;\n    border-radius: 20px;\n    cursor: pointer;\n  }\n  \n  .Play {\n    font-size: 18px;\n    font-weight: bold;\n    color: #33384b;\n    padding: 10px;\n  }\n  \n  .b {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: flex-start;\n    gap: 200px;\n    transform: translate(20px, -60px);\n  }\n  \n  .ch {\n    padding: 10px 20px;\n    background-color: #b2ff00;\n    border: none;\n    border-radius: 20px;\n    font-weight: bold;\n    font-size: 18px;\n    cursor: pointer;\n    /* margin-bottom: 90px; */\n    /* width: 250px;\n  } */\n  /* .solo {\n    width: 250px; */\n    /* margin-top: 90px; */\n    /* padding: 10px 20px;\n    background-color: #b2ff00;\n    border: none;\n    border-radius: 20px;\n    font-weight: bold;\n    font-size: 18px;\n    cursor: pointer;\n  } */\n  \n  /* .SingleLocal-background {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    height: 100vh;\n    width: 100vw;\n    background: linear-gradient(110deg, #2f2e47 50%, #535379 50%);\n  }\n  \n  .SingleLocal-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: right;\n    flex: 1;\n    padding: 20px;\n  }\n  \n  .SingleLocal-icon {\n    width: 80px;\n    height: 80px; */\n    /* background-color: #c4c4c4; Light gray */\n    /* border-radius: 50%;\n    margin-bottom: 10px;\n  }\n  \n  .SingleLocal-name {\n    justify-content: center;\n    align-items: center;\n    font-size: 1em;\n    font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n    font-weight: bold;\n    color: #b2ff00;\n  }\n  \n  .s {\n    font-size: 9em;\n    font-weight: bold;\n    font-family:  'Montserrat', sans-serif;\n    color: #2f2e47; */\n    /* position: relative; or absolute/fixed depending on your layout */\n    /* transform: translate(55px, -99px);\n  }\n  \n  .v {\n    font-size: 9em;\n    font-weight: bold;\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n    color: #535379; */\n    /* margin: 0 20px; */\n    /* transform: translate(-6.5px, 2px);\n  }\n  .SingleLocal-button {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    transform: translate(-11px, 1px);\n  }\n  \n  .SingleLocal-b {\n    position: absolute;\n    bottom: 20px;\n    width: 200px;\n    padding: 10px 20px;\n    background-color: #b2ff00;\n    border: none;\n    border-radius: 20px;\n    cursor: pointer;\n  } */\n  \n  /* .Play {\n    font-size: 18px;\n    font-weight: bold;\n    color: #33384b;\n    padding: 10px;\n  } */ \n  \n  \n  \n  "
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/game/SingleLocal.js",
      "content": "\nimport './SingleLocal.css'\nimport { Link } from \"react-router-dom\";\n\nfunction SingleLocal() {\n    return (\n        <div className='SingleLocal-background'>\n            {/* <div className=\"SingleLocal-container\">\n                <div className=\"SingleLocal-icon\"></div>\n            </div>\n            <div className=\"SingleLocal-container\">\n                <div className='vs'>\n                    <span class=\"Sv\">V</span>\n                    <span class=\"Ss\">S</span>\n                </div>\n            </div> */}\n            <div className=\"SingleLocal-container\">\n                {/* <div className='b'> */}\n                    <Link className='solo' to={`/game/Local/SingleGame/SoloPractice`}>Solo Practice</Link>\n                    <Link className='ch'to={`/game/Local/SingleGame/ChallengeAFriend`}>Challenge a Friend</Link>\n                {/* </div> */}\n            </div>\n        </div>\n    );\n}\nexport default SingleLocal;\n"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/game/TourFinalScore.css",
      "content": "@import url('https://fonts.googleapis.com/css2?family=Rationale&display=swap');\n\n\n.levels-container{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    height: 100%; \n    width: 100%;\n}\n\n.level-box{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    width: 400px;\n    height: 400px;\n    /* box-sizing: border-box; */\n}\n\n.tour-level{\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    /* box-sizing: border-box; */\n    background-color: #636987;\n    border-bottom: 10px solid #E5C56C;\n    width: 100%;\n    height: 400px;\n}\n\n.tour-level span{\n    font-family: \"Rationale\";\n    font-weight: bold;\n    color: white;\n    text-align: center;\n    font-size: 25px;\n    margin-bottom: 30px;\n    padding: 0;\n\n}\n.tour-level svg{\n    color: #E5C56C;\n    font-size: 80px;\n    margin-bottom: 30px;\n    padding: 0;\n}\n\n.restart-icon svg{\n    color: #D5CFCF;\n    font-size: 40px;\n    margin-top: 40px;\n}"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/game/TourFinalScore.js",
      "content": "import \"./TourFinalScore.css\"\nimport { MdOutlineRestartAlt } from \"react-icons/md\";\nimport { HiMiniTrophy } from \"react-icons/hi2\";\n// import { SlBadge } from \"react-icons/sl\";\nimport { Link, useLocation } from \"react-router-dom\";\n\n\nfunction TourFinalScore(){\n    const { state } = useLocation();\n    const winner = state;\n    return(\n        <div className=\"levels-container\">\n            <div className=\"level-box\">\n                <div className=\"tour-level\">\n                    <span>Congratulations!</span>\n                    <HiMiniTrophy/>\n                    <span>{winner}</span>\n                </div> \n                    <Link className=\"restart-icon\" to={`/game/Local/TournamentLocal`}><MdOutlineRestartAlt/></Link>\n            </div>\n        </div>\n    );\n}\n\nexport default TourFinalScore;"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/game/Tournament.js",
      "content": "\nimport React, { useEffect, useRef, useState } from 'react';\nimport \"./PongGame.css\"\nimport profile from \"./logo.png\"\nimport { useNavigate, useLocation } from 'react-router-dom';\n\nconst Tournament = () => {\n    const { state } = useLocation();\n    const { name1, name2, name3, name4 } = state;\n    const navigate = useNavigate();\n    const canvasRef = useRef(null);\n    \n    const round1 = useRef({player1: null, player2: null, winner: null, loser: null, score:[0,0]})\n    const round2 = useRef({player1: null, player2: null, winner: null, loser: null, score:[0,0]})\n    const round3 = useRef({player1: null, player2: null, winner: null, loser: null, score:[0,0]})\n    const currentRound = useRef(round1.current);\n    const isGamePaused = useRef(false);\n    const [p1, setP1] = useState(\"\");\n    const [p2, setP2] = useState(\"\");\n    \n    const ballRef = useRef({x: 0, y: 0, radius: 12, color: \"white\", speed: 9, velocityX: 9, velocityY: 9});\n    const netRef = useRef({x: 0, y: 0, w: 6, h: 12});\n    const playersRef = useRef([\n        {id: 0, name: name1, x: 0, y: 0, w: 20, h: 100, score: 0},\n        {id: 1, name: name2, x: 0, y: 0, w: 20, h: 100, score: 0},\n        {id: 2, name: name3, x: 0, y: 0, w: 20, h: 100, score: 0},\n        {id: 3, name: name4, x: 0, y: 0, w: 20, h: 100, score: 0}]);\n        \n    const lPaddleMoveRef = useRef({up: false, down: false});\n    const rPaddleMoveRef = useRef({up: false, down: false});\n\n    const players = playersRef.current;\n\n    const getRandomId = () => {\n        const randNb = Math.random();\n        return(randNb < 0.25 ? 0 : randNb < 0.5 ? 1 : randNb < 0.75 ? 2 : 3)\n    }\n    const setRoundsPlayers = () => {\n        const player1Id = getRandomId();\n        let player2Id = getRandomId();\n        while (player2Id === player1Id)\n            player2Id = getRandomId();\n        round1.current.player1 = players[player1Id];\n        round1.current.player2 = players[player2Id];\n        console.log(\"round1:\")\n        console.log(round1.current.player1.name);\n        console.log(round1.current.player2.name);\n\n        const remainingPlayers = players.filter(player => player !== round1.current.player1 && player !== round1.current.player2);\n\n        round2.current.player1 = remainingPlayers[0];\n        round2.current.player2 = remainingPlayers[1];\n        console.log(\"round2:\")\n        console.log(round2.current.player1.name);\n        console.log(round2.current.player2.name);\n        setP1(round1.current.player1.name);\n        setP2(round1.current.player2.name);\n    }\n\n    const setRound3Players = () => {\n        round3.current.player1 = round1.current.winner;\n        round3.current.player2 = round2.current.winner;\n        console.log(\"round3:\")\n        console.log(round3.current.player1.name);\n        console.log(round3.current.player2.name);\n    }\n    useEffect(() => {\n        setRoundsPlayers(); // Initialize the players for round 1 and 2\n        const canvas = canvasRef.current;\n        canvas.width = 1000;\n        canvas.height = 700;\n\n        const ctx = canvas.getContext(\"2d\");\n        const ball = ballRef.current;\n        ball.x = canvas.width / 2;\n        ball.y = canvas.height / 2;\n\n        const net = netRef.current;\n        net.x = canvas.width/2 - net.w/2;\n\n        currentRound.current.player2.x = canvas.width - currentRound.current.player2.w;\n        currentRound.current.player2.y = canvas.height - currentRound.current.player2.h;\n\n        const renderGame = () => {\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n            // draw table\n            ctx.fillStyle = \"#636987\";\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\n            \n            // Draw net\n            ctx.fillStyle = \"#D9D9D9\";\n            for (let i = 0; i < canvas.height; i += 20){\n                ctx.fillRect(net.x, net.y + i, net.w, net.h);\n            }\n            // Draw ball\n            ctx.beginPath();\n            ctx.fillStyle = ball.color;\n            ctx.arc(ball.x, ball.y, ball.radius, 0, Math.PI * 2, false);\n            ctx.fill();\n            ctx.closePath();\n\n            // Draw paddles\n            ctx.fillStyle = \"#D8FD62\";\n            ctx.fillRect(currentRound.current.player1.x, currentRound.current.player1.y, currentRound.current.player1.w, currentRound.current.player1.h);\n\n            ctx.fillStyle = \"#E84172\";\n            ctx.fillRect(currentRound.current.player2.x, currentRound.current.player2.y, currentRound.current.player2.w, currentRound.current.player2.h);\n\n            // Display scores\n            ctx.fillStyle = \"white\";\n            ctx.font = \"60px rationale\";\n            ctx.fillText(currentRound.current.player1.score, canvas.width / 4, canvas.height / 5);\n            ctx.fillText(currentRound.current.player2.score, (canvas.width / 4) * 3, canvas.height / 5);\n        };\n        const checkCollision = (paddle, ball) => {\n            paddle.top = paddle.y;\n            paddle.bottom = paddle.y + paddle.h;\n            paddle.right = paddle.x + paddle.w;\n            paddle.left = paddle.x;\n\n            ball.top = ball.y - ball.radius;\n            ball.bottom = ball.y + ball.radius;\n            ball.right = ball.x + ball.radius;\n            ball.left = ball.x - ball.radius;\n\n            return (ball.left <= paddle.right && ball.top <= paddle.bottom && ball.bottom >= paddle.top && ball.right >= paddle.left)\n        }\n        const setBall = () => {\n            ball.x = canvas.width/2;\n            ball.y = canvas.height/2;\n            ball.velocityX = -ball.velocityX;\n            ball.speed = 9;\n        }\n\n        const updateGame = () => {\n            // Handle ball movement and collision detection logic\n            if (isGamePaused.current)\n                return;\n            ball.x += ball.velocityX;\n            ball.y += ball.velocityY;\n\n            //check collision with top and bottom walls\n            if (ball.y + ball.radius > canvas.height || ball.y - ball.radius < 0)\n                ball.velocityY = -ball.velocityY;\n\n            // Check for collision and update scores\n            const paddle = ((ball.x > canvas.width/2) ? currentRound.current.player2 : currentRound.current.player1);\n            if (checkCollision(paddle, ball)){\n                let angleRad = (ball.y === (paddle.y + paddle.h/2)) ? 0 : ( ball.velocityY > 0) ? Math.PI/4 : -Math.PI/4;//move the ball to the opposite direction from which it come\n                const direction = (ball.x < canvas.width/2) ? 1 : -1;\n\n                ball.velocityX = (Math.cos(angleRad) * ball.speed) * direction;\n                ball.velocityY = Math.sin(angleRad) * ball.speed;\n                ball.speed += 0.1;\n            }\n            // Ball reset on scoring\n            if (ball.x - ball.radius <= 0){\n                currentRound.current.player2.score++;\n                setBall();}\n            else if (ball.x + ball.radius >= canvas.width){\n                currentRound.current.player1.score++;\n                setBall();}\n                // Render the game\n                renderGame();\n            // Check if the current round has ended to move to the next round\n            if (currentRound.current.player1.score === 5 || currentRound.current.player2.score === 5){\n                ctx.fillStyle = \"white\";\n                ctx.font = \"90px rationale\";\n                if (currentRound.current.player1.score === 5)\n                    ctx.fillText(\"WIN!\", (canvas.width / 12) * 2, canvas.height / 2);\n                else\n                    ctx.fillText(\"WIN!\", (canvas.width/12)*8, canvas.height / 2);\n                isGamePaused.current = true;\n                handleEndOfRound();}\n        }\n\n        const handleEndOfRound = () => {\n            if (currentRound.current.player1.score > currentRound.current.player2.score){\n                currentRound.current.winner = currentRound.current.player1;\n                currentRound.current.loser = currentRound.current.player2;\n            }\n            else {\n                currentRound.current.winner = currentRound.current.player2;\n                currentRound.current.loser = currentRound.current.player1;\n            }\n            //set the current round score\n            currentRound.current.score = [currentRound.current.player1.score, currentRound.current.player2.score];\n            //reset the current round's players score to 0;\n            // console.log(\"current round score: \" + currentRound.current.player1.name + \":\" + currentRound.current.score[0] + \" vs \" + currentRound.current.player2.name + \":\" + currentRound.current.score[1]);\n            if (currentRound.current === round1.current){\n                // console.log(\"round1 \" + round1.current.score);\n                // console.log(\"Round 1 completed. Moving to Round 2.\");\n                currentRound.current = round2.current;\n            }\n            else if (currentRound.current === round2.current){\n                // console.log(\"round2 \" + round2.current.score);\n                // console.log(\"Round 2 completed. Setting up Round 3.\");\n                setRound3Players();\n                currentRound.current = round3.current;\n            }\n            else if (currentRound.current === round3.current){\n                // console.log(\"round3 \" + round3.current.score);\n                // console.log(\"Round 3 completed. Ending the tournament.\");\n                navigate(`/game/Local/TournamentLocal/Tournament/Results`, \n                    {state: currentRound.current.winner.name}\n                );\n                return;\n            }\n            setTimeout(() => {\n                setP1(currentRound.current.player1.name);\n                setP2(currentRound.current.player2.name);\n                resetGame4NextRound();\n            }, 3000);\n        };\n        const resetGame4NextRound = () => {\n            currentRound.current.player1.score = 0;\n            currentRound.current.player2.score = 0;\n            ball.x = canvas.width / 2;\n            ball.y = canvas.height / 2;\n            ball.velocityX = 9;\n            ball.velocityY = 9;\n            ball.speed = 9;\n            currentRound.current.player2.x = canvas.width - currentRound.current.player2.w;\n            currentRound.current.player2.y = canvas.height - currentRound.current.player2.h;\n            currentRound.current.player1.x = 0;\n            currentRound.current.player1.y = 0;\n            isGamePaused.current = false;\n        };\n        const player1PaddleMove = lPaddleMoveRef.current;\n        const player2PaddleMove = rPaddleMoveRef.current;\n        const handleKeyDown = (event) => {\n            if (event.key === 'ArrowDown')\n                player2PaddleMove.down = true;\n            if (event.key === 'ArrowUp')\n                player2PaddleMove.up = true;\n            if (event.key === 's' || event.key === 'S')\n                player1PaddleMove.down = true;\n            if (event.key === 'w' || event.key === 'W')\n                player1PaddleMove.up = true;\n        };\n        const handleKeyUp = (event) => {\n            if (event.key === 'ArrowDown')\n                player2PaddleMove.down = false;\n            if (event.key === 'ArrowUp')\n                player2PaddleMove.up = false;\n            if (event.key === 's' || event.key === 'S')\n                player1PaddleMove.down = false;\n            if (event.key === 'w' || event.key === 'W')\n                player1PaddleMove.up = false;\n        };\n        window.addEventListener('keydown', handleKeyDown);\n        window.addEventListener('keyup', handleKeyUp);\n\n        const movePaddle = (event) => {\n        if (player2PaddleMove.up)\n            currentRound.current.player2.y = Math.max(0, currentRound.current.player2.y - 10);\n        if (player2PaddleMove.down)\n            currentRound.current.player2.y = Math.min(canvasRef.current.height - currentRound.current.player2.h, currentRound.current.player2.y + 10);\n        if (player1PaddleMove.up)\n            currentRound.current.player1.y = Math.max(0, currentRound.current.player1.y - 10);\n        if (player1PaddleMove.down)\n            currentRound.current.player1.y = Math.min(canvasRef.current.height - currentRound.current.player1.h, currentRound.current.player1.y + 10);\n    }\n    const keyPressInterval = setInterval(movePaddle, 1000 / 60);\n    // Start the game loop\n    const interval = setInterval(updateGame, 1000 / 60);\n\n    return () => {\n        clearInterval(interval);\n        clearInterval(keyPressInterval);\n    };\n        });\n    return (\n        <div className='game_container'>\n            <div className='adversaries'>\n                <div className='player1'>\n                    {/* <div className='player1-info'> */}\n                        {/* <img src={profile} alt=\"\"></img> */}\n                        <span className=\"p-img\"><img src={profile} alt=\"\"></img></span>\n                        <span className=\"p-name1\">{p1}</span>\n                        <span className=\"V\">V</span>\n                    {/* </div> */}\n                </div>\n                <div className='player2'>\n                    {/* <div className='player2-info'> */}\n                        <span className=\"S\">S</span>\n                        <span className=\"p-name2\">{p2}</span>\n                        <span className=\"p-img\"><img src={profile} alt=\"\"></img></span>\n                        {/* <img src={profile} alt=\"\"></img> */}\n                    {/* </div> */}\n                </div>\n            </div>\n            <canvas ref={canvasRef}></canvas>\n        </div>\n    )\n}\n\nexport default Tournament\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import React, { useEffect, useRef, useState } from 'react';\n// import \"./PongGame.css\"\n// import profile from \"./logo.png\"\n// import { useNavigate, useLocation } from 'react-router-dom';\n\n// const Tournament = () => {\n//     const { state } = useLocation();\n//     const { name1, name2, name3, name4 } = state;\n//     const navigate = useNavigate();\n//     const canvasRef = useRef(null);\n\n//     //players\n//     const players = [\n//         {name: name1, x: 0, y: 0, w: 20, h: 100, score: 0},\n//         {name: name2, x: 0, y: 0, w: 20, h: 100, score: 0},\n//         {name: name3, x: 0, y: 0, w: 20, h: 100, score: 0},\n//         {name: name4, x: 0, y: 0, w: 20, h: 100, score: 0}\n//     ];\n//     const [p1, setP1] = useState(\"loading...\");\n//     const [p2, setP2] = useState(\"loading...\");\n\n//     //rounds\n//     const round1 = useRef({id: 1, player1: null, player2: null, winner: null});\n//     const round2 = useRef({id: 2, player1: null, player2: null, winner: null});\n//     const round3 = useRef({id: 3, player1: null, player2: null, winner: null});\n//     const [currentRound, setCurrentRound] = useState(round1.current);\n\n//     //canvas\n//     const net = {y: 0, w: 6, h: 12, x: 0};\n//     const ball = {x: 0, y: 0, radius: 12, color: \"white\", speed: 9, velocityX: 9, velocityY: 9};\n\n//     const player1PaddleMove = {up: false, down: false};\n//     const player2PaddleMove = {up: false, down: false};\n\n\n//     //get random number to set rounds players\n//     const getRandomId = () => {\n//         const randNb = Math.random();\n//         return(randNb < 0.25 ? 0 : randNb < 0.5 ? 1 : randNb < 0.75 ? 2 : 3)\n//     }\n\n//     const setRoundsPlayers = () => {\n//         const player1Id = getRandomId();\n//         let player2Id = getRandomId();\n//         while (player2Id === player1Id)\n//             player2Id = getRandomId();\n//         round1.current.player1 = players[player1Id];\n//         round1.current.player2 = players[player2Id];\n\n//         const remainingPlayers = players.filter(player => player !== round1.current.player1 && player !== round1.current.player2);\n\n//         round2.current.player1 = remainingPlayers[0];\n//         round2.current.player2 = remainingPlayers[1];\n//         setP1(round1.current.player1.name);\n//         setP2(round1.current.player2.name);\n//     }\n\n//     const draw = (ctx, canvas) => {\n//         ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n//         // draw table\n//         ctx.fillStyle = \"#636987\";\n//         ctx.fillRect(0, 0, canvas.width, canvas.height);\n        \n//         // Draw net\n//         ctx.fillStyle = \"#D9D9D9\";\n//         for (let i = 0; i < canvas.height; i += 20){\n//             ctx.fillRect(net.x, net.y + i, net.w, net.h);\n//         }\n//         // Draw ball\n//         ctx.beginPath();\n//         ctx.fillStyle = ball.color;\n//         ctx.arc(ball.x, ball.y, ball.radius, 0, Math.PI * 2, false);\n//         ctx.fill();\n//         ctx.closePath();\n\n//         // Draw paddles\n//         ctx.fillStyle = \"#D8FD62\";\n//         ctx.fillRect(currentRound.player1.x, currentRound.player1.y, currentRound.player1.w, currentRound.player1.h);\n\n//         ctx.fillStyle = \"#E84172\";\n//         ctx.fillRect(currentRound.player2.x, currentRound.player2.y, currentRound.player2.w, currentRound.player2.h);\n\n//         // Display scores\n//         ctx.fillStyle = \"white\";\n//         ctx.font = \"60px rationale\";\n//         ctx.fillText(currentRound.player1.score, canvas.width / 4, canvas.height / 5);\n//         ctx.fillText(currentRound.player2.score, (canvas.width / 4) * 3, canvas.height / 5);\n//     };\n\n//     const checkCollision = (paddle, ball) => {\n//         paddle.top = paddle.y;\n//         paddle.bottom = paddle.y + paddle.h;\n//         paddle.right = paddle.x + paddle.w;\n//         paddle.left = paddle.x;\n\n//         ball.top = ball.y - ball.radius;\n//         ball.bottom = ball.y + ball.radius;\n//         ball.right = ball.x + ball.radius;\n//         ball.left = ball.x - ball.radius;\n\n//         return (ball.left <= paddle.right && ball.top <= paddle.bottom && ball.bottom >= paddle.top && ball.right >= paddle.left)\n//     }\n\n//     const setBall = (canvas) => {\n//         ball.x = canvas.width/2;\n//         ball.y = canvas.height/2;\n//         ball.velocityX = -ball.velocityX;\n//         ball.speed = 9;\n//     }\n\n//     const handleEndOfRound = () => {\n//         //set the current round winner\n//         if (currentRound.player1.score > currentRound.player2.score)\n//             currentRound.winner = currentRound.player1;\n//         else \n//             currentRound.winner = currentRound.player2;\n//         //move to next round\n//         if (currentRound === round1.current){\n//             setP1(round2.current.player1.name);\n//             setP2(round2.current.player2.name);\n//             console.log (\"round1 \" + currentRound.player1.score)\n//             round3.current.player1 = currentRound.winner;\n//             setCurrentRound(round2.current);\n//         }\n//         else if (currentRound === round2.current){\n//             round3.current.player2 = currentRound.winner;\n//             setP1(round3.current.player1.name);\n//             setP2(round3.current.player2.name);\n//             console.log (\"round2 \" + currentRound.player1.score)\n//             setCurrentRound(round3.current);\n//         }\n//         else if (currentRound === round3.current){\n//             console.log (\"round3 \" + currentRound.player1.score)\n//             // round3.winner = currentRound.winner;\n//             navigate(`/game/Local/TournamentLocal/Tournament/Results`, \n//             {state: currentRound.winner.name}\n//         );\n//         }\n//     };\n    \n//     const updateGame = (ctx, canvas) => {\n//         // Handle ball movement and collision detection logic\n//         ball.x += ball.velocityX;\n//         ball.y += ball.velocityY;\n\n//         //check collision with top and bottom walls\n//         if (ball.y + ball.radius > canvas.height || ball.y - ball.radius < 0)\n//             ball.velocityY = -ball.velocityY;\n\n//         // Check for collision and update scores\n//         const paddle = ((ball.x > canvas.width/2) ? currentRound.player2 : currentRound.player1);\n//         if (checkCollision(paddle, ball)){\n//             let angleRad = (ball.y === (paddle.y + paddle.h/2)) ? 0 : ( ball.velocityY > 0) ? Math.PI/4 : -Math.PI/4;//move the ball to the opposite direction from which it come\n//             const direction = (ball.x < canvas.width/2) ? 1 : -1;\n\n//             ball.velocityX = (Math.cos(angleRad) * ball.speed) * direction;\n//             ball.velocityY = Math.sin(angleRad) * ball.speed;\n//             ball.speed += 0.1;\n//         }\n//         // Ball reset on scoring\n//         if (ball.x - ball.radius <= 0){\n//             currentRound.player2.score++;\n//             setBall(canvas);}\n//         else if (ball.x + ball.radius >= canvas.width){\n//             currentRound.player1.score++;\n//             setBall(canvas);}\n//             draw(ctx, canvas);\n//         // Check if the current round has ended to move to the next round\n//         if (currentRound.player1.score === 5 || currentRound.player2.score === 5){\n//             handleEndOfRound();\n//         }\n//     }\n\n//     useEffect(() => {\n//         setRoundsPlayers(); // Initialize the players for round 1 and 2\n//         const canvas = canvasRef.current;\n//         canvas.width = 1000;\n//         canvas.height = 700;\n//         const ctx = canvas.getContext(\"2d\");\n        \n//         ball.x = canvas.width / 2;\n//         ball.y = canvas.height / 2;\n//         net.x = canvas.width/2 - net.w/2;\n\n//         currentRound.player2.x = canvas.width - currentRound.player2.w;\n//         currentRound.player2.y = canvas.height - currentRound.player2.h;\n\n//         //draw Canvas\n//         draw(ctx, canvas);\n//         const handleKeyDown = (event) => {\n//             if (event.key === 'ArrowDown')\n//                 player2PaddleMove.down = true;\n//             if (event.key === 'ArrowUp')\n//                 player2PaddleMove.up = true;\n//             if (event.key === 's' || event.key === 'S')\n//                 player1PaddleMove.down = true;\n//             if (event.key === 'w' || event.key === 'W')\n//                 player1PaddleMove.up = true;\n//         };\n//         const handleKeyUp = (event) => {\n//             if (event.key === 'ArrowDown')\n//                 player2PaddleMove.down = false;\n//             if (event.key === 'ArrowUp')\n//                 player2PaddleMove.up = false;\n//             if (event.key === 's' || event.key === 'S')\n//                 player1PaddleMove.down = false;\n//             if (event.key === 'w' || event.key === 'W')\n//                 player1PaddleMove.up = false;\n//         };\n//         window.addEventListener('keydown', handleKeyDown);\n//         window.addEventListener('keyup', handleKeyUp);\n\n//         const movePaddle = (event) => {\n//         if (player2PaddleMove.up)\n//             currentRound.player2.y = Math.max(0, currentRound.player2.y - 10);\n//         if (player2PaddleMove.down)\n//             currentRound.player2.y = Math.min(canvas.height - currentRound.player2.h, currentRound.player2.y + 10);\n//         if (player1PaddleMove.up)\n//             currentRound.player1.y = Math.max(0, currentRound.player1.y - 10);\n//         if (player1PaddleMove.down)\n//             currentRound.player1.y = Math.min(canvas.height - currentRound.player1.h, currentRound.player1.y + 10);\n//     }\n//     // Start the game loop\n//     const interval = setInterval(() => updateGame(ctx, canvas), 1000 / 60);\n//     const keyPressInterval = setInterval(movePaddle, 1000 / 60);\n\n//     return () => {\n//         clearInterval(interval);\n//         clearInterval(keyPressInterval);\n//     }; \n//         }, [ currentRound ]);\n//     return (\n//         <div className='game_container'>\n//             <div className='adversaries'>\n//                 <div className='player1'>\n//                     {/* <div className='player1-info'> */}\n//                         {/* <img src={profile} alt=\"\"></img> */}\n//                         <span className=\"p-img\"><img src={profile} alt=\"\"></img></span>\n//                         <span className=\"p-name1\">{p1}</span>\n//                         <span className=\"V\">V</span>\n//                     {/* </div> */}\n//                 </div>\n//                 <div className='player2'>\n//                     {/* <div className='player2-info'> */}\n//                         <span className=\"S\">S</span>\n//                         <span className=\"p-name2\">{p2}</span>\n//                         <span className=\"p-img\"><img src={profile} alt=\"\"></img></span>\n//                         {/* <img src={profile} alt=\"\"></img> */}\n//                     {/* </div> */}\n//                 </div>\n//             </div>\n//             <canvas ref={canvasRef}></canvas>\n//         </div>\n//     )\n// }\n// export default Tournament"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/game/TournamentLocal.css",
      "content": ".TournamentLocal-background {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 100%;\n  height: 100%;\n  background-color: #3F4054;\n}\n\n.TournamentLocal-container {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  background-color: #636987;\n  width: 300px;\n  height: 300px;\n  border-radius: 20px;\n}\n\n.TournamentLocal-container input{\n  width: 160px;\n  height: 32px;\n  border: none;\n  border-radius: 6px;\n  padding-left: 10px;\n  margin-bottom: 10px;\n  box-sizing: border-box;\n  background-color: #3F4054;\n  color: #D5CFCF;\n  font-weight: bold;\n  /* outline:none; */\n  outline-color: #D5CFCF;\n}\n\n.TournamentLocal-container input::placeholder{\n  color: #D5CFCF;\n  font-weight: lighter;\n}\n\n.start-button {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 160px;\n    height: 32px;\n    font-size: 16px;\n    font-weight: bold;\n    color: #3F4054;\n    border: none;\n    background-color: #D5CFCF;\n    /* width: 100px; */\n    border-radius: 6px;\n    text-decoration: none;\n    cursor: pointer;\n}\n\n.errorMessage {\n  color: rgb(230, 41, 41);\n  text-align: center;\n}\n\n/* .start-button:hover{\n  background-color: #b2ff00;\n} */\n\n  /* .side-container {\n    display: flex;\n    flex-direction:row;\n    align-items: center;\n    justify-content: right;\n    flex: 1;\n    padding: 20px;\n  } */\n  \n  /* .TournamentLocal-icon {\n    width: 80px;\n    height: 80px;\n    background-color: #c4c4c4;\n    border-radius: 50%;\n    margin-bottom: 10px;\n  }\n  \n  .name-l {\n    justify-content: center;\n    align-items: center;\n    font-size: 1em;\n    font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n    font-weight: bold;\n    color: white;\n    border: none;\n    border-bottom: 2px solid white ;\n    background-color: #535379;\n  }\n  .name-r {\n    font-size: 1em;\n    font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n    font-weight: bold;\n    color: white;\n    border: none;\n    border-bottom: 2px solid white ;\n    background-color: #2f2e47;\n  }\n\n.edit-icon {\n  transform: translate(-15px);\n  color: white;\n  cursor: pointer;\n}\n\n.vs {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n}  \n\n.TLv {\n  font-size: 9em;\n  font-weight: bold;\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\n  color: #535379;\n  margin: 0 20px;\n  transform: translate(16px, 2px);\n}\n.TLs {\n  font-size: 9em;\n  font-weight: bold;\n  font-family:  'Montserrat', sans-serif;\n  color: #2f2e47;\n  position: relative;\n  transform: translate(-39px, 59px);\n} */\n  \n/* .FVsF-button {\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  transform: translate(-450px, 300px);\n} */\n\n\n"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/game/TournamentLocal.js",
      "content": "// TournamentLocal.jsx\nimport React, { useState } from \"react\";\nimport \"./TournamentLocal.css\";\n// import { BiEditAlt } from \"react-icons/bi\";\n// import { GiPingPongBat } from \"react-icons/gi\";\n// import { Link } from \"react-router-dom\";\nimport { useNavigate } from 'react-router-dom';\n\nfunction TournamentLocal() {\n  const [name1, setName1] = useState(\"\");\n  const [name2, setName2] = useState(\"\");\n  const [name3, setName3] = useState(\"\");\n  const [name4, setName4] = useState(\"\");\n\n  const [error, setError] = useState(\"\");\n\n    const navigate = useNavigate();\n\n  // const [done, setDone] = useState(false);\n\n\n  const handleChange = (e) =>{\n    if(e.target.name === \"n1\")\n      setName1(e.target.value);\n    if(e.target.name === \"n2\")\n      setName2(e.target.value);\n    if(e.target.name === \"n3\")\n      setName3(e.target.value);\n    if(e.target.name === \"n4\")\n      setName4(e.target.value);\n  \n};\n\n  const handleSubmite = (e) => {\n    e.preventDefault();\n    if (name1 === name2 || name1 === name3 || name1=== name4 || \n      name2 === name3 || name2 === name4 ||\n      name3 === name4)\n        setError(\"Duplicate names!\");\n      else{\n        setError(\"\");\n        navigate(`/game/Local/TournamentLocal/Tournament`, \n        {state:{ name1, name2, name3, name4 }});\n    }\n}\n\n  return (\n    <div className=\"TournamentLocal-background\">\n        {/* <div > */}\n          <form className=\"TournamentLocal-container\" onSubmit={handleSubmite}>\n            <input type=\"text\" placeholder=\"Enter a name\" required value={name1} name=\"n1\" onChange={handleChange}/>\n            <input type=\"text\" placeholder=\"Enter a name\" required value={name2} name=\"n2\" onChange={handleChange}/>\n            <input type=\"text\" placeholder=\"Enter a name\" required value={name3} name=\"n3\" onChange={handleChange}/>\n            <input type=\"text\" placeholder=\"Enter a name\" required value={name4} name=\"n4\" onChange={handleChange}/>\n            { error && <p className=\"errorMessage\">{error}</p>}\n            <button type=\"submit\" className=\"start-button\">START</button>\n        </form>\n          {/* </div> */}\n    </div>\n  );\n}\n\nexport default TournamentLocal;\n\n"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/game/Tournamentasmae.css",
      "content": ".tournament-background {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100vh;\r\n  width: 95vw;\r\n  background: linear-gradient(110deg, #2f2e47 50%, #535379 50%);\r\n}\r\n\r\n.Tournament-container {\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: right;\r\n  flex: 1;\r\n  padding: 20px;\r\n}\r\n\r\n.Tournament-icon {\r\n  width: 80px;\r\n  height: 80px;\r\n  background-color: #c4c4c4; /* Light gray */\r\n  border-radius: 50%;\r\n  margin-bottom: 10px;\r\n}\r\n\r\n.name {\r\n  justify-content: center;\r\n  align-items: center;\r\n  font-size: 1em;\r\n  font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\r\n  font-weight: bold;\r\n  color: #b2ff00;\r\n}\r\n\r\n.s {\r\n  font-size: 9em;\r\n  font-weight: bold;\r\n  font-family:  'Montserrat', sans-serif;\r\n  color: #2f2e47;\r\n  position: relative; /* or absolute/fixed depending on your layout */\r\n  transform: translate(60px, -99px);\r\n}\r\n.v {\r\n  font-size: 9em;\r\n  font-weight: bold;\r\n  font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n  color: #535379;\r\n  margin: 0 20px;\r\n  transform: translate(-6.5px, 2px);\r\n}\r\n.Tournament-button {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  transform: translate(-11px, 50px);\r\n}\r\n\r\n.Tournament-b {\r\n  position: absolute;\r\n  bottom: 20px;\r\n  width: 200px;\r\n  padding: 10px 20px;\r\n  background-color: #b2ff00;\r\n  border: none;\r\n  border-radius: 20px;\r\n  cursor: pointer;\r\n}\r\n\r\n.Play {\r\n  font-size: 18px;\r\n  font-weight: bold;\r\n  color: #33384b;\r\n  padding: 10px;\r\n}\r\n\r\n"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/game/TwoPlayersGame.js",
      "content": "import React, { useEffect, useRef } from 'react';\nimport \"./PongGame.css\"\n// import AdversariesBar from '../../AdversariesBar';\nimport { useNavigate } from 'react-router-dom';\nimport profile from \"./logo.png\"\n\nconst TwoPlayersGame = () => {\n    const canvasRef = useRef(null);\n    \n    const ballRef = useRef({x: 0, y: 0, radius: 12, color: \"white\", speed: 9, velocityX: 9, velocityY: 9});\n    const netRef = useRef({x: 0, y: 0, w: 6, h: 12});\n    const rightPlayerRef = useRef({x: 0, y: 0, w: 20, h: 120, color: \"#E84172\", score: 0});\n    const leftPlayerRef = useRef({x: 0, y: 0, w: 20, h: 120, color: \"#D8FD62\", score: 0});\n    const lPaddleMoveRef = useRef({up: false, down: false});\n    const rPaddleMoveRef = useRef({up: false, down: false});\n    const isGameRunning = useRef(true);\n\n    const navigate = useNavigate();\n\n        useEffect(() => {\n        const canvas = canvasRef.current;\n        canvas.width = 1000;\n        canvas.height = 700;\n\n        const lPaddleMove = lPaddleMoveRef.current;\n        const rPaddleMove = rPaddleMoveRef.current;\n    \n        const ball = ballRef.current;\n        ball.x = canvas.width/2;\n        ball.y = canvas.height/2;\n        \n        const bot = rightPlayerRef.current;\n        bot.x = canvas.width - bot.w;\n        bot.y = canvas.height - bot.h;\n\n        const playerL = leftPlayerRef.current;\n        const playerR = rightPlayerRef.current;\n\n        const net = netRef.current;\n        net.x = canvas.width/2 - net.w/2;\n        \n        const ctx = canvas.getContext(\"2d\");\n        const renderGame = () => {\n            //clear the canvas area before rendering\n            ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n            // draw table\n            ctx.fillStyle = \"#636987\";\n            ctx.fillRect(0, 0, canvas.width, canvas.height);\n\n            //draw the net\n            ctx.fillStyle = \"#D9D9D9\";\n            for (let i = 0; i < canvas.height; i += 20){\n                ctx.fillRect(net.x, net.y + i, net.w, net.h);\n            }\n\n            //draw ball\n            ctx.beginPath();\n            ctx.fillStyle = ball.color;\n            ctx.arc(ball.x, ball.y, ball.radius, 0, Math.PI * 2, false);\n            ctx.fill();\n            ctx.closePath();\n\n            //draw player's paddle\n            ctx.fillStyle = playerL.color;\n            ctx.fillRect(playerL.x, playerL.y, playerL.w, playerL.h);\n            \n            //draw bot's paddle\n            ctx.fillStyle = playerR.color;\n            ctx.fillRect(playerR.x, playerR.y, playerR.w, playerR.h);\n\n            //the score\n            ctx.fillStyle = \"white\";\n            ctx.font = \"60px rationale\";\n            ctx.fillText(playerL.score, canvas.width/4, canvas.height/5);\n            ctx.fillText(playerR.score, canvas.width/4 * 3, canvas.height/5);\n        }\n        const checkCollision = (paddle, ball) => {\n            paddle.top = paddle.y;\n            paddle.bottom = paddle.y + paddle.h;\n            paddle.right = paddle.x + paddle.w;\n            paddle.left = paddle.x;\n\n            ball.top = ball.y - ball.radius;\n            ball.bottom = ball.y + ball.radius;\n            ball.right = ball.x + ball.radius;\n            ball.left = ball.x - ball.radius;\n  \n            return (ball.left <= paddle.right && ball.top <= paddle.bottom && ball.bottom >= paddle.top && ball.right >= paddle.left)\n        }\n        const setBall = () => {\n            ball.x = canvas.width/2;\n            ball.y = canvas.height/2;\n            ball.velocityX = -ball.velocityX;\n            ball.speed = 9;\n\n        }\n        const updateGame = () => {\n            ball.x += ball.velocityX;\n            ball.y += ball.velocityY;\n            \n            //check collision with top and bottom walls\n            if (ball.y + ball.radius > canvas.height || ball.y - ball.radius < 0)\n                ball.velocityY *= -1;\n            \n            const paddle = ((ball.x > canvas.width/2) ? playerR : playerL);\n            if (checkCollision(paddle, ball)){\n                let angleRad = (ball.y === (paddle.y + paddle.h/2)) ? 0 : ( ball.velocityY > 0) ? Math.PI/4 : -Math.PI/4;//move the ball to the opposite direction from which it come\n\n                const direction = (ball.x < canvas.width/2) ? 1 : -1;\n\n                ball.velocityX = (Math.cos(angleRad) * ball.speed) * direction;\n                ball.velocityY = Math.sin(angleRad) * ball.speed;\n                ball.speed += 0.1;\n            }\n            if (ball.x - ball.radius <= 0){\n                playerR.score++;\n                setBall();\n            }\n            else if (ball.x + ball.radius >= canvas.width){\n                playerL.score++;\n                setBall();\n            }\n            if (playerL.score === 5 || playerR.score === 5)\n                isGameRunning.current = false;\n        }\n        \n        const game = () => {\n            renderGame();\n            updateGame();\n            if (isGameRunning.current === false){\n                setTimeout(() => {\n                    setBall();\n                    ctx.fillStyle = \"white\";\n                    ctx.font = \"90px rationale\";\n                    if (playerL.score === 5)\n                        ctx.fillText(\"WIN!\", (canvas.width/12)*2, canvas.height / 2);\n                    else\n                        ctx.fillText(\"WIN!\", (canvas.width/12)*8, canvas.height / 2);\n                }, 2000);\n                navigate(`/game/Local/SingleGame/ChallengeAFriend/Score`, \n                    {state:{ player1:\"PLAYER 1\" , player2:\"PLAYER 2\", player1Score:playerL.score, player2Score:playerR.score }});\n                }\n            }   \n            const handleKeyDown = (event) => {\n                if (event.key === 'ArrowDown')\n                    rPaddleMove.down = true;\n                if (event.key === 'ArrowUp')\n                    rPaddleMove.up = true;\n                if (event.key === 's' || event.key === 'S')\n                    lPaddleMove.down = true;\n                if (event.key === 'w' || event.key === 'W')\n                    lPaddleMove.up = true;\n\n            };\n            const handleKeyUp = (event) => {\n                if (event.key === 'ArrowDown')\n                    rPaddleMove.down = false;\n                if (event.key === 'ArrowUp')\n                    rPaddleMove.up = false;\n                if (event.key === 's' || event.key === 'S')\n                    lPaddleMove.down = false;\n                if (event.key === 'w' || event.key === 'W')\n                    lPaddleMove.up = false;\n            };\n            window.addEventListener('keydown', handleKeyDown);\n            window.addEventListener('keyup', handleKeyUp);\n\n            const movePaddle = (event) => {\n                if (rPaddleMove.up){\n                    playerR.y = Math.max(0, playerR.y - 10);\n                }\n                if (rPaddleMove.down){\n                    playerR.y = Math.min(canvasRef.current.height - playerR.h, playerR.y + 10);\n                }\n                if (lPaddleMove.up){\n                    playerL.y = Math.max(0, playerL.y - 10);\n                }\n                if (lPaddleMove.down){\n                    playerL.y = Math.min(canvasRef.current.height - playerL.h, leftPlayerRef.current.y + 10);\n                }\n            }\n            const gameInterval = setInterval(game, 1000 / 60);\n            const keyPressInterval = setInterval(movePaddle, 1000 / 60);\n            return () => {\n                clearInterval(gameInterval);\n                clearInterval(keyPressInterval);\n            };\n        });\n    return (\n      <div className='game_container'>\n          <div className='adversaries'>\n                <div className='player1'>\n                    {/* <div className='player1-info'> */}\n                        {/* <img src={profile} alt=\"\"></img> */}\n                        <span className=\"p-img\"><img src={profile} alt=\"\"></img></span>\n                        <span className=\"p-name1\">PLAYER 1</span>\n                        <span className=\"V\">V</span>\n                    {/* </div> */}\n                </div>\n                <div className='player2'>\n                    {/* <div className='player2-info'> */}\n                        <span className=\"S\">S</span>\n                        <span className=\"p-name2\">PLAYER 2</span>\n                        <span className=\"p-img\"><img src={profile} alt=\"\"></img></span>\n                        {/* <img src={profile} alt=\"\"></img> */}\n                    {/* </div> */}\n                </div>\n            </div>\n          <canvas ref={canvasRef}></canvas>\n      </div>\n    )\n}\n\nexport default TwoPlayersGame\n\n\n\n\n\n"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/game/TwoVsTwo.css",
      "content": "\r\n.TwoVsTwo-background {\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  height: 100vh;\r\n  width: 95vw;\r\n  background: linear-gradient(110deg, #2f2e47 50%, #535379 50%);\r\n  }\r\n  \r\n  .TwoVsTwo-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    justify-content: right;\r\n    flex: 1;\r\n    padding: 20px;\r\n  }\r\n  \r\n  .TwoVsTwo-icon {\r\n    width: 80px;\r\n    height: 80px;\r\n    background-color: #c4c4c4;\r\n    border-radius: 50%;\r\n    margin-bottom: 10px;\r\n  }\r\n  \r\n  .TwoVsTwo-name {\r\n    justify-content: center;\r\n    align-items: center;\r\n    font-size: 1em;\r\n    font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\r\n    font-weight: bold;\r\n    color: #b2ff00;\r\n  }\r\n  .vs {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n  }\r\n\r\n  .TWs {\r\n    font-size: 9em;\r\n    font-weight: bold;\r\n    font-family:  'Montserrat', sans-serif;\r\n    color: #2f2e47;\r\n    position: relative; /* or absolute/fixed depending on your layout */\r\n    transform: translate(-49px, 69px);\r\n  }\r\n  .TWv {\r\n    font-size: 9em;\r\n    font-weight: bold;\r\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\r\n    color: #535379;\r\n    margin: 0 20px;\r\n    transform: translate(16px, 2px);\r\n  }\r\n  \r\n  .TwoVsTwo-button {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    transform: translate(-24px, 250px);\r\n  }\r\n  \r\n  .TwoVsTwo-b {\r\n    position: absolute;\r\n    bottom: 20px;\r\n    width: 200px;\r\n    padding: 10px 20px;\r\n    background-color: #b2ff00;\r\n    border: none;\r\n    border-radius: 20px;\r\n    cursor: pointer;\r\n  }\r\n  \r\n  .Play {\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    color: #33384b;\r\n    padding: 10px;\r\n    \r\n  }\r\n  "
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/game/TwoVsTwo.js",
      "content": "import React from \"react\";\r\nimport \"./TwoVsTwo.css\";\r\nimport { GiPingPongBat } from \"react-icons/gi\";\r\n\r\n\r\nfunction TwoVsTwo() {\r\n  return (\r\n    <div className=\"TwoVsTwo-background\">\r\n      <div className=\"TwoVsTwo-container\">\r\n        <div className=\"TwoVsTwo-icon\"></div>\r\n        <p className=\"TwoVsTwo-name\">xxxx</p>\r\n      </div>\r\n      <div className=\"TwoVsTwo-container\">\r\n        <div className=\"vs\">\r\n          <span class=\"TWv\">V</span>\r\n          <span class=\"TWs\">S</span>\r\n        </div>\r\n        <div className=\"TwoVsTwo-button\">\r\n          <button className=\"TwoVsTwo-b\"> <GiPingPongBat /> <span className=\"Play\">PLAY</span></button>\r\n        </div>\r\n      </div>\r\n      <div className=\"TwoVsTwo-container\">\r\n        <div className=\"TwoVsTwo-icon\"></div>\r\n        <p className=\"TwoVsTwo-name\">Friends</p>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TwoVsTwo;"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/game/newTour.js",
      "content": "import React, { useEffect, useRef, useState } from 'react';\nimport \"./PongGame.css\"\nimport profile from \"./logo.png\"\nimport { useNavigate, useLocation } from 'react-router-dom';\n\nconst Tournament = () => {\n    const { state } = useLocation();\n    const { name1, name2, name3, name4 } = state;\n    const navigate = useNavigate();\n    const canvasRef = useRef(null);\n\n    //rounds\n    const round1 = {id: 1, player1: null, player2: null, winner: null};\n    const round2 = {id: 2, player1: null, player2: null, winner: null};\n    const round3 = {id: 3, player1: null, player2: null, winner: null};\n    const [currentRound, setCurrentRound] = useState(round1);\n\n    //canvas\n    const net = {y: 0, w: 6, h: 12, x: 0};\n    const ball = {x: 0, y: 0, radius: 12, color: \"white\", speed: 9, velocityX: 9, velocityY: 9};\n\n    const player1PaddleMove = {up: false, down: false};\n    const player2PaddleMove = {up: false, down: false};\n\n    //players\n    const players = [\n        {name: name1, x: 0, y: 0, w: 20, h: 100, score: 0},\n        {name: name2, x: 0, y: 0, w: 20, h: 100, score: 0},\n        {name: name3, x: 0, y: 0, w: 20, h: 100, score: 0},\n        {name: name4, x: 0, y: 0, w: 20, h: 100, score: 0}\n    ];\n\n    //get random number to set rounds players\n    const getRandomId = () => {\n        const randNb = Math.random();\n        return(randNb < 0.25 ? 0 : randNb < 0.5 ? 1 : randNb < 0.75 ? 2 : 3)\n    }\n\n    const setRoundsPlayers = () => {\n        const player1Id = getRandomId();\n        let player2Id = getRandomId();\n        while (player2Id === player1Id)\n            player2Id = getRandomId();\n        round1.player1 = players[player1Id];\n        round1.player2 = players[player2Id];\n\n        const remainingPlayers = players.filter(player => player !== round1.player1 && player !== round1.player2);\n\n        round2.player1 = remainingPlayers[0];\n        round2.player2 = remainingPlayers[1];\n    }\n\n    const draw = (ctx, canvas) => {\n        ctx.clearRect(0, 0, canvas.width, canvas.height);\n\n        // draw table\n        ctx.fillStyle = \"#636987\";\n        ctx.fillRect(0, 0, canvas.width, canvas.height);\n        \n        // Draw net\n        ctx.fillStyle = \"#D9D9D9\";\n        for (let i = 0; i < canvas.height; i += 20){\n            ctx.fillRect(net.x, net.y + i, net.w, net.h);\n        }\n        // Draw ball\n        ctx.beginPath();\n        ctx.fillStyle = ball.color;\n        ctx.arc(ball.x, ball.y, ball.radius, 0, Math.PI * 2, false);\n        ctx.fill();\n        ctx.closePath();\n\n        // Draw paddles\n        ctx.fillStyle = \"#D8FD62\";\n        ctx.fillRect(currentRound.player1.x, currentRound.player1.y, currentRound.player1.w, currentRound.player1.h);\n\n        ctx.fillStyle = \"#E84172\";\n        ctx.fillRect(currentRound.player2.x, currentRound.player2.y, currentRound.player2.w, currentRound.player2.h);\n\n        // Display scores\n        ctx.fillStyle = \"white\";\n        ctx.font = \"60px rationale\";\n        ctx.fillText(currentRound.player1.score, canvas.width / 4, canvas.height / 5);\n        ctx.fillText(currentRound.player2.score, (canvas.width / 4) * 3, canvas.height / 5);\n    };\n\n    const checkCollision = (paddle, ball) => {\n        paddle.top = paddle.y;\n        paddle.bottom = paddle.y + paddle.h;\n        paddle.right = paddle.x + paddle.w;\n        paddle.left = paddle.x;\n\n        ball.top = ball.y - ball.radius;\n        ball.bottom = ball.y + ball.radius;\n        ball.right = ball.x + ball.radius;\n        ball.left = ball.x - ball.radius;\n\n        return (ball.left <= paddle.right && ball.top <= paddle.bottom && ball.bottom >= paddle.top && ball.right >= paddle.left)\n    }\n\n    const setBall = (canvas) => {\n        ball.x = canvas.width/2;\n        ball.y = canvas.height/2;\n        ball.velocityX = -ball.velocityX;\n        ball.speed = 9;\n    }\n\n    const handleEndOfRound = () => {\n        //set the current round winner\n        // if (currentRound.player1.score > currentRound.player2.score)\n        //     currentRound.winner = currentRound.player1;\n        // else \n        //     currentRound.winner = currentRound.player2;\n        //move to next round\n        if (currentRound.id === 1){\n            if (currentRound.player1.score > currentRound.player2.score)\n                round3.player1 = currentRound.player1;\n            else\n                round3.player1 = currentRound.player2;\n            setCurrentRound(round2);\n        }\n        else if (currentRound.id === 2){\n            if (currentRound.player1.score > currentRound.player2.score)\n                round3.player2 = currentRound.player1;\n            else\n                round3.player2 = currentRound.player2;\n            setCurrentRound(round3);\n        }\n        else if (currentRound.id === 3){\n            if (currentRound.player1.score > currentRound.player2.score)\n                round3.winner = currentRound.player1;\n            else\n                round3.winner = currentRound.player2;\n            navigate(`/game/Local/TournamentLocal/Tournament/Results`, \n            {state: round3.winner.name}\n        );\n        }\n    };\n    \n    const updateGame = (ctx, canvas) => {\n        // Handle ball movement and collision detection logic\n        ball.x += ball.velocityX;\n        ball.y += ball.velocityY;\n\n        //check collision with top and bottom walls\n        if (ball.y + ball.radius > canvas.height || ball.y - ball.radius < 0)\n            ball.velocityY = -ball.velocityY;\n\n        // Check for collision and update scores\n        const paddle = ((ball.x > canvas.width/2) ? currentRound.player2 : currentRound.player1);\n        if (checkCollision(paddle, ball)){\n            let angleRad = (ball.y === (paddle.y + paddle.h/2)) ? 0 : ( ball.velocityY > 0) ? Math.PI/4 : -Math.PI/4;//move the ball to the opposite direction from which it come\n            const direction = (ball.x < canvas.width/2) ? 1 : -1;\n\n            ball.velocityX = (Math.cos(angleRad) * ball.speed) * direction;\n            ball.velocityY = Math.sin(angleRad) * ball.speed;\n            ball.speed += 0.1;\n        }\n        // Ball reset on scoring\n        if (ball.x - ball.radius <= 0){\n            currentRound.player2.score++;\n            setBall(canvas);}\n        else if (ball.x + ball.radius >= canvas.width){\n            currentRound.player1.score++;\n            setBall(canvas);}\n            draw(ctx, canvas);\n        // Check if the current round has ended to move to the next round\n        if (currentRound.player1.score === 5 || currentRound.player2.score === 5){\n            handleEndOfRound();\n        }\n    }\n\n    setRoundsPlayers(); // Initialize the players for round 1 and 2\n    useEffect(() => {\n        const canvas = canvasRef.current;\n        canvas.width = 1000;\n        canvas.height = 700;\n        const ctx = canvas.getContext(\"2d\");\n        \n        ball.x = canvas.width / 2;\n        ball.y = canvas.height / 2;\n        net.x = canvas.width/2 - net.w/2;\n\n        currentRound.player2.x = canvas.width - currentRound.player2.w;\n        currentRound.player2.y = canvas.height - currentRound.player2.h;\n\n        //draw Canvas\n        draw(ctx, canvas);\n        const handleKeyDown = (event) => {\n            if (event.key === 'ArrowDown')\n                player2PaddleMove.down = true;\n            if (event.key === 'ArrowUp')\n                player2PaddleMove.up = true;\n            if (event.key === 's' || event.key === 'S')\n                player1PaddleMove.down = true;\n            if (event.key === 'w' || event.key === 'W')\n                player1PaddleMove.up = true;\n        };\n        const handleKeyUp = (event) => {\n            if (event.key === 'ArrowDown')\n                player2PaddleMove.down = false;\n            if (event.key === 'ArrowUp')\n                player2PaddleMove.up = false;\n            if (event.key === 's' || event.key === 'S')\n                player1PaddleMove.down = false;\n            if (event.key === 'w' || event.key === 'W')\n                player1PaddleMove.up = false;\n        };\n        window.addEventListener('keydown', handleKeyDown);\n        window.addEventListener('keyup', handleKeyUp);\n\n        const movePaddle = (event) => {\n        if (player2PaddleMove.up)\n            currentRound.player2.y = Math.max(0, currentRound.player2.y - 10);\n        if (player2PaddleMove.down)\n            currentRound.player2.y = Math.min(canvas.height - currentRound.player2.h, currentRound.player2.y + 10);\n        if (player1PaddleMove.up)\n            currentRound.player1.y = Math.max(0, currentRound.player1.y - 10);\n        if (player1PaddleMove.down)\n            currentRound.player1.y = Math.min(canvas.height - currentRound.player1.h, currentRound.player1.y + 10);\n    }\n    // Start the game loop\n    const interval = setInterval(() => updateGame(ctx, canvas), 1000 / 60);\n    const keyPressInterval = setInterval(movePaddle, 1000 / 60);\n\n    return () => {\n        clearInterval(interval);\n        clearInterval(keyPressInterval);\n    }; \n        }, [ currentRound ]);\n    return (\n        <div className='game_container'>\n            <div className='adversaries'>\n                <div className='player1'>\n                    {/* <div className='player1-info'> */}\n                        {/* <img src={profile} alt=\"\"></img> */}\n                        <span className=\"p-img\"><img src={profile} alt=\"\"></img></span>\n                        <span className=\"p-name1\">{currentRound.player1.name}</span>\n                        <span className=\"V\">V</span>\n                    {/* </div> */}\n                </div>\n                <div className='player2'>\n                    {/* <div className='player2-info'> */}\n                        <span className=\"S\">S</span>\n                        <span className=\"p-name2\">{currentRound.player2.name}</span>\n                        <span className=\"p-img\"><img src={profile} alt=\"\"></img></span>\n                        {/* <img src={profile} alt=\"\"></img> */}\n                    {/* </div> */}\n                </div>\n            </div>\n            <canvas ref={canvasRef}></canvas>\n        </div>\n    )\n}\nexport default Tournament"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/home/Home.css",
      "content": "\n.dashboard-container {\n    display: flex;\n    flex-direction: column;\n}\n\n\n.titles-dashboard{\n  padding-left: 65px;\n  font-size: 20px;\n  color: white;\n  font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}\n.title-dash-last-game{\n  margin-left: -109px;\n  margin-top: 15px;\n  padding-bottom: 12px;\n  padding-left: 40px;\n}\n\n.big-container{\n  display: flex;\n  justify-items: center;\n  align-items: center;\n  flex-direction: column;\n  padding: 0;\n  margin: 0;\n}\n.titles-game-mode{\n  border-bottom: 1px solid #4C4F5C;\n}\n\n.title-dash{\n  margin-left: -18px;\n  margin-top: 15px;\n  padding-bottom: 12px;\n}\n  \n\n.dashboard-profile {\n  width: 300px;\n  height: 100px;\n  display: flex;\n  align-items: center;\n  background-color: #636987;\n  padding-top: 12px;\n  padding-bottom: 12px;\n  border-radius: 17px;\n  margin-bottom: 20px;\n  margin-left: 400px;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}\n\n.profile-photo-dash {\n  width: 80px;\n  height: 80px;\n  border-radius: 50%;\n  margin-right: 20px;\n  margin-bottom: 20px;\n  margin-top: 20px;\n  margin-left: 50px;\n}\n\n.profile-details-name{\n  color: white;\n  font-size: 20px;\n}\n\n.profile-details-lvl{\n  padding-top: 9px;\n  padding-left: 9px;\n  color: #BBFC52;\n}\n\n.game-modes{\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  direction: row;\n  \n}\n\n.game-mode{\n    display: flex;\n    align-items:center;\n    flex-direction: column;\n    width: 180px;\n    height: 180px;\n    background-color: #636987;\n    border-radius: 17px;\n    margin : 0 30px;\n    \n}\n.play-modes{\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  width: 100%;\n  height: 60%;\n  color: #BBBBBB;\n  font-size: 20px;\n  font-weight: bold;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}\n\n.game-mode-button button{\n  width: 80px;\n  background-color: #E84172;\n  color: rgb(255, 255, 255);\n  border-radius: 10px;\n  font-size: 20px;\n  border-radius: 12px;\n  cursor: pointer;\n  border: 0.5px solid #3F4054;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}\n\n.title-game-mode{\n  margin-right: 770px;\n  margin-top: 20px;    \n  margin-bottom: 20px;\n  font-size: 20px;\n  color: white;\n  font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}\n\n.last-game .game-result {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 10px;\n}\n\n.friend-items-dash {\n  display: flex;\n  align-items: center;\n  padding: 10px 0;\n}\n\n.game-rank-last{\n  padding-top: 40px;\n  display: flex;\n}\n\n\n.game-rank,\n.dashboard-friends{\n  margin-top: 10px;\n  margin-left: 50px;\n  width: 300px;\n  height: 300px;\n  max-width: 400px;\n  background-color: #636987;\n  border-radius: 17px;\n}\n.last-game{\n  margin-top: 10px;\n  width: 300px;\n  height: 300px;\n  max-width: 400px;\n  background-color: #636987;\n  border-radius: 17px;\n}\n\n\n\n\n\n.game-mode-button:hover button{\n  background: #d13861;\n    transform: translateY(-1px);\n  border-color: #505468;\n\n}\n\n\n  /* margin-left: 50px;\n  margin-right: 70px; */\n  \n\n\n\n.list-last-game,\n.game-rank-list,\n.dashboard-friends-list{\n  list-style: none;\n  padding: 10px;\n  margin: 0;\n  max-height: 260px;\n  overflow-y: auto;\n  color: white;\n  font-size: 16px;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}\n\n\n.friend-item-dash {\n  display: flex;\n  align-items: center;\n  padding: 8px;\n  margin-bottom: 8px;\n}\n\n.friend-photo-dash {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  margin-right: 10px;\n  object-fit: cover;\n}\n\n.friend-info-dash {\n  display: flex;\n  flex-direction: column;\n  margin-left: 10px;\n  flex: 1;\n}\n\n.friend-name-dash {\n  color: white;\n}\n\n.friend-msg-dash{\n  color: #d3d3d3;\n  font-size: 14px;\n  margin-top: 2px;\n}\n\n.friend-icons-dash {\n  display: flex;\n  gap: 5px;\n  margin-top: 5px;\n  margin-left: 10px;\n  margin-left: auto; \n}\n\n.icon-dash {\n  color: #BBFC52;\n  font-size: 15px;\n  cursor: pointer;\n}\n\n\n.icon-dash:hover{\n  color: #A9DB4C;\n}\n\n\n\n.history-item {\n  display: flex;\n  justify-content: space-between;\n  padding: 8px;\n}\n\n.rank-photo {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  margin-right: 10px;\n  object-fit: cover;\n  \n}\n\n\n\n.rank-name {\n  color: white;\n  flex-basis: 20%;\n}\n\n.rank-level {\n  color: #BBFC52;\n}\n\n.rank-item {\n  display: flex;\n  justify-content: space-between;\n  padding: 8px;\n}\n\n.game-photo-won{\n  margin-top: 10px;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  margin-right: 10px;\n  object-fit: cover;\n}\n\n\n.game-photo-lost{\n  margin-top: 8px;\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  margin-right: 10px;\n  object-fit: cover;\n}\n\n\n.last-game-name{\n  color: white;\n}\n\n.last-game-item,\n.rank-item,\n.friend-item-dash{\n  display: flex;\n  align-items: center;\n  padding: 10px;\n  margin-bottom: 8px;\n  background-color: #505468;\n  border-radius: 10px;\n}\n\n.last-game-item{\n  display: flex;\n  justify-content: space-between;\n  padding: 8px;\n}\n\n.last-game-result{\n color: #BBFC52;\n padding-top: 17px;\n}\n\n\n.dash-status-icon{\n  font-size: 11px;\n}\n\n"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/home/Home.js",
      "content": "import React, {useState, useEffect} from 'react';\nimport Banner from '../../components/Banner';\nimport './Home.css';\nimport Profileimg from './profile.jpg';\nimport { IoEllipse } from \"react-icons/io5\";\nimport { IoPersonOutline } from \"react-icons/io5\";\nimport { BsChatDots } from \"react-icons/bs\";\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../../context/AuthContext';\nimport axios from 'axios';\n\n\n\nconst Profile = () => {\n    const [listFriends, setListFriends] = useState([]);\n    useEffect(() => {\n      axios.get('http://localhost:8000/friends/allfriends/')\n          .then((response) => {\n              setListFriends(response.data);\n          })\n          .catch((err) => {\n              console.log(err);\n          });\n    },[]);\n\n    const lastGame = [\n      { id: 1,imgW: Profileimg, nameW: 'Bob', result: 'Won', imgL: Profileimg, nameL: 'Alice'},\n      { id: 2,imgW: Profileimg, nameW: 'Bob', result: 'Won', imgL: Profileimg, nameL: 'Alice'},\n      { id: 3,imgW: Profileimg, nameW: 'Bob', result: 'Won', imgL: Profileimg, nameL: 'Alice'},\n    ] \n\n    const gameRank = [\n      { id: 1, rank: '1', name: 'Alice', image: Profileimg,  level: 10.09},\n      { id: 2, rank: '2', name: 'Johnson', image: Profileimg,  level: 6.59},\n      { id: 3, rank: '3', name: 'Charlie', image: Profileimg,  level: 5.29},\n    ]\n\n    const navigate=useNavigate();\n    const { user } = useAuth();\n\n    // const handleFriendsDashClick =() =>{\n    //   navigate('/Friends')\n    // }\n    // const handleProfileFrDash =() =>{\n    //   navigate('/home/profileFriend')\n    // }\n    const handleChatFrDash =() =>{\n      navigate('/chat')\n    }\n\n    // console.log(\"***********************\")\n    // console.log(user.avatar)\n\n  return (\n    <div className=\"dashboard-container\">\n      <Banner />\n      <div className='search-profile'>\n        {/* Search Bar */}\n        {/* <div className=\"search-bar\">\n          <IoSearch className=\"search-icon\" />\n          <input type=\"text\" placeholder=\"Search...\" className=\"dash-text-search\"/>\n        </div> */}\n        {/* Profile Info */}\n        <div className=\"dashboard-profile\">\n          <img src={user ? user.avatar : ''} alt=\"Profile\" className=\"profile-photo-dash\" />\n          <div className=\"profile-details\">\n            <div className='profile-details-name'> {user ? user.username : ''} </div>\n            <div className='profile-details-lvl'>Level: 3.70</div>\n          </div>\n        </div>\n      </div>\n          {/* Game Modes */}\n          <div className='big-container'>\n          <h1 className='title-game-mode' >Game Modes</h1>\n          <div className=\"game-modes\">\n            <div className=\"game-mode\">\n              <div className='play-modes'>Solo practice</div>\n              <div><Link className=\"game-mode-button\" to={`/home/SoloPractice/`}><button>Start</button></Link></div>\n            </div>\n            <div className=\"game-mode\">\n              <div className='play-modes'>Challenge a friend </div>\n              <div><Link className=\"game-mode-button\" to={`/home/ChallengeAFriend/`}><button>Start</button></Link></div>\n            </div>\n            <div className=\"game-mode\">\n              <div className='play-modes'>Tournament</div>\n              <div><Link className=\"game-mode-button\" to={`/home/TournamentLocal/`}><button>Start</button></Link></div>\n            </div>\n            <div className=\"game-mode\">\n              <div className='play-modes'> Play online</div>\n              <div><Link className=\"game-mode-button\" to={`/home/Online/`}><button>Start</button></Link></div>\n            </div>\n          </div>\n          \n          <div className=\"game-rank-last\">\n          <div>\n            {/* Last Game */}\n            <h1 className='titles-dashboard'><div className='title-dash-last-game'>Last Game</div></h1>\n            <div className=\"last-game\">\n              <ul className='list-last-game'>\n                {lastGame.map(last =>(\n                  <li key={last.id} className=\"last-game-item\">\n                    <div className='last-game-profile-name'>\n                      <img src={last.imgW} alt=\"Last Game\" className=\"game-photo-won\"/>\n                      <span className='last-game-name'>{last.nameW}</span>\n                    </div>\n                    <span className='last-game-result'>{last.result}</span>\n                    <div className='last-game-profile-name'>\n                      <img src={last.imgL} alt=\"Last Game\" className=\"game-photo-lost\"/>\n                      <span className='last-game-name'>{last.nameL}</span>\n                    </div>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n\n          {/* {Game Rank} */}\n          <div>\n            <h1 className='titles-dashboard'><div className='title-dash'>Game Rank</div></h1>\n            <div className=\"game-rank\">\n              <ul className=\"game-rank-list\">\n                {gameRank.map(rank => (\n                  <li key={rank.id} className=\"rank-item\">\n                      <span className=\"rank-nb\">{rank.rank}</span>\n                      <img src={rank.image} alt={rank.name} className=\"rank-photo\" />\n                      <span className=\"rank-name\">{rank.name}</span>\n                      <span className=\"rank-level\">{rank.level}</span>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n          <div>\n            {/* Friends List */}\n            <h1 className='titles-dashboard'><div className='title-dash'>Friends</div></h1>\n            <div className=\"dashboard-friends\">\n              <ul className='dashboard-friends-list'>\n                {listFriends.map(friend => (\n                  <li key={friend.id} className=\"friend-item-dash\">\n                    <img src={friend.avatar} alt={friend.username} className=\"friend-photo-dash\" />\n                    <div className=\"friend-info-dash\">\n                      <span className='friend-name-dash'>{friend.username}</span>\n                      <div className='friend-msg-dash'>\n                      <IoEllipse \n                      style={{ \n                        color: friend.status === 'Online' ? '#BBFC52' : '#E84172' \n                      }} \n                      className=\"dash-status-icon\" \n                    />\n                      <span>{friend.status}</span>\n                      </div>\n                    </div>\n                    <div className=\"friend-icons-dash\">\n                      <Link className=\"icon-dash\" to={`/home/${friend.id}`}><IoPersonOutline /></Link>\n                      <Link className=\"icon-dash\" onClick={handleChatFrDash}><BsChatDots /></Link>\n                    </div>\n                  </li>\n                ))}\n              </ul>\n              {/* <div className=\"all-friends-dash\" onClick={handleFriendsDashClick}><div className=\"text-all-friends-dash\">All Friends</div></div> */}\n            </div>\n\n          </div>\n          </div>\n\n      </div>\n\n    </div>\n  );\n};\n\nexport default Profile;"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/logout/Logout.js",
      "content": "import { useEffect, useRef } from 'react'; \nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../../context/AuthContext';\nimport { useNotification } from '../../context/NotificationContext';\n\nconst Logout = () => {\n  const { addNotification } = useNotification();\n  const { logout } = useAuth();\n  const navigate = useNavigate();\n  const isLoggingOut = useRef(false);\n\n  useEffect(() => {\n    if (!isLoggingOut.current) {\n      isLoggingOut.current = true;\n      logout();\n      addNotification(\"Successfully logged out\", \"success\");\n      navigate('/signIn');\n    }\n  }, [logout, navigate, addNotification]);\n\n  return null;\n};\n\nexport default Logout;"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/profile/Profile.css",
      "content": ".titles-profile{\n    font-size: 20px;\n    color: white;\n    font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}\n\n.title-profile{\n  padding-left: 85px;\n  font-size: 20px;\n  color: white;\n  font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}\n\n.content-profile {\n  margin-top: 20px;\n  margin-left: 40px;\n}\n\n\n.info-profile {\n  margin-left: 90px;\n  margin-top: 20px;\n  width: 800px;\n  background-color: #636987;\n  height: 200px;\n  border-radius: 17px;\n  box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.3);\n}\n\n\n.infos {\n  display: flex;\n  justify-content: space-between;\n  margin-top: 50px;\n}\n\n\n.info-group {\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n}\n\n.info-friends,\n.info-history,\n.info-achievement {\n  width: 300px;\n  max-width: 300px;\n  height: 400px;\n  background-color: #636987;\n  border-radius: 17px;\n  margin-top: 10px;\n}\n\n.profile-photo{\n  width: 80px;\n  height: 80px;\n  border-radius: 50%;\n  object-fit: cover;\n  margin-top: 20px;\n  margin-left: 150px;\n\n}\n\n.user-name{\n  display: flex;\n}\n\n.name-status{\n  align-items: center;\n  gap: 8px;\n  color: white;\n  margin-top: 40px;\n  margin-left: 30px;\n  font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}\n\n.status {\n  display: flex;\n  align-items: center;\n  color: #d3d3d3;\n  gap: 4px;\n}\n\n.profile-status-icon {\n  color: #BBFC52;\n  font-size: 12px;\n}\n\n.level{\n  margin-top: 20px;\n  padding-left: 80px;\n}\n\n.level-bar {  \n  width: 560px;\n  height: 27px;\n  background-color: #d3d3d3;\n  border-radius: 17px;\n  border: 0.5 solid white;\n}\n\n.level-fill {\n  height: 100%;\n  background-color: #BBFC52;\n  border-radius: 17px;\n}\n\n.my-level{\n  padding-top: 6px;\n  padding-left: 8px;\n  color: #636987;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}\n\n.edit{\n  margin-left: 600px;\n  width: 70px;\n  background-color: #E84172;\n  height: 26px;\n  border-radius: 15px;\n  border: 0.5px solid #3F4054;\n  cursor: pointer;\n}\n\n.edit:hover{\n  background-color: #d1406c;\n  border-color: #4c0419;\n}\n\n.text-edit{\n  padding-top: 4px;\n  color: rgb(242, 219, 219);\n  padding-left: 20px;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n\n}\n\n.friends-list {\n  list-style: none;\n  padding: 10px;\n  margin: 0;\n  max-height: 360px;\n  overflow-y: auto;\n  color: white;\n  font-size: 16px;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}\n\n.friend-item {\n  display: flex;\n  align-items: center;\n  padding: 8px;\n  margin-bottom: 8px;\n}\n\n.friend-photo {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  margin-right: 10px;\n  object-fit: cover;\n}\n\n.friend-details {\n  display: flex;\n  flex-direction: column;\n  margin-left: 10px;\n  flex: 1;\n}\n\n.friend-name {\n  color: white;\n}\n\n.friend-message{\n  color: #d3d3d3;\n  font-size: 14px;\n  margin-top: 4px;\n}\n\n.friend-icons {\n  display: flex;\n  gap: 5px;\n  margin-top: 5px;\n  margin-left: 10px;\n  margin-left: auto; \n}\n\n.icon {\n  color: #BBFC52;\n  font-size: 15px;\n  cursor: pointer;\n}\n\n.icon:hover{\n  color: #A9DB4C;\n}\n\n.history-list {\n  list-style: none;\n  padding: 10px;\n  margin: 0;\n  max-height: 360px;\n  overflow-y: auto;\n  color: white;\n  font-size: 16px;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}\n\n.achievement-list {\n  list-style: none;\n  padding: 10px;\n  margin: 0;\n  max-height: 360px;\n  overflow-y: auto;\n  color: white;\n  font-size: 16px;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}\n.history-item {\n  display: flex;\n  justify-content: space-between;\n  padding: 8px;\n}\n\n.history-profile {\n  width: 40px;\n  height: 40px;\n  border-radius: 50%;\n  margin-right: 10px;\n  object-fit: cover;\n  margin-top: 2px;\n  \n}\n\n/* .history-result {\n  padding-top: 15px;\n  color: #BBFC52;\n  flex-basis: 20%;\n} */\n\n/* .history-level {\n  padding-top: 13px;\n  color: white;\n} */\n\n\n\n.achievement-item {\n  padding-left: 20px;\n  display: flex;\n  align-items: center;\n  /* margin: 10px 0; */\n}\n\n.achievement-icon {\n  font-size: 30px;\n  color: #D8FD62;\n  margin-right: 10px;\n}\n\n.achievement-details {\n  display: flex;\n  flex-direction: column;\n}\n\n.achievement-title {\n  list-style: none;\n  padding: 10px;\n  max-height: 350px;\n  overflow-y: auto;\n  color: white;\n  font-size: 16px;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}\n\n.achievement-description {\n  color: #d3d3d3;\n  font-size: 14px;\n  margin-top: 4px;\n}\n\n.all-friends-button:hover{\n  background-color: #d1406c;\n  border-color: #4c0419;\n}\n\n\n.friend-item,\n.achievement-item,\n.history-item{\n  display: flex;\n  align-items: center;\n  padding: 10px;\n  margin-bottom: 8px;\n  background-color: #505468;\n  border-radius: 10px;\n}\n\n.profile-status-icon{\n  font-size: 11px;\n}\n         "
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/profile/Profile.js",
      "content": "import React, { useState, useEffect } from 'react';\nimport Banner from '../../components/Banner';\nimport './Profile.css';\nimport Profileimg from './profile.jpg';\nimport { Link, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../../context/AuthContext';\n// import Imgp from './imgp.jpg';\n\nimport { IoPersonOutline } from \"react-icons/io5\";\nimport { BsChatDots } from \"react-icons/bs\";\nimport { IoEllipse } from \"react-icons/io5\";\n\nimport { FaMedal, FaTrophy, FaStar } from 'react-icons/fa';\nimport axios from 'axios';\n// import { Outlet } from 'react-router-dom';\n\nconst Profile = () => {\n    const [listFriends, setListFriends] = useState([]);\n    useEffect(() => {\n      axios.get('http://localhost:8000/friends/allfriends/')\n          .then((response) => {\n              setListFriends(response.data);\n          })\n          .catch((err) => {\n              console.log(err);\n          });\n  },[]);\n\n    const gameHistory = [\n      { id: 1, img: Profileimg, result: 'Win', level: '5.00'},\n      { id: 2, img: Profileimg, result: 'Lose', level: '4.50'},\n      { id: 3, img: Profileimg, result: 'Win', level: '5.00'},\n      { id: 4, img: Profileimg, result: 'Lose', level: '3.80'},\n      { id: 5, img: Profileimg, result: 'Win', level: '4.20'}\n    ];\n\n    const achievements = [\n      { id: 1, icon: <FaMedal />, title: 'First Win', description: 'Won your first game!' },\n      { id: 2, icon: <FaTrophy />, title: 'Level 10', description: 'Reached level 10.' },\n      { id: 3, icon: <FaStar />, title: 'MVP', description: 'Awarded Most Valuable Player in 3 games.' },\n      { id: 4, icon: <FaMedal />, title: '10 Games Played', description: 'Participated in 10 games.' }\n    ];\n\n  const navigate = useNavigate();\n  const { user } = useAuth();\n\n  const handleEditClick = () => {\n    navigate('/settings');\n  }\n\n  return (  \n    <div>\n      <Banner />\n      <div className=\"content-profile\">\n          <h1 className='title-profile'>Profile</h1>\n            <div className=\"info-profile\">\n              <div className=\"user-name\"> \n                <img src={user ? user.avatar : ''} alt='Profileimg' className=\"profile-photo\"/>\n                <div className=\"name-status\">\n                  {user ? user.username : 'Loading'}  \n                  <div className=\"status\">\n                  <IoEllipse className=\"profile-status-icon\"/><span>{user ? user.status : 'Loading'}</span>\n                  </div>\n                </div>              \n              </div>\n              <div className=\"level\">\n                <div className=\"level-bar\">\n                <div className=\"level-fill\" style={{ width: '70%' }}> <div className=\"my-level\">lvl: 3.70 </div></div>\n              </div>\n                <div className=\"edit\" onClick={handleEditClick}>\n                  <div className=\"text-edit\">Edit</div>\n                </div>\n            </div>\n            </div>\n        <div className=\"infos\">\n          <div className=\"info-group\">\n            <h1 className='titles-profile'>Friends</h1>\n            <div className=\"info-friends\">\n              <ul className=\"friends-list\">\n              {listFriends.map(friend => (\n                  <li key={friend.id} className=\"friend-item\">\n                    <img src={friend.avatar} alt={friend.username} className=\"friend-photo\" />\n                    <div className=\"friend-details\">\n                      <span className=\"friend-name\">{friend.username}</span>\n                      <div className=\"friend-message\">\n                        <IoEllipse \n                        style={{ \n                          color: friend.status === 'Online' ? '#BBFC52' : '#E84172' \n                        }} \n                        className=\"profile-status-icon\" \n                      />\n                        <span>{friend.status}</span>\n                      </div>\n                    </div>\n                    <div className=\"friend-icons\">\n                        <Link className=\"icon\" to={`/profile/${friend.id}`}>< IoPersonOutline /></Link>\n                        <Link className=\"icon\" to={`/chat`}><BsChatDots /></Link>\n                    </div>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n          <div className=\"info-group\">\n            <h1 className='titles-profile'>History</h1>\n            <div className=\"info-history\">\n              <ul className=\"history-list\">\n                {gameHistory.map(game => (\n                  <li key={game.id} className=\"history-item\">\n                    <img src={game.img} alt=\"Game History\" className=\"history-profile\" />\n                    <span\n                      className=\"history-result\"\n                      style={{ color: game.result === 'Win' ? '#D8FD62' : '#E84172' }}>\n                      {game.result}\n                    </span>\n                    <span className=\"history-level\">Level: {game.level}</span>\n                  </li>\n                ))}\n              </ul>\n            </div>\n          </div>\n          <div className=\"info-group\">\n            <h1 className='titles-profile'>Achievement</h1>\n            <div className=\"info-achievement\">\n              <ul className=\"achievement-list\">\n                  {achievements.map(achievement => (\n                    <li key={achievement.id} className=\"achievement-item\">\n                      <span className=\"achievement-icon\">{achievement.icon}</span>\n                      <div className=\"achievement-details\">\n                        <span className=\"achievement-title\">{achievement.title}</span>\n                        <span className=\"achievement-description\">{achievement.description}</span>\n                      </div>\n                    </li>\n                  ))}\n                </ul>\n                {/* <div className=\"all-achievement-button\" onClick={handleAllAchievementsClick}><div className=\"text-all-achievement\">All Achievement</div></div> */}\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </div>\n  );\n};\n\nexport default Profile;\n"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/settings/Settings.css",
      "content": ".content-settings {\n  min-height: 100vh;\n}\n\n.account-settings {\n  padding: 20px 40px;\n}\n\n.settings-header {\n  margin-bottom: 30px;\n}\n\n.settings-title {\n  color: white;\n  font-size: 24px;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}\n\n.settings-container {\n  background-color: #636987;\n  border-radius: 20px;\n  padding: 30px;\n  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);\n}\n\n.profile-image-section {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  margin-bottom: 40px;\n}\n\n.profile-image-wrapper {\n  margin-top: 30px;\n  position: relative;\n  width: 120px;\n  height: 120px;\n  margin-bottom: 15px;\n}\n\n.profile-image {\n  width: 100%;\n  height: 100%;\n  border-radius: 50%;\n  object-fit: cover;\n  border: 3px solid #BBFC52;\n}\n\n.image-overlay {\n  position: absolute;\n  bottom: 0;\n  right: 0;\n}\n\n.change-photo-btn {\n  background-color: #BBFC52;\n  border: none;\n  border-radius: 50%;\n  width: 36px;\n  height: 36px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  cursor: pointer;\n  transition: background-color 0.3s;\n}\n\n.camera-icon {\n  color: #3F4054;\n  font-size: 20px;\n}\n\n.remove-photo-btn {\n  display: flex;\n  align-items: center;\n  gap: 3px;\n  background: none;\n  border: none;\n  color: #E84172;\n  cursor: pointer;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}\n\n.remove-icon {\n  font-size: 18px;\n}\n\n.settings-grid {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  gap: 30px;\n  margin-bottom: 30px;\n}\n\n.settings-section {\n  background-color: #3F4054;\n  border-radius: 15px;\n  padding: 25px;\n}\n\n.section-title-profile{\n  display: flex;\n}\n\n.section-header {\n  /* display: flex; */\n  align-items: center;\n  gap: 10px;\n  margin-bottom: 25px;\n}\n\n.section-icon {\n  color: #BBFC52;\n  font-size: 24px;\n}\n\n.titles-update {\n  color: white;\n  font-size: 20px;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n  margin: 0;\n}\n\n.input-group {\n  display: flex;\n  flex-direction: column;\n  gap: 20px;\n}\n\n.settings-input {\n  background-color: #636987;\n  border: 1px solid transparent;\n  border-radius: 17px;\n  padding: 12px 15px;\n  color: white;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n  transition: all 0.3s;\n}\n\n.settings-input:focus {\n  border-color: #BBFC52;\n  outline: none;\n  background-color: #575d77;\n}\n\n.settings-input::placeholder {\n  color: #a0a0a0;\n}\n\n.security-section {\n  margin-top: 30px;\n  padding: 20px;\n  background-color: #575d77;\n  border-radius: 12px;\n}\n\n.security-header {\n  display: flex;\n  align-items: center;\n  gap: 10px;\n  margin-bottom: 15px;\n}\n\n.security-icon {\n  color: #BBFC52;\n  font-size: 22px;\n}\n\n.two-fa-toggle {\n  background-color: #E84172;\n  color: white;\n  border: none;\n  border-radius: 20px;\n  padding: 8px 20px;\n  cursor: pointer;\n  transition: all 0.3s;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}\n\n.two-fa-toggle.enabled {\n  background-color: #BBFC52;\n  color: #3F4054;\n}\n\n.settings-actions {\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  /* margin-top: 10px; */\n}\n\n.save-settings-btn {\n  margin-left: 250px;\n  background-color: #BBFC52;\n  color: #3F4054;\n  border: none;\n  border-radius: 20px;\n  padding: 12px 30px;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n  margin-bottom: 50px;\n}\n\n.save-settings-btn:hover {\n  background-color: #A9DB4C;\n}\n\n/* .delete-account-btn {\n  display: flex;\n  align-items: center;\n  gap: 8px;\n  background-color: #E84172;\n  color: white;\n  border: none;\n  border-radius: 20px;\n  padding: 12px 25px;\n  font-size: 16px;\n  cursor: pointer;\n  transition: background-color 0.3s;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}\n\n.delete-account-btn:hover {\n  background-color: #d1406c;\n} */\n\n.warning-icon {\n  font-size: 18px;\n}\n\n/* @media (max-width: 1024px) {\n  .settings-grid {\n    grid-template-columns: 1fr;\n  }\n} */\n\n.qr-section {\n  margin-top: 20px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n  padding: 20px;\n  background-color: #3F4054;\n  border-radius: 15px;\n}\n\n.qr-container {\n  padding: 20px;\n  background-color: white;\n  border-radius: 10px;\n}\n\n.qr-code {\n  width: 200px;\n  height: 200px;\n}\n\n.verification-section {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  gap: 15px;\n  align-items: center;\n}\n\n.verification-input {\n  width: 200px;\n  background-color: #636987;\n  border: 1px solid transparent;\n  border-radius: 10px;\n  padding: 12px 15px;\n  color: white;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n  text-align: center;\n  letter-spacing: 2px;\n}\n\n.verification-input:focus {\n  border-color: #BBFC52;\n  outline: none;\n  background-color: #575d77;\n}\n\n.verify-button, .cancel-button {\n  width: 120px;\n  padding: 10px;\n  border: none;\n  border-radius: 20px;\n  cursor: pointer;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n  transition: background-color 0.3s;\n}\n\n.verify-button {\n  background-color: #BBFC52;\n  color: #3F4054;\n}\n\n.verify-button:hover {\n  background-color: #A9DB4C;\n}\n\n.cancel-button {\n  background-color: #E84172;\n  color: white;\n}\n\n.cancel-button:hover {\n  background-color: #d1406c;\n}\n\n.error-message {\n  color: #E84172;\n  font-size: 14px;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n  margin-top: 10px;\n  text-align: center;\n}\n\n.setting-message{\n  padding-left: 10px;\n  font-size: 18px;\n  font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n  /* margin-top: 10px; */\n}\n\n/* Modal styles */\n.modal-overlay {\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n  background-color: rgba(0, 0, 0, 0.5);\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 1000;\n}\n\n.modal-content {\n  background-color: white;\n  padding: 20px;\n  border-radius: 8px;\n  position: relative;\n  max-width: 90%;\n  max-height: 90%;\n  overflow-y: auto;\n}\n\n.modal-close {\n  position: absolute;\n  top: 10px;\n  right: 10px;\n  background: none;\n  border: none;\n  font-size: 24px;\n  cursor: pointer;\n}\n\n/* QR code styles */\n.qr-section {\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  gap: 20px;\n}"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/settings/Settings.js",
      "content": "import React, { useState } from 'react';\nimport Banner from '../../components/Banner';\nimport TwoFactorAuth from '../../components/TwoFactorAuth';\nimport './Settings.css';\nimport { MdPhotoCamera } from \"react-icons/md\";\nimport { IoClose } from \"react-icons/io5\";\nimport { FaUserEdit } from \"react-icons/fa\";\nimport { RiLockPasswordLine } from \"react-icons/ri\";\nimport { useAuth } from '../../context/AuthContext';\nimport axios from 'axios';\n\nconst Settings = () => {\n  const [avatar, setAvatar] = useState(null);\n  const [username, setUsername] = useState('');\n  const [currentPassword, setCurrentPassword] = useState('');\n  const [newPassword, setNewPassword] = useState('');\n  const [confimPassword, setConfimPassword] = useState('');\n  const [email, setEmail] = useState('');\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [errorp, setErrorp] = useState('');\n  const [successp, setSuccessp] = useState('');\n  const [removeAvatar, setRemoveAvatar] = useState(false);\n  const { setUser ,user} = useAuth();\n  axios.defaults.withCredentials = true;\n\n  \n\n  const handleImageChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      document.getElementById('file-input')\n      setAvatar(file);\n      setRemoveAvatar(false);\n    }\n  };\n\n  const triggerFileInput = () => {\n    document.getElementById('file-input').click();\n  };\n\n  const removeImage = () => {\n    setRemoveAvatar(true)\n    setAvatar(null)\n  };\n\n\n  const saveProfileChanges = async () => {\n    const formData = new FormData();\n    formData.append('email', email);\n    formData.append('username', username);\n    formData.append('avatar', avatar);\n    formData.append('removeAvatar', removeAvatar ? 'yes' : 'no');\n    setError('');\n    setSuccess('');\n    setErrorp('');\n    setSuccessp('');\n  \n    try{\n      await axios.put(`http://localhost:8000/api/profile/update/`, formData );\n      setSuccess('Profile details updated successfully.');\n      setUsername('');\n      setEmail('');\n      setAvatar(null);\n  \n      const userResponse = await axios.get('http://localhost:8000/api/infoUser/');\n      setUser(userResponse.data);\n      console.log(userResponse.data);\n    }\n    catch (err){\n      if (err.response){\n        const errorMsg = err.response.data.error;\n        setError(errorMsg);\n      }\n      else{\n        setError('An error occurred: ' + err.message);\n      }\n    }\n  };\n\n  const savePasswordChanges = () => {\n    setError('');\n    setSuccess('');\n    setErrorp('');\n    setSuccessp('');\n  \n    axios.get(`http://localhost:8000/api/checkloginmethod/`)\n      .then((response) => {\n        const { status } = response.data;\n  \n        if (status === 'ok') {\n          setErrorp('You cannot change when logged by Intra.');\n        } else {\n          axios.put(`http://localhost:8000/api/profile/password/`, {\n            currentPassword,\n            newPassword,\n            confimPassword\n          })\n            .then(() => {\n              setSuccessp('Password changed successfully.');\n              setCurrentPassword('');\n              setNewPassword('');\n              setConfimPassword('');\n            })\n            .catch((err) => {\n              if (err.response) {\n                const status = err.response.status;\n                const errorMsg = err.response.data.error || 'An unknown error occurred.';\n  \n                if (status === 400) {\n                  setErrorp(errorMsg);\n                } else {\n                  setErrorp('Server error. Please try again later.');\n                }\n              } else if (err.request) {\n                setErrorp('No response from the server. Please check your connection.');\n              } else {\n                setErrorp(`An error occurred: ${err.message}`);\n              }\n            });\n        }\n      })\n      .catch((err) => {\n        setErrorp('Could not verify login method. Please try again later.');\n        console.error(err);\n      });\n  };\n  return (\n    <div className=\"content-settings\">\n      <Banner />\n      <div className=\"account-settings\">\n        <div className=\"settings-header\">\n          <h1 className=\"settings-title\">Account Settings</h1>\n        </div>\n        <div className=\"settings-container\">\n\n          <div className=\"settings-grid\">\n            <div className=\"settings-section\">\n              <div className=\"section-header\">\n                <div className='section-title-profile'>\n                  <FaUserEdit className=\"section-icon\" />\n                  <p className='titles-update'>Update Profile</p>\n                </div>\n                <div className=\"profile-image-section\">\n                  <div className=\"profile-image-wrapper\">\n                    <img src={avatar ? URL.createObjectURL(avatar) : user.avatar} alt=\"Profile\" className=\"profile-image\" />\n                    <div className=\"image-overlay\">\n                      <input \n                        type=\"file\" \n                        id=\"file-input\" \n                        onChange={handleImageChange} \n                        className=\"file-input\" \n                        style={{ display: 'none' }} \n                      />\n                      <button className=\"change-photo-btn\" onClick={triggerFileInput}>\n                        <MdPhotoCamera className=\"camera-icon\" />\n                      </button>\n                    </div>\n                  </div>\n                  <button className=\"remove-photo-btn\" onClick={removeImage}>\n                    <IoClose className=\"remove-icon\" />\n                    Remove\n                  </button>\n                </div>\n              </div>\n              <div className=\"input-group\">\n                <input\n                  type=\"email\"\n                  placeholder=\"Email\"\n                  value={email}\n                  onChange={(e) => setEmail(e.target.value)}\n                  className=\"settings-input\"\n                />\n                <input\n                  type=\"text\"\n                  placeholder=\"Username\"\n                  value={username}\n                  onChange={(e) => setUsername(e.target.value)}\n                  className=\"settings-input\"\n                  />\n                  <div className='setting-message'>\n                  {error && <p style={{ color: '#E84172' }}>{error}</p>}\n                  {success && <p style={{ color: '#BBFC52' }}>{success}</p>}\n                  </div>\n                <div className=\"settings-actions\">\n                  <button className=\"save-settings-btn\" onClick={saveProfileChanges}>\n                    Save Changes\n                  </button>\n                </div>\n              </div>\n\n            </div>\n\n            <div className=\"settings-section\">\n              <div className=\"section-header\">\n              <div className='section-title-profile'>\n                <RiLockPasswordLine className=\"section-icon\" />\n                <p className='titles-update'> Change Password</p>\n              </div>\n              </div>\n              <div className=\"input-group\">\n                <input\n                  type=\"password\"\n                  placeholder=\"Current Password\"\n                  value={currentPassword}\n                  onChange={(e) => setCurrentPassword(e.target.value)}\n                  className=\"settings-input\"\n                />\n                <input\n                  type=\"password\"\n                  placeholder=\"New Password\"\n                  value={newPassword}\n                  onChange={(e) => setNewPassword(e.target.value)}\n                  className=\"settings-input\"\n                />\n                <input\n                  type=\"password\"\n                  placeholder=\"Confirm New Password\"\n                  value={confimPassword}\n                  onChange={(e) => setConfimPassword(e.target.value)}\n                  className=\"settings-input\"\n                />\n                <div className='setting-message'>\n                {errorp && <p style={{ color: '#E84172' }}>{errorp}</p>}\n                {successp && <p style={{ color: '#BBFC52' }}>{successp}</p>}\n                </div>\n                <div className=\"settings-actions\">\n                  <button className=\"save-settings-btn\" onClick={savePasswordChanges}>\n                    Save Changes\n                  </button>\n                </div>\n              </div>\n              <TwoFactorAuth />\n            </div>\n          </div>\n\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Settings;"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/signin/AuthUtils.js",
      "content": "import axios from 'axios'\n\nexport const handleLogin42 = () => {\n  axios({\n    method: 'GET',\n    url: 'http://localhost:8000/api/auth/42/login/',\n    withCredentials: true,\n  })\n  .then((response) => {\n    const { auth_url } = response.data;\n    if (auth_url) {\n        window.location.href = auth_url;\n      } else {\n        console.error('Authorization URL not provided by the backend');\n      }\n    })\n    .catch((error) => {\n      \n      console.error('Error during 42 login:', error.message || error);\n    });\n};\n\nexport const verify2FACode = async (userId, code) => {\n  try {\n    const response = await axios.post('http://localhost:8000/api/verify-login-2fa/', \n      {\n        user_id: userId,\n        code: code\n      },\n      {\n        withCredentials: true,\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      }\n    );\n    return response.data;\n  } catch (error) {\n    throw new Error(error.response?.data?.error || 'Verification failed');\n  }\n};"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/signin/LoginCallback.js",
      "content": "import React, { useEffect, useState } from 'react';\nimport { useLocation, useNavigate } from 'react-router-dom';\nimport { useAuth } from '../../context/AuthContext';\nimport { useNotification } from '../../context/NotificationContext';\n\n// OAuth response\n\nconst LoginCallback = () => {\n  const location = useLocation();\n  const navigate = useNavigate();\n  const { setIslog } = useAuth();\n  const { addNotification } = useNotification();\n  const [processed, setProcessed] = useState(false);\n\n  useEffect(() => {\n    if (!processed) {\n      const searchParams = new URLSearchParams(location.search);\n      const status = searchParams.get('status');\n\n      const timer = setTimeout(() => {\n        if (status === 'success') {\n          setIslog(true);\n          addNotification(\"Successfully logged in with 42!\", \"success\");\n          setTimeout(() => navigate('/home'), 100); \n        } else if (status === 'failed'  ) {\n          addNotification(\"Login failed\", \"error\");\n          console.error('Login failed');\n          setTimeout(() => navigate('/signIn'), 100);\n        } else {\n          addNotification(\"Unexpected login response\", \"error\");\n          console.warn('Unexpected status:', status);\n          setTimeout(() => navigate('/signIn'), 100);\n        }\n        setProcessed(true);\n      }, 100);\n\n      return () => clearTimeout(timer);\n    }\n  }, [location, navigate, setIslog, addNotification, processed]);\n\n  return (\n    <div className=\"flex items-center justify-center p-4\">\n      <div className=\"text-lg\">Processing login...</div>\n    </div>\n  );\n};\n\nexport default LoginCallback;"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/signin/SignIn.css",
      "content": ".sin-container {\n    width: 1280px;\n    height: 1080px;\n    margin: 0 auto;\n    overflow: hidden;\n    border-radius: 4px;\n    background-color: #3F4054;\n  }\n  \n  \n\n.sin-container-content{\n    width: 400px;\n    height: 450px;\n    margin-left: 380px;\n    margin-top: 60px;\n    background-color: #636987;\n    border-radius: 17px;\n    padding-top: 90px;\n    padding-left: 80px;\n} \n\n\n.sin-title-welcome{\n    padding-left: 80px; \n    font-size: 20px;\n    color: white;\n    font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}\n\n.sin-input{\n    padding-top: 80px;\n    background-color: transparent;\n    width: 300px;\n    margin-top: 30px;\n    padding: 10px;\n    border-radius: 17px;\n    border: 0.5px solid rgb(255, 255, 255);\n    color: white;\n    font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}\n\n.sin-button-login{\n    width: 120px;\n    height: 30px;\n    background-color: #BBFC52;\n    color: rgb(98, 89, 89);\n    margin-top: 30px;\n    margin-left: 100px;\n    border-radius: 17px;\n    cursor: pointer;\n    font-size: 16px;\n    border: 0.5px solid rgb(255, 255, 255);\n    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}\n\n.sin-button-login:hover{\n    background-color: #A9DB4C;\n    border-color: #3F4054;\n}\n\n.sin-create-account{\n    padding-left: 70px;\n    display: flex;\n    padding-top: 30px;\n    color:white;\n    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n    cursor: pointer;\n}\n\n.sin-create-account-button{\n    padding-left: 15px;\n    background-color: transparent;\n    color:#BBFC52\n}\n\n.sin-create-account-button:hover{\n    color: #A9DB4C;\n\n}\n\n\n.sin-login-intra{\n    padding-top: 8px;\n    padding-left: 4px;\n    font-size: 30px;\n}\n\n.sin-login-by{\n    display: flex;\n    align-items: center;\n    background-color: white;\n    margin-top: 30px;\n    margin-left: 140px;\n    width: 40px;\n    height: 40px;\n    border-radius: 50%;\n    border: 0.5px solid rgb(255, 255, 255);\n    cursor: pointer;\n}\n.sin-login-by:hover{\n    background-color:#3F4054;\n}\n\n.sin-text-or{\n    color: white;\n    padding-top: 20px;\n    padding-left: 150px;\n    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}\n\n\n.sin-input::placeholder {\n    color: #BBBBBB;\n    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n  }\n  \n\n  .sin-input:focus {\n    border-color: #BBFC52;\n    background-color: #3F4054;\n    color: #FFFFFF;\n    outline: none;\n    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n  }\n  .sin-error{\n    color: #a40935;\n    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n  }"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/signin/SignIn.js",
      "content": "import React, { useState } from 'react';\nimport Banner from '../../components/Banner';\nimport './SignIn.css';\nimport { Si42 } from \"react-icons/si\";\nimport { useNavigate } from 'react-router-dom';\nimport { handleLogin42 } from './AuthUtils';\nimport { useAuth } from '../../context/AuthContext'; // Import useAuth hook\nimport { useNotification } from '../../context/NotificationContext';\n\n\nconst SignIn = () => {\n  const { login } = useAuth(); // Use the login function from AuthContext\n  const { addNotification } = useNotification(); \n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const navigate = useNavigate();\n\n  const handleSubmit = async (e) => \n  {\n    e.preventDefault();\n    if (!email || !password)\n      {\n        addNotification(\"Please fill in all fields\", \"warning\");\n        return;\n      } \n  \n    try \n    {\n      const response = await login(email, password);\n      setError('');\n      if (response.requires2FA) \n      {\n        addNotification(\"Please enter your 2FA code\", \"info\");\n        navigate(`/verify-2fa?user_id=${response.user_id}`);\n      } \n      else \n      {\n        addNotification(\"Successfully logged in!\", \"success\");\n        navigate('/home');\n      }\n    } \n    catch (err) \n    {\n      addNotification(\"Login failed. Please check your credentials.\", \"error\");\n    }\n  };\n\n  const handleClickCreateAccount = () => \n  {\n    navigate('/signUp');\n  };\n\n  const handleOAuthLogin = () => {\n    addNotification(\"Redirecting to 42 login...\", \"info\");\n    handleLogin42()\n      .then((response) => {\n        const { auth_url } = response.data;\n        if (auth_url) {\n          window.location.href = auth_url;\n        }\n      })\n      .catch((error) => {\n        addNotification(\"Failed to connect to 42 login\", \"error\");\n      });\n  };\n\n  return (\n    <div className='sin-container'>\n      <div className='sin-banner'><Banner /></div>\n      <div className='sin-container-content'>\n        <div className='sin-title-welcome'>Welcome Back</div>\n        <form onSubmit={handleSubmit}>\n          <div>\n            <input\n              type=\"email\"\n              placeholder=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              className='sin-input'\n            />\n          </div>\n          <div>\n            <input\n              type=\"password\"\n              placeholder=\"Password\"\n              value={password}\n              onChange={(e) => setPassword(e.target.value)}\n              className='sin-input'\n            />\n          </div>\n          {error && <p className='sin-error'>{error}</p>}\n          <div><button type=\"submit\" className='sin-button-login'>Login</button></div>\n          <div className=\"sin-create-account\">\n            <div>Don't have an account?</div>\n            <div onClick={handleClickCreateAccount} className=\"sin-create-account-button\">Sign up</div>\n          </div>\n          <div className=\"sin-text-or\">Or</div>\n          <div className=\"sin-login-by\">\n            <div className=\"sin-login-intra\" onClick={handleOAuthLogin }><Si42 /></div>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n};\n\nexport default SignIn;\n\n\n\n"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/signin/SignUp.css",
      "content": ".sup-container {\n    width: 1280px;\n    height: 1080px;\n    margin: 0 auto;\n    overflow: hidden;\n    border-radius: 4px;\n    background-color: #3F4054;\n  }\n  \n  \n\n.sup-container-content{\n    width: 400px;\n    height: 600px;\n    margin-left: 380px;\n    margin-top: 60px;\n    background-color: #636987;\n    border-radius: 17px;\n    padding-top: 90px;\n    padding-left: 80px;\n} \n\n\n.sup-title-welcome{\n    padding-left: 80px; \n    font-size: 20px;\n    color: white;\n    font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}\n\n.sup-input{\n    padding-top: 80px;\n    background-color: transparent;\n    width: 300px;\n    margin-top: 30px;\n    padding: 10px;\n    border-radius: 17px;\n    border: 0.5px solid rgb(255, 255, 255);\n    color: white;\n    font-family:'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}\n\n.sup-button-login{\n    width: 120px;\n    height: 30px;\n    background-color: #BBFC52;\n    color: rgb(98, 89, 89);\n    margin-top: 30px;\n    margin-left: 100px;\n    border-radius: 17px;\n    cursor: pointer;\n    font-size: 16px;\n    border: 0.5px solid rgb(255, 255, 255);\n    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}\n\n.sup-button-login:hover{\n    background-color: #A9DB4C;\n    border-color: #3F4054;\n}\n\n.sup-create-account{\n    padding-left: 70px;\n    display: flex;\n    padding-top: 30px;\n    color:white;\n    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}\n\n.sup-create-account-button{\n    padding-left: 15px;\n    background-color: transparent;\n    color:#BBFC52;\n    cursor: pointer;\n}\n\n.sup-create-account-button:hover{\n    color: #A9DB4C;\n\n}\n\n\n.sup-login-intra{\n    \n    padding-top: 8px;\n    padding-left: 4px;\n    font-size: 30px;\n}\n\n.sup-login-by{\n    display: flex;\n    align-items: center;\n    background-color: white;\n    margin-top: 30px;\n    margin-left: 140px;\n    width: 40px;\n    height: 40px;\n    border-radius: 50%;\n    border: 0.5px solid rgb(255, 255, 255);\n    cursor: pointer;\n}\n\n.sup-text-or{\n    color: white;\n    padding-top: 20px;\n    padding-left: 150px;\n    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}\n\n\n.sup-input::placeholder {\n    color: #BBBBBB;\n    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n  }\n  \n\n  .sup-input:focus {\n    border-color: #BBFC52;\n    background-color: #3F4054;\n    color: #FFFFFF;\n    outline: none;\n    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n}\n\n.sup-error{\n    color: #a40935;\n    font-family: 'Gill Sans', 'Gill Sans MT', Calibri, 'Trebuchet MS', sans-serif;\n  }\n.sup-login-by:hover{\n    background-color:#3F4054;\n}\n"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/pages/signin/SignUp.js",
      "content": "import React, { useState } from 'react';\nimport Banner from '../../components/Banner';\nimport './SignUp.css'\nimport { Si42 } from \"react-icons/si\";\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { handleLogin42 } from './AuthUtils';\nimport { useNotification } from '../../context/NotificationContext';\n\n\n\nconst SignUp = () => {\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n    const [email, setEmail] = useState('');\n    const [password2, setPassword2] = useState('');\n    \n  const { addNotification } = useNotification();\n  const navigate = useNavigate();\n\n  const handleSignUp = (e) => {\n    e.preventDefault();\n  \n    if (password !== password2) {\n      addNotification(\"Passwords do not match\", \"error\");\n      return;\n    }\n    else if (username.length < 3) {\n      addNotification(\"Username must be at least 3 characters long.\", \"warning\");\n      return ;\n    }\n    else if (!/^[a-zA-Z0-9]+$/.test(username)) {\n      addNotification(\"Username must be alphanumeric.\", \"warning\");\n      return ;\n    }\n    else if (password.length < 6) {\n      addNotification(\"Password must be at least 6 characters long\", \"warning\");\n      return;\n    }\n  \n    axios({\n      method: 'post',\n      url: 'http://localhost:8000/api/register/',\n      data: {\n        email: email,\n        password: password,\n        password2: password2,\n        display_name: username,\n      },\n    })\n    .then((data) => \n    {\n      console.log(data);\n      addNotification(\"Account created successfully! Please log in.\", \"success\");\n      navigate('/signIn');\n    })\n    .catch((error) => \n    {\n      if (error.response) \n      {\n        const errorData = error.response.data;\n        if (errorData.email) \n        {\n          addNotification(errorData.email[0], \"error\");\n        }\n        if (errorData.password) \n        {\n          addNotification(errorData.password[0], \"error\");\n        }\n      } \n      else \n      {\n        addNotification(\"Network error. Please check your connection.\", \"error\");\n      }\n    });\n  };\n\n\n    const handleClickCreateAccount = () =>{\n      navigate('/signIn')\n    }\n    return (\n      <div className='sup-container'>\n        <div className='sup-banner'><Banner /></div>\n        <div className='sup-container-content'>\n            <div className='sup-title-welcome'>Welcome Back</div>\n            <form action='submit' onSubmit={handleSignUp}>\n            <div>\n              <input\n                type=\"email\"\n                placeholder=\"Email\"\n                value={email}\n                onChange={(e) => {setEmail(e.target.value);}}\n                className='sup-input'\n              />\n            </div>\n            <div>\n              <input\n                  type=\"text\"\n                  placeholder=\"Username\"\n                  value={username}\n                  onChange={(e) => setUsername(e.target.value)}\n                  className='sup-input'\n                  />\n            </div>\n            <div>\n              <input\n                type=\"password\"\n                placeholder=\"Password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n                className='sup-input'\n                />\n            </div>\n            <div>\n              <input\n                  type=\"password\"\n                  placeholder=\"Confirm Password\"\n                  value={password2}\n                  onChange={(e) => setPassword2(e.target.value)}\n                  className='sup-input'\n                  />\n            </div>\n            {/* {error && <p className='sup-error' >{error}</p>} */}\n            <div><button type=\"submit\" className='sup-button-login'>Sign up</button>\n\n            </div>\n            <div className=\"sup-create-account\"><div> Already have an account?</div><div onClick={handleClickCreateAccount} className=\"sup-create-account-button\">Sign in</div></div>\n            <div className=\"sup-text-or\">Or</div>\n            <div className=\"sup-login-by\">\n              <div className=\"sup-login-intra\" onClick={handleLogin42}><Si42 /></div>\n            </div>\n            </form>\n        </div>\n          \n      </div> \n    );\n  };\n  \n  export default SignUp;"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/reportWebVitals.js",
      "content": "const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n"
    },
    {
      "path": "/Users/elliech/Desktop/testy/frontend/src/setupTests.js",
      "content": "// jest-dom adds custom jest matchers for asserting on DOM nodes.\n// allows you to do things like:\n// expect(element).toHaveTextContent(/react/i)\n// learn more: https://github.com/testing-library/jest-dom\nimport '@testing-library/jest-dom';\n"
    }
  ]
}